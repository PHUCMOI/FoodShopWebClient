{"ast":null,"code":"import acceptKey from './accept-key';\nimport toChartAxisRanges from './to-chart-axis-ranges';\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\nclass Pannable extends Class {\n  constructor(plotArea, options) {\n    super();\n    this.plotArea = plotArea;\n    this.options = deepExtend({}, this.options, options);\n  }\n  start(e) {\n    this._active = acceptKey(e, this.options.key);\n    return this._active;\n  }\n  move(e) {\n    if (this._active) {\n      const axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n      if (axisRanges.length) {\n        this.axisRanges = axisRanges;\n        return toChartAxisRanges(axisRanges);\n      }\n    }\n  }\n  end() {\n    const active = this._active;\n    this._active = false;\n    return active;\n  }\n  pan() {\n    const {\n      plotArea,\n      axisRanges\n    } = this;\n    if (axisRanges.length) {\n      for (let idx = 0; idx < axisRanges.length; idx++) {\n        const range = axisRanges[idx];\n        plotArea.updateAxisOptions(range.axis, range.range);\n      }\n      plotArea.redraw(plotArea.panes);\n    }\n  }\n  destroy() {\n    delete this.plotArea;\n  }\n  _panAxes(e, position) {\n    const plotArea = this.plotArea;\n    const delta = -e[position].delta;\n    const lock = (this.options.lock || \"\").toLowerCase();\n    const updatedAxes = [];\n    if (delta !== 0 && (lock || \"\").toLowerCase() !== position) {\n      const axes = plotArea.axes;\n      for (let idx = 0; idx < axes.length; idx++) {\n        const axis = axes[idx];\n        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n          const range = axis.pan(delta);\n          if (range) {\n            range.limitRange = true;\n            updatedAxes.push({\n              axis: axis,\n              range: range\n            });\n          }\n        }\n      }\n    }\n    return updatedAxes;\n  }\n}\nPannable.prototype.options = {\n  key: \"none\",\n  lock: \"none\"\n};\nexport default Pannable;","map":{"version":3,"names":["acceptKey","toChartAxisRanges","X","Y","Class","deepExtend","Pannable","constructor","plotArea","options","start","e","_active","key","move","axisRanges","_panAxes","concat","length","end","active","pan","idx","range","updateAxisOptions","axis","redraw","panes","destroy","position","delta","lock","toLowerCase","updatedAxes","axes","vertical","limitRange","push","prototype"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/pan-and-zoom/pannable.js"],"sourcesContent":["import acceptKey from './accept-key';\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\n\nclass Pannable extends Class {\n    constructor(plotArea, options) {\n        super();\n\n        this.plotArea = plotArea;\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    start(e) {\n        this._active = acceptKey(e, this.options.key);\n        return this._active;\n    }\n\n    move(e) {\n        if (this._active) {\n            const axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n            if (axisRanges.length) {\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            }\n        }\n    }\n\n    end() {\n        const active = this._active;\n        this._active = false;\n\n        return active;\n    }\n\n    pan() {\n        const { plotArea, axisRanges } = this;\n        if (axisRanges.length) {\n            for (let idx = 0; idx < axisRanges.length; idx++) {\n                const range = axisRanges[idx];\n                plotArea.updateAxisOptions(range.axis, range.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    }\n\n    destroy() {\n        delete this.plotArea;\n    }\n\n    _panAxes(e, position) {\n        const plotArea = this.plotArea;\n        const delta = -e[position].delta;\n        const lock = (this.options.lock || \"\").toLowerCase();\n        const updatedAxes = [];\n\n        if (delta !== 0 && (lock || \"\").toLowerCase() !== position) {\n            const axes = plotArea.axes;\n            for (let idx = 0; idx < axes.length; idx++) {\n                const axis = axes[idx];\n\n                if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                    const range = axis.pan(delta);\n\n                    if (range) {\n                        range.limitRange = true;\n                        updatedAxes.push({\n                            axis: axis,\n                            range: range\n                        });\n                    }\n                }\n            }\n        }\n\n        return updatedAxes;\n    }\n}\n\nPannable.prototype.options = {\n    key: \"none\",\n    lock: \"none\"\n};\n\nexport default Pannable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}