{"ast":null,"code":"import toChartAxisRanges from './to-chart-axis-ranges';\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\nimport { limitValue } from '../../drawing-utils';\n\n// Limit the zoom rate between 1% and 90% per mousewheel event.\n// At zoom rates close to 100% the axis range quickly becomes 0.\nconst MIN_RATE = 0.01;\nconst MAX_RATE = 0.9;\nconst DEFAULT_RATE = 0.3;\nclass MousewheelZoom extends Class {\n  constructor(chart, options) {\n    super();\n    this.chart = chart;\n    this.options = deepExtend({\n      rate: DEFAULT_RATE\n    }, this.options, options);\n  }\n  updateRanges(delta, coords) {\n    const lock = (this.options.lock || \"\").toLowerCase();\n    const axisRanges = [];\n    const axes = this.chart._plotArea.axes;\n    for (let idx = 0; idx < axes.length; idx++) {\n      const axis = axes[idx];\n      const vertical = axis.options.vertical;\n      if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n        const rate = limitValue(this.options.rate, MIN_RATE, MAX_RATE);\n        const range = axis.zoomRange(-delta * rate, coords);\n        if (range) {\n          axisRanges.push({\n            axis: axis,\n            range: range\n          });\n        }\n      }\n    }\n    this.axisRanges = axisRanges;\n    return toChartAxisRanges(axisRanges);\n  }\n  zoom() {\n    const axisRanges = this.axisRanges;\n    const plotArea = this.chart._plotArea;\n    if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n      for (let idx = 0; idx < axisRanges.length; idx++) {\n        const axisRange = axisRanges[idx];\n        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n      }\n      plotArea.redraw(plotArea.panes);\n    }\n  }\n  destroy() {\n    delete this.chart;\n  }\n}\nexport default MousewheelZoom;","map":{"version":3,"names":["toChartAxisRanges","X","Y","Class","deepExtend","limitValue","MIN_RATE","MAX_RATE","DEFAULT_RATE","MousewheelZoom","constructor","chart","options","rate","updateRanges","delta","coords","lock","toLowerCase","axisRanges","axes","_plotArea","idx","length","axis","vertical","zoomRange","range","push","zoom","plotArea","updateAxisOptions","axisRange","redraw","panes","destroy"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/pan-and-zoom/mousewheel-zoom.js"],"sourcesContent":["\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\nimport { limitValue } from '../../drawing-utils';\n\n// Limit the zoom rate between 1% and 90% per mousewheel event.\n// At zoom rates close to 100% the axis range quickly becomes 0.\nconst MIN_RATE = 0.01;\nconst MAX_RATE = 0.9;\nconst DEFAULT_RATE = 0.3;\n\nclass MousewheelZoom extends Class {\n    constructor(chart, options) {\n        super();\n\n        this.chart = chart;\n        this.options = deepExtend({\n            rate: DEFAULT_RATE\n        }, this.options, options);\n    }\n\n    updateRanges(delta, coords) {\n        const lock = (this.options.lock || \"\").toLowerCase();\n        const axisRanges = [];\n        const axes = this.chart._plotArea.axes;\n\n        for (let idx = 0; idx < axes.length; idx++) {\n            const axis = axes[idx];\n            const vertical = axis.options.vertical;\n\n            if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n                const rate = limitValue(this.options.rate, MIN_RATE, MAX_RATE);\n                const range = axis.zoomRange(-delta * rate, coords);\n\n                if (range) {\n                    axisRanges.push({\n                        axis: axis,\n                        range: range\n                    });\n                }\n            }\n        }\n\n        this.axisRanges = axisRanges;\n        return toChartAxisRanges(axisRanges);\n    }\n\n    zoom() {\n        const axisRanges = this.axisRanges;\n        const plotArea = this.chart._plotArea;\n\n        if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n            for (let idx = 0; idx < axisRanges.length; idx++) {\n                const axisRange = axisRanges[idx];\n                plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    }\n\n    destroy() {\n        delete this.chart;\n    }\n}\n\nexport default MousewheelZoom;\n"],"mappings":"AACA,OAAOA,iBAAiB,MAAM,wBAAwB;AAEtD,SAASC,CAAC,EAAEC,CAAC,QAAQ,wBAAwB;AAC7C,SAASC,KAAK,EAAEC,UAAU,QAAQ,cAAc;AAChD,SAASC,UAAU,QAAQ,qBAAqB;;AAEhD;AACA;AACA,MAAMC,QAAQ,GAAG,IAAI;AACrB,MAAMC,QAAQ,GAAG,GAAG;AACpB,MAAMC,YAAY,GAAG,GAAG;AAExB,MAAMC,cAAc,SAASN,KAAK,CAAC;EAC/BO,WAAWA,CAACC,KAAK,EAAEC,OAAO,EAAE;IACxB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGR,UAAU,CAAC;MACtBS,IAAI,EAAEL;IACV,CAAC,EAAE,IAAI,CAACI,OAAO,EAAEA,OAAO,CAAC;EAC7B;EAEAE,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACxB,MAAMC,IAAI,GAAG,CAAC,IAAI,CAACL,OAAO,CAACK,IAAI,IAAI,EAAE,EAAEC,WAAW,CAAC,CAAC;IACpD,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,IAAI,GAAG,IAAI,CAACT,KAAK,CAACU,SAAS,CAACD,IAAI;IAEtC,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,IAAI,CAACG,MAAM,EAAED,GAAG,EAAE,EAAE;MACxC,MAAME,IAAI,GAAGJ,IAAI,CAACE,GAAG,CAAC;MACtB,MAAMG,QAAQ,GAAGD,IAAI,CAACZ,OAAO,CAACa,QAAQ;MAEtC,IAAI,EAAER,IAAI,KAAKhB,CAAC,IAAI,CAACwB,QAAQ,CAAC,IAAI,EAAER,IAAI,KAAKf,CAAC,IAAIuB,QAAQ,CAAC,IAAID,IAAI,CAACE,SAAS,EAAE;QAC3E,MAAMb,IAAI,GAAGR,UAAU,CAAC,IAAI,CAACO,OAAO,CAACC,IAAI,EAAEP,QAAQ,EAAEC,QAAQ,CAAC;QAC9D,MAAMoB,KAAK,GAAGH,IAAI,CAACE,SAAS,CAAC,CAACX,KAAK,GAAGF,IAAI,EAAEG,MAAM,CAAC;QAEnD,IAAIW,KAAK,EAAE;UACPR,UAAU,CAACS,IAAI,CAAC;YACZJ,IAAI,EAAEA,IAAI;YACVG,KAAK,EAAEA;UACX,CAAC,CAAC;QACN;MACJ;IACJ;IAEA,IAAI,CAACR,UAAU,GAAGA,UAAU;IAC5B,OAAOnB,iBAAiB,CAACmB,UAAU,CAAC;EACxC;EAEAU,IAAIA,CAAA,EAAG;IACH,MAAMV,UAAU,GAAG,IAAI,CAACA,UAAU;IAClC,MAAMW,QAAQ,GAAG,IAAI,CAACnB,KAAK,CAACU,SAAS;IAErC,IAAIF,UAAU,IAAIA,UAAU,CAACI,MAAM,IAAIO,QAAQ,CAACC,iBAAiB,EAAE;MAC/D,KAAK,IAAIT,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,UAAU,CAACI,MAAM,EAAED,GAAG,EAAE,EAAE;QAC9C,MAAMU,SAAS,GAAGb,UAAU,CAACG,GAAG,CAAC;QACjCQ,QAAQ,CAACC,iBAAiB,CAACC,SAAS,CAACR,IAAI,EAAEQ,SAAS,CAACL,KAAK,CAAC;MAC/D;MACAG,QAAQ,CAACG,MAAM,CAACH,QAAQ,CAACI,KAAK,CAAC;IACnC;EACJ;EAEAC,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACxB,KAAK;EACrB;AACJ;AAEA,eAAeF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}