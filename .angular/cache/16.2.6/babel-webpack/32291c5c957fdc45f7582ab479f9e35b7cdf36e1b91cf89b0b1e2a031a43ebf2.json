{"ast":null,"code":"import { DomEventsBuilder } from '../services';\nimport { DateCategoryAxis, Point } from '../core';\nimport { MOUSEWHEEL_DELAY, MOUSEWHEEL, SELECT_START, SELECT, SELECT_END } from './constants';\nimport { LEFT, RIGHT, MIN_VALUE, MAX_VALUE, X } from '../common/constants';\nimport { addClass, Class, removeClass, eventCoordinates, deepExtend, elementStyles, eventElement, setDefaultOptions, limitValue, round, bindEvents, unbindEvents, mousewheelDelta, hasClasses } from '../common';\nimport { parseDate } from '../date-utils';\nconst ZOOM_ACCELERATION = 3;\nconst SELECTOR_HEIGHT_ADJUST = 0.1;\nfunction createDiv(classNames) {\n  const element = document.createElement(\"div\");\n  if (classNames) {\n    element.className = classNames;\n  }\n  return element;\n}\nfunction closestHandle(element) {\n  let current = element;\n  while (current && !hasClasses(current, \"k-handle\")) {\n    current = current.parentNode;\n  }\n  return current;\n}\nclass Selection extends Class {\n  constructor(chart, categoryAxis, options, observer) {\n    super();\n    const chartElement = chart.element;\n    this.options = deepExtend({}, this.options, options);\n    this.chart = chart;\n    this.observer = observer;\n    this.chartElement = chartElement;\n    this.categoryAxis = categoryAxis;\n    this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n    this.initOptions();\n    this.visible = this.options.visible && chartElement.offsetHeight;\n    if (this.visible) {\n      this.createElements();\n      this.set(this._index(this.options.from), this._index(this.options.to));\n      this.bindEvents();\n    }\n  }\n  onPane(pane) {\n    return this.categoryAxis.pane === pane;\n  }\n  createElements() {\n    const options = this.options;\n    const wrapper = this.wrapper = createDiv(\"k-selector k-pointer-events-none\");\n    elementStyles(wrapper, {\n      top: options.offset.top,\n      left: options.offset.left,\n      width: options.width,\n      height: options.height,\n      direction: 'ltr'\n    });\n    const selection = this.selection = createDiv(\"k-selection k-pointer-events-none\");\n    this.leftMask = createDiv(\"k-mask k-pointer-events-none\");\n    this.rightMask = createDiv(\"k-mask k-pointer-events-none\");\n    wrapper.appendChild(this.leftMask);\n    wrapper.appendChild(this.rightMask);\n    wrapper.appendChild(selection);\n    const body = this.body = createDiv(\"k-selection-bg k-pointer-events-none\");\n    selection.appendChild(body);\n    const leftHandle = this.leftHandle = createDiv(\"k-handle k-left-handle k-pointer-events-auto\");\n    const rightHandle = this.rightHandle = createDiv(\"k-handle k-right-handle k-pointer-events-auto\");\n    leftHandle.appendChild(createDiv());\n    rightHandle.appendChild(createDiv());\n    selection.appendChild(leftHandle);\n    selection.appendChild(rightHandle);\n    this.chartElement.appendChild(wrapper);\n    const selectionStyles = elementStyles(selection, [\"borderLeftWidth\", \"borderRightWidth\", \"height\"]);\n    const leftHandleHeight = elementStyles(leftHandle, \"height\").height;\n    const rightHandleHeight = elementStyles(rightHandle, \"height\").height;\n    options.selection = {\n      border: {\n        left: selectionStyles.borderLeftWidth,\n        right: selectionStyles.borderRightWidth\n      }\n    };\n    elementStyles(leftHandle, {\n      top: (selectionStyles.height - leftHandleHeight) / 2\n    });\n    elementStyles(rightHandle, {\n      top: (selectionStyles.height - rightHandleHeight) / 2\n    });\n\n    /* eslint no-self-assign: \"off\" */\n    wrapper.style.cssText = wrapper.style.cssText;\n  }\n  bindEvents() {\n    if (this.options.mousewheel !== false) {\n      this._mousewheelHandler = this._mousewheel.bind(this);\n      bindEvents(this.chartElement, {\n        [MOUSEWHEEL]: this._mousewheelHandler\n      });\n    }\n    this._domEvents = DomEventsBuilder.create(this.chartElement, {\n      stopPropagation: true,\n      // applicable for the jQuery UserEvents\n      start: this._start.bind(this),\n      move: this._move.bind(this),\n      end: this._end.bind(this),\n      tap: this._tap.bind(this),\n      press: this._press.bind(this),\n      gesturestart: this._gesturestart.bind(this),\n      gesturechange: this._gesturechange.bind(this),\n      gestureend: this._gestureend.bind(this)\n    });\n  }\n  initOptions() {\n    const {\n      options,\n      categoryAxis\n    } = this;\n    const box = categoryAxis.pane.chartsBox();\n    const intlService = this.chart.chartService.intl;\n    if (this._dateAxis) {\n      deepExtend(options, {\n        min: parseDate(intlService, options.min),\n        max: parseDate(intlService, options.max),\n        from: parseDate(intlService, options.from),\n        to: parseDate(intlService, options.to)\n      });\n    }\n    const {\n      paddingLeft,\n      paddingTop\n    } = elementStyles(this.chartElement, [\"paddingLeft\", \"paddingTop\"]);\n    this.options = deepExtend({}, {\n      width: box.width(),\n      height: box.height() + SELECTOR_HEIGHT_ADJUST,\n      //workaround for sub-pixel hover on the paths in chrome\n      padding: {\n        left: paddingLeft,\n        top: paddingTop\n      },\n      offset: {\n        left: box.x1 + paddingLeft,\n        top: box.y1 + paddingTop\n      },\n      from: options.min,\n      to: options.max\n    }, options);\n  }\n  destroy() {\n    if (this._domEvents) {\n      this._domEvents.destroy();\n      delete this._domEvents;\n    }\n    clearTimeout(this._mwTimeout);\n    this._state = null;\n    if (this.wrapper) {\n      if (this._mousewheelHandler) {\n        unbindEvents(this.chartElement, {\n          [MOUSEWHEEL]: this._mousewheelHandler\n        });\n        this._mousewheelHandler = null;\n      }\n      this.chartElement.removeChild(this.wrapper);\n      this.wrapper = null;\n    }\n  }\n  _rangeEventArgs(range) {\n    return {\n      axis: this.categoryAxis.options,\n      from: this._value(range.from),\n      to: this._value(range.to)\n    };\n  }\n  _pointInPane(x, y) {\n    const paneBox = this.categoryAxis.pane.box;\n    const modelCoords = this.chart._toModelCoordinates(x, y);\n    return paneBox.containsPoint(modelCoords);\n  }\n  _start(e) {\n    const options = this.options;\n    const target = eventElement(e);\n    if (this._state || !target) {\n      return;\n    }\n    const coords = eventCoordinates(e);\n    const inPane = this._pointInPane(coords.x, coords.y);\n    if (!inPane) {\n      return;\n    }\n    const handle = closestHandle(target);\n    const bodyRect = this.body.getBoundingClientRect();\n    const inBody = !handle && coords.x >= bodyRect.x && coords.x <= bodyRect.x + bodyRect.width && coords.y >= bodyRect.y && coords.y <= bodyRect.y + bodyRect.height;\n    this.chart._unsetActivePoint();\n    this._state = {\n      moveTarget: handle,\n      startLocation: e.x ? e.x.location : 0,\n      inBody,\n      range: {\n        from: this._index(options.from),\n        to: this._index(options.to)\n      }\n    };\n    const args = this._rangeEventArgs({\n      from: this._index(options.from),\n      to: this._index(options.to)\n    });\n    if (this.trigger(SELECT_START, args)) {\n      this._state = null;\n    }\n  }\n  _press(e) {\n    let handle;\n    if (this._state) {\n      handle = this._state.moveTarget;\n    } else {\n      handle = closestHandle(eventElement(e));\n    }\n    if (handle) {\n      addClass(handle, \"k-handle-active\");\n    }\n  }\n  _move(e) {\n    if (!this._state) {\n      return;\n    }\n    const {\n      _state: state,\n      options,\n      categoryAxis\n    } = this;\n    const {\n      range,\n      moveTarget: target\n    } = state;\n    const reverse = categoryAxis.options.reverse;\n    const from = this._index(options.from);\n    const to = this._index(options.to);\n    const min = this._index(options.min);\n    const max = this._index(options.max);\n    const delta = state.startLocation - e.x.location;\n    const oldRange = {\n      from: range.from,\n      to: range.to\n    };\n    const span = range.to - range.from;\n    const scale = elementStyles(this.wrapper, \"width\").width / (categoryAxis.categoriesCount() - 1);\n    const offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n    if (!target && !state.inBody) {\n      return;\n    }\n    const leftHandle = target && hasClasses(target, \"k-left-handle\");\n    const rightHandle = target && hasClasses(target, \"k-right-handle\");\n    if (state.inBody) {\n      range.from = Math.min(Math.max(min, from - offset), max - span);\n      range.to = Math.min(range.from + span, max);\n    } else if (leftHandle && !reverse || rightHandle && reverse) {\n      range.from = Math.min(Math.max(min, from - offset), max - 1);\n      range.to = Math.max(range.from + 1, range.to);\n    } else if (leftHandle && reverse || rightHandle && !reverse) {\n      range.to = Math.min(Math.max(min + 1, to - offset), max);\n      range.from = Math.min(range.to - 1, range.from);\n    }\n    if (range.from !== oldRange.from || range.to !== oldRange.to) {\n      this.move(range.from, range.to);\n      this.trigger(SELECT, this._rangeEventArgs(range));\n    }\n  }\n  _end() {\n    if (this._state) {\n      const moveTarget = this._state.moveTarget;\n      if (moveTarget) {\n        removeClass(moveTarget, \"k-handle-active\");\n      }\n      const range = this._state.range;\n      this.set(range.from, range.to);\n      this.trigger(SELECT_END, this._rangeEventArgs(range));\n      delete this._state;\n    }\n  }\n  _tap(e) {\n    const {\n      options,\n      categoryAxis\n    } = this;\n    const coords = this.chart._eventCoordinates(e);\n    const categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n    const from = this._index(options.from);\n    const to = this._index(options.to);\n    const min = this._index(options.min);\n    const max = this._index(options.max);\n    const span = to - from;\n    const mid = from + span / 2;\n    const range = {};\n    const rightClick = e.event.which === 3;\n    let offset = Math.round(mid - categoryIx);\n    if (this._state || rightClick) {\n      return;\n    }\n    this.chart._unsetActivePoint();\n    if (!categoryAxis.options.justified) {\n      offset--;\n    }\n    range.from = Math.min(Math.max(min, from - offset), max - span);\n    range.to = Math.min(range.from + span, max);\n    this._start(e);\n    if (this._state) {\n      this._state.range = range;\n      this.trigger(SELECT, this._rangeEventArgs(range));\n      this._end();\n    }\n  }\n  _mousewheel(e) {\n    let delta = mousewheelDelta(e);\n    this._start(e);\n    if (this._state) {\n      const range = this._state.range;\n      e.preventDefault();\n      e.stopPropagation();\n      if (Math.abs(delta) > 1) {\n        delta *= ZOOM_ACCELERATION;\n      }\n      if (this.options.mousewheel.reverse) {\n        delta *= -1;\n      }\n      if (this.expand(delta)) {\n        this.trigger(SELECT, {\n          axis: this.categoryAxis.options,\n          delta: delta,\n          originalEvent: e,\n          from: this._value(range.from),\n          to: this._value(range.to)\n        });\n      }\n      if (this._mwTimeout) {\n        clearTimeout(this._mwTimeout);\n      }\n      this._mwTimeout = setTimeout(() => {\n        this._end();\n      }, MOUSEWHEEL_DELAY);\n    }\n  }\n  _gesturestart(e) {\n    const options = this.options;\n    const touch = e.touches[0];\n    const inPane = this._pointInPane(touch.pageX, touch.pageY);\n    if (!inPane) {\n      return;\n    }\n    this._state = {\n      range: {\n        from: this._index(options.from),\n        to: this._index(options.to)\n      }\n    };\n    const args = this._rangeEventArgs(this._state.range);\n    if (this.trigger(SELECT_START, args)) {\n      this._state = null;\n    } else {\n      e.preventDefault();\n    }\n  }\n  _gestureend() {\n    if (this._state) {\n      this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n      delete this._state;\n    }\n  }\n  _gesturechange(e) {\n    if (!this._state) {\n      return;\n    }\n    const {\n      chart,\n      _state: state,\n      options,\n      categoryAxis\n    } = this;\n    const range = state.range;\n    const p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n    const p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n    const left = Math.min(p0, p1);\n    const right = Math.max(p0, p1);\n    e.preventDefault();\n    range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n    range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n    this.move(range.from, range.to);\n    this.trigger(SELECT, this._rangeEventArgs(range));\n  }\n  _index(value) {\n    let index = value;\n    if (value instanceof Date) {\n      index = this.categoryAxis.categoryIndex(value);\n    }\n    return index;\n  }\n  _value(index) {\n    let value = index;\n    if (this._dateAxis) {\n      value = this.categoryAxis.categoryAt(index);\n      if (value > this.options.max) {\n        value = this.options.max;\n      }\n    }\n    return value;\n  }\n  _slot(value) {\n    const categoryAxis = this.categoryAxis;\n    const index = this._index(value);\n    return categoryAxis.getSlot(index, index, true);\n  }\n  move(from, to) {\n    const options = this.options;\n    const reverse = this.categoryAxis.options.reverse;\n    const {\n      offset,\n      padding,\n      selection: {\n        border\n      }\n    } = options;\n    const left = reverse ? to : from;\n    const right = reverse ? from : to;\n    const edge = 'x' + (reverse ? 2 : 1);\n    let box = this._slot(left);\n    const leftMaskWidth = round(box[edge] - offset.left + padding.left);\n    elementStyles(this.leftMask, {\n      width: leftMaskWidth\n    });\n    elementStyles(this.selection, {\n      left: leftMaskWidth\n    });\n    box = this._slot(right);\n    const rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n    elementStyles(this.rightMask, {\n      width: rightMaskWidth\n    });\n    let distance = options.width - rightMaskWidth;\n    if (distance !== options.width) {\n      distance += border.right;\n    }\n    elementStyles(this.rightMask, {\n      left: distance\n    });\n    elementStyles(this.selection, {\n      width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0)\n    });\n  }\n  set(from, to) {\n    const options = this.options;\n    const min = this._index(options.min);\n    const max = this._index(options.max);\n    const fromValue = limitValue(this._index(from), min, max);\n    const toValue = limitValue(this._index(to), fromValue + 1, max);\n    if (options.visible) {\n      this.move(fromValue, toValue);\n    }\n    options.from = this._value(fromValue);\n    options.to = this._value(toValue);\n  }\n  expand(delta) {\n    const options = this.options;\n    const min = this._index(options.min);\n    const max = this._index(options.max);\n    const zDir = options.mousewheel.zoom;\n    const from = this._index(options.from);\n    const to = this._index(options.to);\n    let range = {\n      from: from,\n      to: to\n    };\n    const oldRange = deepExtend({}, range);\n    if (this._state) {\n      range = this._state.range;\n    }\n    if (zDir !== RIGHT) {\n      range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n    }\n    if (zDir !== LEFT) {\n      range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n    }\n    if (range.from !== oldRange.from || range.to !== oldRange.to) {\n      this.set(range.from, range.to);\n      return true;\n    }\n  }\n  zoom(delta, coords) {\n    const options = this.options;\n    const min = this._index(options.min);\n    const max = this._index(options.max);\n    const from = this._index(options.from);\n    const to = this._index(options.to);\n    let range = {\n      from: from,\n      to: to\n    };\n    const oldRange = deepExtend({}, range);\n    const {\n      reverse\n    } = this.categoryAxis.options;\n    const origin = X + (reverse ? '2' : '1');\n    const lineBox = this.categoryAxis.lineBox();\n    const relative = Math.abs(lineBox[origin] - coords[X]);\n    const size = lineBox.width();\n    const position = round(relative / size, 2);\n    const minDelta = round(position * delta);\n    const maxDelta = round((1 - position) * delta);\n    if (this._state) {\n      range = this._state.range;\n    }\n    range.from = limitValue(limitValue(from - minDelta, 0, to - 1), min, max);\n    range.to = limitValue(limitValue(to + maxDelta, range.from + 1, max), min, max);\n    if (range.from !== oldRange.from || range.to !== oldRange.to) {\n      this.set(range.from, range.to);\n      return true;\n    }\n  }\n  trigger(name, args) {\n    return (this.observer || this.chart).trigger(name, args);\n  }\n}\nsetDefaultOptions(Selection, {\n  visible: true,\n  mousewheel: {\n    zoom: \"both\"\n  },\n  min: MIN_VALUE,\n  max: MAX_VALUE\n});\nexport default Selection;","map":{"version":3,"names":["DomEventsBuilder","DateCategoryAxis","Point","MOUSEWHEEL_DELAY","MOUSEWHEEL","SELECT_START","SELECT","SELECT_END","LEFT","RIGHT","MIN_VALUE","MAX_VALUE","X","addClass","Class","removeClass","eventCoordinates","deepExtend","elementStyles","eventElement","setDefaultOptions","limitValue","round","bindEvents","unbindEvents","mousewheelDelta","hasClasses","parseDate","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","createDiv","classNames","element","document","createElement","className","closestHandle","current","parentNode","Selection","constructor","chart","categoryAxis","options","observer","chartElement","_dateAxis","initOptions","visible","offsetHeight","createElements","set","_index","from","to","onPane","pane","wrapper","top","offset","left","width","height","direction","selection","leftMask","rightMask","appendChild","body","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","border","borderLeftWidth","right","borderRightWidth","style","cssText","mousewheel","_mousewheelHandler","_mousewheel","bind","_domEvents","create","stopPropagation","start","_start","move","_move","end","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","box","chartsBox","intlService","chartService","intl","min","max","paddingLeft","paddingTop","padding","x1","y1","destroy","clearTimeout","_mwTimeout","_state","removeChild","_rangeEventArgs","range","axis","_value","_pointInPane","x","y","paneBox","modelCoords","_toModelCoordinates","containsPoint","e","target","coords","inPane","handle","bodyRect","getBoundingClientRect","inBody","_unsetActivePoint","moveTarget","startLocation","location","args","trigger","state","reverse","delta","oldRange","span","scale","categoriesCount","Math","_eventCoordinates","categoryIx","pointCategoryIndex","mid","rightClick","event","which","justified","preventDefault","abs","expand","originalEvent","setTimeout","touch","touches","pageX","pageY","p0","p1","value","index","Date","categoryIndex","categoryAt","_slot","getSlot","edge","leftMaskWidth","rightMaskWidth","distance","fromValue","toValue","zDir","zoom","origin","lineBox","relative","size","position","minDelta","maxDelta","name"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/selection.js"],"sourcesContent":["import { DomEventsBuilder } from '../services';\n\nimport { DateCategoryAxis, Point } from '../core';\n\nimport { MOUSEWHEEL_DELAY, MOUSEWHEEL, SELECT_START, SELECT, SELECT_END } from './constants';\n\nimport { LEFT, RIGHT, MIN_VALUE, MAX_VALUE, X } from '../common/constants';\nimport { addClass, Class, removeClass, eventCoordinates, deepExtend, elementStyles, eventElement, setDefaultOptions, limitValue, round, bindEvents, unbindEvents, mousewheelDelta, hasClasses } from '../common';\nimport { parseDate } from '../date-utils';\n\nconst ZOOM_ACCELERATION = 3;\nconst SELECTOR_HEIGHT_ADJUST = 0.1;\n\nfunction createDiv(classNames) {\n    const element = document.createElement(\"div\");\n    if (classNames) {\n        element.className = classNames;\n    }\n\n    return element;\n}\n\nfunction closestHandle(element) {\n    let current = element;\n    while (current && !hasClasses(current, \"k-handle\")) {\n        current = current.parentNode;\n    }\n\n    return current;\n}\n\nclass Selection extends Class {\n    constructor(chart, categoryAxis, options, observer) {\n        super();\n\n        const chartElement = chart.element;\n\n        this.options = deepExtend({}, this.options, options);\n        this.chart = chart;\n        this.observer = observer;\n        this.chartElement = chartElement;\n        this.categoryAxis = categoryAxis;\n        this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n\n        this.initOptions();\n\n        this.visible = this.options.visible && chartElement.offsetHeight;\n\n        if (this.visible) {\n            this.createElements();\n\n            this.set(this._index(this.options.from), this._index(this.options.to));\n\n            this.bindEvents();\n        }\n    }\n\n    onPane(pane) {\n        return this.categoryAxis.pane === pane;\n    }\n\n    createElements() {\n        const options = this.options;\n        const wrapper = this.wrapper = createDiv(\"k-selector k-pointer-events-none\");\n        elementStyles(wrapper, {\n            top: options.offset.top,\n            left: options.offset.left,\n            width: options.width,\n            height: options.height,\n            direction: 'ltr'\n        });\n\n        const selection = this.selection = createDiv(\"k-selection k-pointer-events-none\");\n\n        this.leftMask = createDiv(\"k-mask k-pointer-events-none\");\n        this.rightMask = createDiv(\"k-mask k-pointer-events-none\");\n\n        wrapper.appendChild(this.leftMask);\n        wrapper.appendChild(this.rightMask);\n        wrapper.appendChild(selection);\n\n        const body = this.body = createDiv(\"k-selection-bg k-pointer-events-none\");\n        selection.appendChild(body);\n\n        const leftHandle = this.leftHandle = createDiv(\"k-handle k-left-handle k-pointer-events-auto\");\n        const rightHandle = this.rightHandle = createDiv(\"k-handle k-right-handle k-pointer-events-auto\");\n        leftHandle.appendChild(createDiv());\n        rightHandle.appendChild(createDiv());\n\n        selection.appendChild(leftHandle);\n        selection.appendChild(rightHandle);\n\n        this.chartElement.appendChild(wrapper);\n        const selectionStyles = elementStyles(selection, [ \"borderLeftWidth\", \"borderRightWidth\", \"height\" ]);\n        const leftHandleHeight = elementStyles(leftHandle, \"height\").height;\n        const rightHandleHeight = elementStyles(rightHandle, \"height\").height;\n\n        options.selection = {\n            border: {\n                left: selectionStyles.borderLeftWidth,\n                right: selectionStyles.borderRightWidth\n            }\n        };\n\n        elementStyles(leftHandle, {\n            top: (selectionStyles.height - leftHandleHeight) / 2\n        });\n\n        elementStyles(rightHandle, {\n            top: (selectionStyles.height - rightHandleHeight) / 2\n        });\n\n        /* eslint no-self-assign: \"off\" */\n        wrapper.style.cssText = wrapper.style.cssText;\n    }\n\n    bindEvents() {\n        if (this.options.mousewheel !== false) {\n            this._mousewheelHandler = this._mousewheel.bind(this);\n            bindEvents(this.chartElement, {\n                [ MOUSEWHEEL ]: this._mousewheelHandler\n            });\n        }\n\n        this._domEvents = DomEventsBuilder.create(this.chartElement, {\n            stopPropagation: true, // applicable for the jQuery UserEvents\n            start: this._start.bind(this),\n            move: this._move.bind(this),\n            end: this._end.bind(this),\n            tap: this._tap.bind(this),\n            press: this._press.bind(this),\n            gesturestart: this._gesturestart.bind(this),\n            gesturechange: this._gesturechange.bind(this),\n            gestureend: this._gestureend.bind(this)\n        });\n    }\n\n    initOptions() {\n        const { options, categoryAxis } = this;\n        const box = categoryAxis.pane.chartsBox();\n        const intlService = this.chart.chartService.intl;\n\n        if (this._dateAxis) {\n            deepExtend(options, {\n                min: parseDate(intlService, options.min),\n                max: parseDate(intlService, options.max),\n                from: parseDate(intlService, options.from),\n                to: parseDate(intlService, options.to)\n            });\n        }\n\n        const { paddingLeft, paddingTop } = elementStyles(this.chartElement, [ \"paddingLeft\", \"paddingTop\" ]);\n\n        this.options = deepExtend({}, {\n            width: box.width(),\n            height: box.height() + SELECTOR_HEIGHT_ADJUST, //workaround for sub-pixel hover on the paths in chrome\n            padding: {\n                left: paddingLeft,\n                top: paddingTop\n            },\n            offset: {\n                left: box.x1 + paddingLeft,\n                top: box.y1 + paddingTop\n            },\n            from: options.min,\n            to: options.max\n        }, options);\n    }\n\n    destroy() {\n        if (this._domEvents) {\n            this._domEvents.destroy();\n            delete this._domEvents;\n        }\n\n        clearTimeout(this._mwTimeout);\n        this._state = null;\n\n        if (this.wrapper) {\n            if (this._mousewheelHandler) {\n                unbindEvents(this.chartElement, {\n                    [ MOUSEWHEEL ]: this._mousewheelHandler\n                });\n                this._mousewheelHandler = null;\n            }\n\n            this.chartElement.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    _rangeEventArgs(range) {\n\n        return {\n            axis: this.categoryAxis.options,\n            from: this._value(range.from),\n            to: this._value(range.to)\n        };\n    }\n\n    _pointInPane(x, y) {\n        const paneBox = this.categoryAxis.pane.box;\n        const modelCoords = this.chart._toModelCoordinates(x, y);\n        return paneBox.containsPoint(modelCoords);\n    }\n\n    _start(e) {\n        const options = this.options;\n        const target = eventElement(e);\n        if (this._state || !target) {\n            return;\n        }\n\n        const coords = eventCoordinates(e);\n        const inPane = this._pointInPane(coords.x, coords.y);\n        if (!inPane) {\n            return;\n        }\n\n        const handle = closestHandle(target);\n        const bodyRect = this.body.getBoundingClientRect();\n        const inBody = !handle && coords.x >= bodyRect.x && coords.x <= bodyRect.x + bodyRect.width &&\n                       coords.y >= bodyRect.y && coords.y <= bodyRect.y + bodyRect.height;\n\n        this.chart._unsetActivePoint();\n        this._state = {\n            moveTarget: handle,\n            startLocation: e.x ? e.x.location : 0,\n            inBody,\n            range: {\n                from: this._index(options.from),\n                to: this._index(options.to)\n            }\n        };\n\n        const args = this._rangeEventArgs({\n            from: this._index(options.from),\n            to: this._index(options.to)\n        });\n\n        if (this.trigger(SELECT_START, args)) {\n            this._state = null;\n        }\n    }\n\n    _press(e) {\n        let handle;\n        if (this._state) {\n            handle = this._state.moveTarget;\n        } else {\n            handle = closestHandle(eventElement(e));\n        }\n        if (handle) {\n            addClass(handle, \"k-handle-active\");\n        }\n    }\n\n    _move(e) {\n        if (!this._state) {\n            return;\n        }\n\n        const { _state: state, options, categoryAxis } = this;\n        const { range, moveTarget: target } = state;\n        const reverse = categoryAxis.options.reverse;\n        const from = this._index(options.from);\n        const to = this._index(options.to);\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const delta = state.startLocation - e.x.location;\n        const oldRange = { from: range.from, to: range.to };\n        const span = range.to - range.from;\n        const scale = elementStyles(this.wrapper, \"width\").width / (categoryAxis.categoriesCount() - 1);\n        const offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n\n        if (!target && !state.inBody) {\n            return;\n        }\n\n        const leftHandle = target && hasClasses(target, \"k-left-handle\");\n        const rightHandle = target && hasClasses(target, \"k-right-handle\");\n\n        if (state.inBody) {\n            range.from = Math.min(\n                Math.max(min, from - offset),\n                max - span\n            );\n            range.to = Math.min(\n                range.from + span,\n                max\n            );\n        } else if ((leftHandle && !reverse) || (rightHandle && reverse)) {\n            range.from = Math.min(\n                Math.max(min, from - offset),\n                max - 1\n            );\n            range.to = Math.max(range.from + 1, range.to);\n        } else if ((leftHandle && reverse) || (rightHandle && !reverse)) {\n            range.to = Math.min(\n                Math.max(min + 1, to - offset),\n                max\n            );\n            range.from = Math.min(range.to - 1, range.from);\n        }\n\n        if (range.from !== oldRange.from || range.to !== oldRange.to) {\n            this.move(range.from, range.to);\n            this.trigger(SELECT, this._rangeEventArgs(range));\n        }\n    }\n\n    _end() {\n        if (this._state) {\n            const moveTarget = this._state.moveTarget;\n            if (moveTarget) {\n                removeClass(moveTarget, \"k-handle-active\");\n            }\n\n            const range = this._state.range;\n            this.set(range.from, range.to);\n            this.trigger(SELECT_END, this._rangeEventArgs(range));\n\n            delete this._state;\n        }\n    }\n\n    _tap(e) {\n        const { options, categoryAxis } = this;\n        const coords = this.chart._eventCoordinates(e);\n        const categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n        const from = this._index(options.from);\n        const to = this._index(options.to);\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const span = to - from;\n        const mid = from + span / 2;\n        const range = {};\n        const rightClick = e.event.which === 3;\n        let offset = Math.round(mid - categoryIx);\n\n        if (this._state || rightClick) {\n            return;\n        }\n\n\n        this.chart._unsetActivePoint();\n\n        if (!categoryAxis.options.justified) {\n            offset--;\n        }\n\n        range.from = Math.min(\n            Math.max(min, from - offset),\n            max - span\n        );\n\n        range.to = Math.min(range.from + span, max);\n\n        this._start(e);\n\n        if (this._state) {\n            this._state.range = range;\n            this.trigger(SELECT, this._rangeEventArgs(range));\n            this._end();\n        }\n    }\n\n    _mousewheel(e) {\n        let delta = mousewheelDelta(e);\n\n        this._start(e);\n\n        if (this._state) {\n            const range = this._state.range;\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (Math.abs(delta) > 1) {\n                delta *= ZOOM_ACCELERATION;\n            }\n\n            if (this.options.mousewheel.reverse) {\n                delta *= -1;\n            }\n\n            if (this.expand(delta)) {\n                this.trigger(SELECT, {\n                    axis: this.categoryAxis.options,\n                    delta: delta,\n                    originalEvent: e,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                });\n            }\n\n            if (this._mwTimeout) {\n                clearTimeout(this._mwTimeout);\n            }\n\n            this._mwTimeout = setTimeout(() => {\n                this._end();\n            }, MOUSEWHEEL_DELAY);\n        }\n    }\n\n    _gesturestart(e) {\n        const options = this.options;\n        const touch = e.touches[0];\n        const inPane = this._pointInPane(touch.pageX, touch.pageY);\n\n        if (!inPane) {\n            return;\n        }\n\n        this._state = {\n            range: {\n                from: this._index(options.from),\n                to: this._index(options.to)\n            }\n        };\n        const args = this._rangeEventArgs(this._state.range);\n\n        if (this.trigger(SELECT_START, args)) {\n            this._state = null;\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    _gestureend() {\n        if (this._state) {\n            this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n            delete this._state;\n        }\n    }\n\n    _gesturechange(e) {\n        if (!this._state) {\n            return;\n        }\n\n        const { chart, _state: state, options, categoryAxis } = this;\n        const range = state.range;\n        const p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n        const p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n        const left = Math.min(p0, p1);\n        const right = Math.max(p0, p1);\n\n        e.preventDefault();\n\n        range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n\n        range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n\n        this.move(range.from, range.to);\n\n        this.trigger(SELECT, this._rangeEventArgs(range));\n    }\n\n    _index(value) {\n        let index = value;\n\n        if (value instanceof Date) {\n            index = this.categoryAxis.categoryIndex(value);\n        }\n\n        return index;\n    }\n\n    _value(index) {\n        let value = index;\n        if (this._dateAxis) {\n            value = this.categoryAxis.categoryAt(index);\n            if (value > this.options.max) {\n                value = this.options.max;\n            }\n        }\n\n        return value;\n    }\n\n    _slot(value) {\n        const categoryAxis = this.categoryAxis;\n        const index = this._index(value);\n\n        return categoryAxis.getSlot(index, index, true);\n    }\n\n    move(from, to) {\n        const options = this.options;\n        const reverse = this.categoryAxis.options.reverse;\n        const { offset, padding, selection: { border } } = options;\n        const left = reverse ? to : from;\n        const right = reverse ? from : to;\n        const edge = 'x' + (reverse ? 2 : 1);\n\n        let box = this._slot(left);\n        const leftMaskWidth = round(box[edge] - offset.left + padding.left);\n\n        elementStyles(this.leftMask, {\n            width: leftMaskWidth\n        });\n        elementStyles(this.selection, {\n            left: leftMaskWidth\n        });\n\n        box = this._slot(right);\n\n        const rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n        elementStyles(this.rightMask, {\n            width: rightMaskWidth\n        });\n\n        let distance = options.width - rightMaskWidth;\n        if (distance !== options.width) {\n            distance += border.right;\n        }\n\n        elementStyles(this.rightMask, {\n            left: distance\n        });\n        elementStyles(this.selection, {\n            width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0)\n        });\n    }\n\n    set(from, to) {\n        const options = this.options;\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const fromValue = limitValue(this._index(from), min, max);\n        const toValue = limitValue(this._index(to), fromValue + 1, max);\n\n        if (options.visible) {\n            this.move(fromValue, toValue);\n        }\n\n        options.from = this._value(fromValue);\n        options.to = this._value(toValue);\n    }\n\n    expand(delta) {\n        const options = this.options;\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const zDir = options.mousewheel.zoom;\n        const from = this._index(options.from);\n        const to = this._index(options.to);\n        let range = { from: from, to: to };\n        const oldRange = deepExtend({}, range);\n\n        if (this._state) {\n            range = this._state.range;\n        }\n\n        if (zDir !== RIGHT) {\n            range.from = limitValue(\n                limitValue(from - delta, 0, to - 1),\n                min, max\n            );\n        }\n\n        if (zDir !== LEFT) {\n            range.to = limitValue(\n                limitValue(to + delta, range.from + 1, max),\n                min,\n                max\n            );\n        }\n\n        if (range.from !== oldRange.from || range.to !== oldRange.to) {\n            this.set(range.from, range.to);\n            return true;\n        }\n    }\n\n    zoom(delta, coords) {\n        const options = this.options;\n        const min = this._index(options.min);\n        const max = this._index(options.max);\n        const from = this._index(options.from);\n        const to = this._index(options.to);\n        let range = { from: from, to: to };\n        const oldRange = deepExtend({}, range);\n\n        const { reverse } = this.categoryAxis.options;\n        const origin = X + (reverse ? '2' : '1');\n        const lineBox = this.categoryAxis.lineBox();\n        const relative = Math.abs(lineBox[origin] - coords[X]);\n        const size = lineBox.width();\n        const position = round(relative / size, 2);\n        const minDelta = round(position * delta);\n        const maxDelta = round((1 - position) * delta);\n\n        if (this._state) {\n            range = this._state.range;\n        }\n\n        range.from = limitValue(\n            limitValue(from - minDelta, 0, to - 1),\n            min, max\n        );\n\n        range.to = limitValue(\n            limitValue(to + maxDelta, range.from + 1, max),\n            min,\n            max\n        );\n\n        if (range.from !== oldRange.from || range.to !== oldRange.to) {\n            this.set(range.from, range.to);\n            return true;\n        }\n    }\n\n    trigger(name, args) {\n        return (this.observer || this.chart).trigger(name, args);\n    }\n}\n\nsetDefaultOptions(Selection, {\n    visible: true,\n    mousewheel: {\n        zoom: \"both\"\n    },\n    min: MIN_VALUE,\n    max: MAX_VALUE\n});\n\nexport default Selection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}