{"ast":null,"code":"import { adjustDST } from './adjust-dst';\nimport { cloneDate } from './clone-date';\nimport { lastDayOfMonth } from './last-day-of-month';\nconst MONTHS_LENGTH = 12;\nconst normalize = (date, expectedMonth) => date.getMonth() !== expectedMonth ? lastDayOfMonth(addMonths(date, -1)) : date //tslint:disable-line:no-use-before-declare\n;\n/**\n * A function that adds and subtracts months from a `Date` object.\n *\n * @param date - The initial date value.\n * @param offset - The number of months to add or subtract from the date.\n * @returns - A new `Date` instance.\n *\n * @example\n * ```ts-no-run\n * addMonths(new Date(2016, 5, 1), 5); // 2016-11-1\n * addMonths(new Date(2016, 5, 1), -5); // 2015-1-1\n * ```\n */\nexport const addMonths = (date, offset) => {\n  const newDate = cloneDate(date);\n  const diff = (newDate.getMonth() + offset) % MONTHS_LENGTH;\n  const expectedMonth = (MONTHS_LENGTH + diff) % MONTHS_LENGTH;\n  newDate.setMonth(newDate.getMonth() + offset);\n  return normalize(adjustDST(newDate, date.getHours()), expectedMonth);\n};","map":{"version":3,"names":["adjustDST","cloneDate","lastDayOfMonth","MONTHS_LENGTH","normalize","date","expectedMonth","getMonth","addMonths","offset","newDate","diff","setMonth","getHours"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-date-math/dist/es2015/add-months.js"],"sourcesContent":["import { adjustDST } from './adjust-dst';\nimport { cloneDate } from './clone-date';\nimport { lastDayOfMonth } from './last-day-of-month';\nconst MONTHS_LENGTH = 12;\nconst normalize = (date, expectedMonth) => (date.getMonth() !== expectedMonth ? lastDayOfMonth(addMonths(date, -1)) : date //tslint:disable-line:no-use-before-declare\n);\n/**\n * A function that adds and subtracts months from a `Date` object.\n *\n * @param date - The initial date value.\n * @param offset - The number of months to add or subtract from the date.\n * @returns - A new `Date` instance.\n *\n * @example\n * ```ts-no-run\n * addMonths(new Date(2016, 5, 1), 5); // 2016-11-1\n * addMonths(new Date(2016, 5, 1), -5); // 2015-1-1\n * ```\n */\nexport const addMonths = (date, offset) => {\n    const newDate = cloneDate(date);\n    const diff = (newDate.getMonth() + offset) % MONTHS_LENGTH;\n    const expectedMonth = (MONTHS_LENGTH + diff) % MONTHS_LENGTH;\n    newDate.setMonth(newDate.getMonth() + offset);\n    return normalize(adjustDST(newDate, date.getHours()), expectedMonth);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,MAAMC,aAAa,GAAG,EAAE;AACxB,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAEC,aAAa,KAAMD,IAAI,CAACE,QAAQ,CAAC,CAAC,KAAKD,aAAa,GAAGJ,cAAc,CAACM,SAAS,CAACH,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC;AAC1H;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,SAAS,GAAGA,CAACH,IAAI,EAAEI,MAAM,KAAK;EACvC,MAAMC,OAAO,GAAGT,SAAS,CAACI,IAAI,CAAC;EAC/B,MAAMM,IAAI,GAAG,CAACD,OAAO,CAACH,QAAQ,CAAC,CAAC,GAAGE,MAAM,IAAIN,aAAa;EAC1D,MAAMG,aAAa,GAAG,CAACH,aAAa,GAAGQ,IAAI,IAAIR,aAAa;EAC5DO,OAAO,CAACE,QAAQ,CAACF,OAAO,CAACH,QAAQ,CAAC,CAAC,GAAGE,MAAM,CAAC;EAC7C,OAAOL,SAAS,CAACJ,SAAS,CAACU,OAAO,EAAEL,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAAC,EAAEP,aAAa,CAAC;AACxE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}