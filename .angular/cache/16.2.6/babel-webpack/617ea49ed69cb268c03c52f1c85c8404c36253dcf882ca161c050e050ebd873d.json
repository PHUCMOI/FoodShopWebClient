{"ast":null,"code":"import QuadRoot from './quad-root';\nimport { Rect } from '../geometry';\nimport { append } from '../util';\nclass QuadNode extends QuadRoot {\n  constructor(rect) {\n    super();\n    this.children = [];\n    this.rect = rect;\n  }\n  inBounds(rect) {\n    const nodeRect = this.rect;\n    const nodeBottomRight = nodeRect.bottomRight();\n    const bottomRight = rect.bottomRight();\n    const inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n    return inBounds;\n  }\n  pointShapes(point) {\n    const children = this.children;\n    const length = children.length;\n    const result = super.pointShapes(point);\n    for (let idx = 0; idx < length; idx++) {\n      append(result, children[idx].pointShapes(point));\n    }\n    return result;\n  }\n  insert(shape, bbox) {\n    const children = this.children;\n    let inserted = false;\n    if (this.inBounds(bbox)) {\n      if (this.shapes.length < 4) {\n        this._add(shape, bbox);\n      } else {\n        if (!children.length) {\n          this._initChildren();\n        }\n        for (let idx = 0; idx < children.length; idx++) {\n          if (children[idx].insert(shape, bbox)) {\n            inserted = true;\n            break;\n          }\n        }\n        if (!inserted) {\n          this._add(shape, bbox);\n        }\n      }\n      inserted = true;\n    }\n    return inserted;\n  }\n  _initChildren() {\n    const {\n      rect,\n      children\n    } = this;\n    const center = rect.center();\n    const halfWidth = rect.width() / 2;\n    const halfHeight = rect.height() / 2;\n    children.push(new QuadNode(new Rect([rect.origin.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([rect.origin.x, center.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, center.y], [halfWidth, halfHeight])));\n  }\n}\nexport default QuadNode;","map":{"version":3,"names":["QuadRoot","Rect","append","QuadNode","constructor","rect","children","inBounds","nodeRect","nodeBottomRight","bottomRight","origin","x","y","pointShapes","point","length","result","idx","insert","shape","bbox","inserted","shapes","_add","_initChildren","center","halfWidth","width","halfHeight","height","push"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/search/quad-node.js"],"sourcesContent":["import QuadRoot from './quad-root';\nimport { Rect } from '../geometry';\nimport { append } from '../util';\n\nclass QuadNode extends QuadRoot {\n    constructor(rect) {\n        super();\n        this.children = [];\n        this.rect = rect;\n    }\n\n    inBounds(rect) {\n        const nodeRect = this.rect;\n        const nodeBottomRight = nodeRect.bottomRight();\n        const bottomRight = rect.bottomRight();\n        const inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x &&\n            bottomRight.y <= nodeBottomRight.y;\n        return inBounds;\n    }\n\n    pointShapes(point) {\n        const children = this.children;\n        const length = children.length;\n        const result = super.pointShapes(point);\n        for (let idx = 0; idx < length; idx++) {\n            append(result, children[idx].pointShapes(point));\n        }\n        return result;\n    }\n\n    insert(shape, bbox) {\n        const children = this.children;\n        let inserted = false;\n\n        if (this.inBounds(bbox)) {\n            if (this.shapes.length < 4) {\n                this._add(shape, bbox);\n            } else {\n                if (!children.length) {\n                    this._initChildren();\n                }\n\n                for (let idx = 0; idx < children.length; idx++) {\n                    if (children[idx].insert(shape, bbox)) {\n                        inserted = true;\n                        break;\n                    }\n                }\n\n                if (!inserted) {\n                    this._add(shape, bbox);\n                }\n            }\n            inserted = true;\n        }\n\n        return inserted;\n    }\n\n    _initChildren() {\n        const { rect, children } = this;\n        const center = rect.center();\n        const halfWidth = rect.width() / 2;\n        const halfHeight = rect.height() / 2;\n\n        children.push(\n            new QuadNode(new Rect([ rect.origin.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect([ center.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect([ rect.origin.x, center.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect([ center.x, center.y ], [ halfWidth, halfHeight ]))\n        );\n    }\n}\n\nexport default QuadNode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}