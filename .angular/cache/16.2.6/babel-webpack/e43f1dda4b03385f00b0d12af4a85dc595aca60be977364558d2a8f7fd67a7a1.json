{"ast":null,"code":"import { DAYS, WEEKS, MONTHS, YEARS, TIME_PER_UNIT } from './constants';\nimport dateDiff from './date-diff';\nimport absoluteDateDiff from './absolute-date-diff';\nimport toDate from './to-date';\nfunction timeIndex(date, start, baseUnit) {\n  return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n}\nexport default function dateIndex(value, start, baseUnit, baseUnitStep) {\n  const date = toDate(value);\n  const startDate = toDate(start);\n  let index;\n  if (baseUnit === MONTHS) {\n    index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  } else if (baseUnit === YEARS) {\n    index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n  } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n    index = timeIndex(date, startDate, baseUnit);\n  } else {\n    index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n  }\n  return index / baseUnitStep;\n}","map":{"version":3,"names":["DAYS","WEEKS","MONTHS","YEARS","TIME_PER_UNIT","dateDiff","absoluteDateDiff","toDate","timeIndex","date","start","baseUnit","dateIndex","value","baseUnitStep","startDate","index","getMonth","getFullYear","Date","getDate"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/date-utils/date-index.js"],"sourcesContent":["import { DAYS, WEEKS, MONTHS, YEARS, TIME_PER_UNIT } from './constants';\nimport dateDiff from './date-diff';\nimport absoluteDateDiff from './absolute-date-diff';\nimport toDate from './to-date';\n\nfunction timeIndex(date, start, baseUnit) {\n    return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n}\n\nexport default function dateIndex(value, start, baseUnit, baseUnitStep) {\n    const date = toDate(value);\n    const startDate = toDate(start);\n    let index;\n\n    if (baseUnit === MONTHS) {\n        index = (date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12) +\n            timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    } else if (baseUnit === YEARS) {\n        index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n    } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n        index = timeIndex(date, startDate, baseUnit);\n    } else {\n        index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n    }\n\n    return index / baseUnitStep;\n}\n\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAQ,aAAa;AACvE,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAOC,MAAM,MAAM,WAAW;AAE9B,SAASC,SAASA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EACtC,OAAOL,gBAAgB,CAACG,IAAI,EAAEC,KAAK,CAAC,GAAGN,aAAa,CAACO,QAAQ,CAAC;AAClE;AAEA,eAAe,SAASC,SAASA,CAACC,KAAK,EAAEH,KAAK,EAAEC,QAAQ,EAAEG,YAAY,EAAE;EACpE,MAAML,IAAI,GAAGF,MAAM,CAACM,KAAK,CAAC;EAC1B,MAAME,SAAS,GAAGR,MAAM,CAACG,KAAK,CAAC;EAC/B,IAAIM,KAAK;EAET,IAAIL,QAAQ,KAAKT,MAAM,EAAE;IACrBc,KAAK,GAAIP,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAGF,SAAS,CAACE,QAAQ,CAAC,CAAC,GAAG,CAACR,IAAI,CAACS,WAAW,CAAC,CAAC,GAAGH,SAAS,CAACG,WAAW,CAAC,CAAC,IAAI,EAAE,GACjGV,SAAS,CAACC,IAAI,EAAE,IAAIU,IAAI,CAACV,IAAI,CAACS,WAAW,CAAC,CAAC,EAAET,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAAC,EAAEjB,IAAI,CAAC,GAAG,IAAImB,IAAI,CAACV,IAAI,CAACS,WAAW,CAAC,CAAC,EAAET,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;EAC7I,CAAC,MAAM,IAAIT,QAAQ,KAAKR,KAAK,EAAE;IAC3Ba,KAAK,GAAGP,IAAI,CAACS,WAAW,CAAC,CAAC,GAAGH,SAAS,CAACG,WAAW,CAAC,CAAC,GAAGN,SAAS,CAACH,IAAI,EAAE,IAAIU,IAAI,CAACV,IAAI,CAACS,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEhB,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE;EAC3H,CAAC,MAAM,IAAIS,QAAQ,KAAKX,IAAI,IAAIW,QAAQ,KAAKV,KAAK,EAAE;IAChDe,KAAK,GAAGR,SAAS,CAACC,IAAI,EAAEM,SAAS,EAAEJ,QAAQ,CAAC;EAChD,CAAC,MAAM;IACHK,KAAK,GAAGX,QAAQ,CAACI,IAAI,EAAEC,KAAK,CAAC,GAAGN,aAAa,CAACO,QAAQ,CAAC;EAC3D;EAEA,OAAOK,KAAK,GAAGF,YAAY;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}