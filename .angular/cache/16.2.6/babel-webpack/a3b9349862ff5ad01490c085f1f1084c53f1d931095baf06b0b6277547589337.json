{"ast":null,"code":"import { Class } from '../common';\nimport HasObservers from './has-observers';\nimport { defined } from '../util';\nconst toString = {}.toString;\nclass OptionsStore extends HasObservers {\n  constructor(options, prefix = \"\") {\n    super();\n    this.prefix = prefix;\n    for (let field in options) {\n      let member = options[field];\n      member = this._wrap(member, field);\n      this[field] = member;\n    }\n  }\n  get(field) {\n    const parts = field.split(\".\");\n    let result = this;\n    while (parts.length && result) {\n      let part = parts.shift();\n      result = result[part];\n    }\n    return result;\n  }\n  set(field, value) {\n    const current = this.get(field);\n    if (current !== value) {\n      this._set(field, this._wrap(value, field));\n      this.optionsChange({\n        field: this.prefix + field,\n        value: value\n      });\n    }\n  }\n  _set(field, value) {\n    const composite = field.indexOf(\".\") >= 0;\n    let parentObj = this;\n    let fieldName = field;\n    if (composite) {\n      const parts = fieldName.split(\".\");\n      let prefix = this.prefix;\n      while (parts.length > 1) {\n        fieldName = parts.shift();\n        prefix += fieldName + \".\";\n        let obj = parentObj[fieldName];\n        if (!obj) {\n          obj = new OptionsStore({}, prefix);\n          obj.addObserver(this);\n          parentObj[fieldName] = obj;\n        }\n        parentObj = obj;\n      }\n      fieldName = parts[0];\n    }\n    parentObj._clear(fieldName);\n    parentObj[fieldName] = value;\n  }\n  _clear(field) {\n    const current = this[field];\n    if (current && current.removeObserver) {\n      current.removeObserver(this);\n    }\n  }\n  _wrap(object, field) {\n    const type = toString.call(object);\n    let wrapped = object;\n    if (wrapped !== null && defined(wrapped) && type === \"[object Object]\") {\n      if (!(object instanceof OptionsStore) && !(object instanceof Class)) {\n        wrapped = new OptionsStore(wrapped, this.prefix + field + \".\");\n      }\n      wrapped.addObserver(this);\n    }\n    return wrapped;\n  }\n}\nexport default OptionsStore;","map":{"version":3,"names":["Class","HasObservers","defined","toString","OptionsStore","constructor","options","prefix","field","member","_wrap","get","parts","split","result","length","part","shift","set","value","current","_set","optionsChange","composite","indexOf","parentObj","fieldName","obj","addObserver","_clear","removeObserver","object","type","call","wrapped"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/core/options-store.js"],"sourcesContent":["import { Class } from '../common';\nimport HasObservers from './has-observers';\nimport { defined } from '../util';\n\n\nconst toString = {}.toString;\n\nclass OptionsStore extends HasObservers {\n    constructor(options, prefix = \"\") {\n        super();\n\n        this.prefix = prefix;\n\n        for (let field in options) {\n            let member = options[field];\n            member = this._wrap(member, field);\n            this[field] = member;\n        }\n    }\n\n    get(field) {\n        const parts = field.split(\".\");\n        let result = this;\n\n        while (parts.length && result) {\n            let part = parts.shift();\n            result = result[part];\n        }\n\n        return result;\n    }\n\n    set(field, value) {\n        const current = this.get(field);\n\n        if (current !== value) {\n            this._set(field, this._wrap(value, field));\n            this.optionsChange({\n                field: this.prefix + field,\n                value: value\n            });\n        }\n    }\n\n    _set(field, value) {\n        const composite = field.indexOf(\".\") >= 0;\n        let parentObj = this;\n        let fieldName = field;\n\n        if (composite) {\n            const parts = fieldName.split(\".\");\n            let prefix = this.prefix;\n\n            while (parts.length > 1) {\n                fieldName = parts.shift();\n                prefix += fieldName + \".\";\n\n                let obj = parentObj[fieldName];\n\n                if (!obj) {\n                    obj = new OptionsStore({}, prefix);\n                    obj.addObserver(this);\n                    parentObj[fieldName] = obj;\n                }\n                parentObj = obj;\n            }\n            fieldName = parts[0];\n        }\n\n        parentObj._clear(fieldName);\n        parentObj[fieldName] = value;\n    }\n\n    _clear(field) {\n        const current = this[field];\n        if (current && current.removeObserver) {\n            current.removeObserver(this);\n        }\n    }\n\n    _wrap(object, field) {\n        const type = toString.call(object);\n        let wrapped = object;\n\n        if (wrapped !== null && defined(wrapped) && type === \"[object Object]\") {\n            if (!(object instanceof OptionsStore) && !(object instanceof Class)) {\n                wrapped = new OptionsStore(wrapped, this.prefix + field + \".\");\n            }\n\n            wrapped.addObserver(this);\n        }\n\n        return wrapped;\n    }\n}\n\nexport default OptionsStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}