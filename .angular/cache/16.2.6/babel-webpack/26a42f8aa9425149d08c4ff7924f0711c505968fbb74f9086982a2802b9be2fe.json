{"ast":null,"code":"import Aggregates from './aggregates';\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\nclass SeriesAggregator extends Class {\n  constructor(series, binder, defaultAggregates) {\n    super();\n    const canonicalFields = binder.canonicalFields(series);\n    const valueFields = binder.valueFields(series);\n    const sourceFields = binder.sourceFields(series, canonicalFields);\n    const seriesFields = this._seriesFields = [];\n    const defaults = defaultAggregates.query(series.type);\n    const rootAggregate = series.aggregate || defaults;\n    this._series = series;\n    this._binder = binder;\n    for (let i = 0; i < canonicalFields.length; i++) {\n      const field = canonicalFields[i];\n      let fieldAggregate;\n      if (isObject(rootAggregate)) {\n        fieldAggregate = rootAggregate[field];\n      } else if (i === 0 || inArray(field, valueFields)) {\n        fieldAggregate = rootAggregate;\n      } else {\n        break;\n      }\n      if (fieldAggregate) {\n        seriesFields.push({\n          canonicalName: field,\n          name: sourceFields[i],\n          transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n        });\n      }\n    }\n  }\n  aggregatePoints(srcPoints, group) {\n    const {\n      _series: series,\n      _seriesFields: seriesFields\n    } = this;\n    const data = this._bindPoints(srcPoints || []);\n    const firstDataItem = data.dataItems[0];\n    let result = {};\n    if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n      const fn = function () {};\n      fn.prototype = firstDataItem;\n      result = new fn();\n    }\n    for (let i = 0; i < seriesFields.length; i++) {\n      const field = seriesFields[i];\n      const srcValues = this._bindField(data.values, field.canonicalName);\n      const value = field.transform(srcValues, series, data.dataItems, group);\n      if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n        result = value;\n        break;\n      } else {\n        if (defined(value)) {\n          setValue(field.name, result, value);\n        }\n      }\n    }\n    return result;\n  }\n  _bindPoints(points) {\n    const {\n      _binder: binder,\n      _series: series\n    } = this;\n    const values = [];\n    const dataItems = [];\n    for (let i = 0; i < points.length; i++) {\n      const pointIx = points[i];\n      values.push(binder.bindPoint(series, pointIx));\n      dataItems.push(series.data[pointIx]);\n    }\n    return {\n      values: values,\n      dataItems: dataItems\n    };\n  }\n  _bindField(data, field) {\n    const values = [];\n    const count = data.length;\n    for (let i = 0; i < count; i++) {\n      const item = data[i];\n      const valueFields = item.valueFields;\n      let value;\n      if (defined(valueFields[field])) {\n        value = valueFields[field];\n      } else {\n        value = item.fields[field];\n      }\n      values.push(value);\n    }\n    return values;\n  }\n}\nfunction setValue(fieldName, target, value) {\n  let parentObj = target;\n  let field = fieldName;\n  if (fieldName.indexOf(\".\") > -1) {\n    const parts = fieldName.split(\".\");\n    while (parts.length > 1) {\n      field = parts.shift();\n      if (!defined(parentObj[field])) {\n        parentObj[field] = {};\n      }\n      parentObj = parentObj[field];\n    }\n    field = parts.shift();\n  }\n  parentObj[field] = value;\n}\nexport default SeriesAggregator;","map":{"version":3,"names":["Aggregates","Class","defined","inArray","isArray","isFunction","isNumber","isObject","SeriesAggregator","constructor","series","binder","defaultAggregates","canonicalFields","valueFields","sourceFields","seriesFields","_seriesFields","defaults","query","type","rootAggregate","aggregate","_series","_binder","i","length","field","fieldAggregate","push","canonicalName","name","transform","aggregatePoints","srcPoints","group","data","_bindPoints","firstDataItem","dataItems","result","fn","prototype","srcValues","_bindField","values","value","Date","setValue","points","pointIx","bindPoint","count","item","fields","fieldName","target","parentObj","indexOf","parts","split","shift"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/aggregates/series-aggregator.js"],"sourcesContent":["import Aggregates from './aggregates';\n\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\n\nclass SeriesAggregator extends Class {\n    constructor(series, binder, defaultAggregates) {\n        super();\n\n        const canonicalFields = binder.canonicalFields(series);\n        const valueFields = binder.valueFields(series);\n        const sourceFields = binder.sourceFields(series, canonicalFields);\n        const seriesFields = this._seriesFields = [];\n        const defaults = defaultAggregates.query(series.type);\n        const rootAggregate = series.aggregate || defaults;\n\n        this._series = series;\n        this._binder = binder;\n\n        for (let i = 0; i < canonicalFields.length; i++) {\n            const field = canonicalFields[i];\n            let fieldAggregate;\n\n            if (isObject(rootAggregate)) {\n                fieldAggregate = rootAggregate[field];\n            } else if (i === 0 || inArray(field, valueFields)) {\n                fieldAggregate = rootAggregate;\n            } else {\n                break;\n            }\n\n            if (fieldAggregate) {\n                seriesFields.push({\n                    canonicalName: field,\n                    name: sourceFields[i],\n                    transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                });\n            }\n        }\n    }\n\n    aggregatePoints(srcPoints, group) {\n        const { _series: series, _seriesFields: seriesFields } = this;\n        const data = this._bindPoints(srcPoints || []);\n        const firstDataItem = data.dataItems[0];\n        let result = {};\n\n        if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n            const fn = function() {};\n            fn.prototype = firstDataItem;\n            result = new fn();\n        }\n\n        for (let i = 0; i < seriesFields.length; i++) {\n            const field = seriesFields[i];\n            const srcValues = this._bindField(data.values, field.canonicalName);\n            const value = field.transform(srcValues, series, data.dataItems, group);\n\n            if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                result = value;\n                break;\n            } else {\n                if (defined(value)) {\n                    setValue(field.name, result, value);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    _bindPoints(points) {\n        const { _binder: binder, _series: series } = this;\n        const values = [];\n        const dataItems = [];\n\n        for (let i = 0; i < points.length; i++) {\n            const pointIx = points[i];\n\n            values.push(binder.bindPoint(series, pointIx));\n            dataItems.push(series.data[pointIx]);\n        }\n\n        return {\n            values: values,\n            dataItems: dataItems\n        };\n    }\n\n    _bindField(data, field) {\n        const values = [];\n        const count = data.length;\n\n        for (let i = 0; i < count; i++) {\n            const item = data[i];\n            const valueFields = item.valueFields;\n            let value;\n\n            if (defined(valueFields[field])) {\n                value = valueFields[field];\n            } else {\n                value = item.fields[field];\n            }\n\n            values.push(value);\n        }\n\n        return values;\n    }\n}\n\nfunction setValue(fieldName, target, value) {\n    let parentObj = target;\n    let field = fieldName;\n\n    if (fieldName.indexOf(\".\") > -1) {\n        const parts = fieldName.split(\".\");\n\n        while (parts.length > 1) {\n            field = parts.shift();\n            if (!defined(parentObj[field])) {\n                parentObj[field] = {};\n            }\n            parentObj = parentObj[field];\n        }\n        field = parts.shift();\n    }\n\n    parentObj[field] = value;\n}\n\nexport default SeriesAggregator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}