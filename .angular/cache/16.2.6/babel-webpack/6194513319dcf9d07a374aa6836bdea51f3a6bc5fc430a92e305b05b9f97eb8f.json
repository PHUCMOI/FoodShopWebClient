{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"Product\";\n    this.allProductList = [];\n    this.productData = new EventEmitter();\n  }\n  getProductList() {\n    return this.http.get(`${environment.apiUrl}${this.url}`);\n  }\n  getSearchProductList(value) {\n    return this.http.get(`${environment.apiUrl}${this.url}/Search?value=${value}`);\n  }\n  getFilterProductByPrice(minPrice, maxPrice) {\n    return this.http.get(`${environment.apiUrl}${this.url}/Search?minPrice=${minPrice}&maxPrice${maxPrice}`);\n  }\n  getFilterProduct(value, minPrice, maxPrice) {\n    if (minPrice !== null && maxPrice !== null && value !== null) {\n      // Filter by all three parameters\n      return this.http.get(`${environment.apiUrl}${this.url}/Search?value=${value}&minPrice=${minPrice}&maxPrice=${maxPrice}`);\n    } else if (minPrice !== null && maxPrice !== null) {\n      // Filter by price range only\n      return this.getFilterProductByPrice(minPrice, maxPrice);\n    } else if (value !== null) {\n      // Filter by value only\n      return this.getSearchProductList(value);\n    } else {\n      return this.getProductList();\n    }\n  }\n  getProductByID(productId) {\n    return this.http.get(`${environment.apiUrl}${this.url}/Details/${productId}`);\n  }\n  addProduct(product) {\n    return this.http.post(`${environment.apiUrl}${this.url}/Create`, product);\n  }\n  removeProduct(productID) {\n    return this.http.post(`${environment.apiUrl}${this.url}/Delete`, productID);\n  }\n  updateProduct(product) {\n    return this.http.post(`${environment.apiUrl}${this.url}/Update`, product);\n  }\n  getProductsByCategoryName(categoryName) {\n    return this.http.get(`${environment.apiUrl}${this.url}/categoryName/${categoryName}`);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","environment","ProductService","constructor","http","url","allProductList","productData","getProductList","get","apiUrl","getSearchProductList","value","getFilterProductByPrice","minPrice","maxPrice","getFilterProduct","getProductByID","productId","addProduct","product","post","removeProduct","productID","updateProduct","getProductsByCategoryName","categoryName","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Internship\\FoodShopUI\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { Product } from '../models/Product';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private url = \"Product\"\r\n\r\n  public allProductList: Product[] = [];\r\n  public productData:  EventEmitter<Product[]> = new  EventEmitter();\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getProductList(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${environment.apiUrl}${this.url}`);\r\n  }\r\n\r\n  public getSearchProductList(value: string): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${environment.apiUrl}${this.url}/Search?value=${value}`)\r\n  }\r\n\r\n  public getFilterProductByPrice(minPrice: number, maxPrice: number): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${environment.apiUrl}${this.url}/Search?minPrice=${minPrice}&maxPrice${maxPrice}`);\r\n  }\r\n\r\n  public getFilterProduct(value: string | null, minPrice: number | null, maxPrice: number | null): Observable<Product[]> {\r\n    if (minPrice !== null && maxPrice !== null && value !== null) {\r\n      // Filter by all three parameters\r\n      return this.http.get<Product[]>(`${environment.apiUrl}${this.url}/Search?value=${value}&minPrice=${minPrice}&maxPrice=${maxPrice}`);\r\n    } else if (minPrice !== null && maxPrice !== null) {\r\n      // Filter by price range only\r\n      return this.getFilterProductByPrice(minPrice, maxPrice);\r\n    } else if (value !== null) {\r\n      // Filter by value only\r\n      return this.getSearchProductList(value);\r\n    } else {\r\n      return this.getProductList();\r\n    }\r\n  }\r\n  \r\n\r\n  public getProductByID(productId: number) {\r\n    return this.http.get<Product>(`${environment.apiUrl}${this.url}/Details/${productId}`)\r\n  }\r\n\r\n  public addProduct(product: Product) {\r\n    return this.http.post<boolean>(`${environment.apiUrl}${this.url}/Create`, product);\r\n  }\r\n\r\n  public removeProduct(productID: number) {\r\n    return this.http.post<boolean>(`${environment.apiUrl}${this.url}/Delete`, productID);\r\n  }\r\n\r\n  public updateProduct(product: Product) {\r\n    return this.http.post<boolean>(`${environment.apiUrl}${this.url}/Update`, product);\r\n  }\r\n\r\n  public getProductsByCategoryName(categoryName : string) {\r\n    return this.http.get<Product[]>(`${environment.apiUrl}${this.url}/categoryName/${categoryName}`)\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}