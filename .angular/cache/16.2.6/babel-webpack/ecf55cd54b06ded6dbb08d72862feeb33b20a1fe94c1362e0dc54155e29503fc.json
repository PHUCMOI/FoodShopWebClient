{"ast":null,"code":"import CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport VerticalBoxPlot from './vertical-box-plot';\nimport BoxPlot from './box-plot';\nimport ClusterLayout from '../layout/cluster-layout';\nimport areNumbers from '../utils/are-numbers';\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined } from '../../common';\nclass BoxPlotChart extends CandlestickChart {\n  addValue(data, fields) {\n    const {\n      categoryIx,\n      category,\n      series,\n      seriesIx\n    } = fields;\n    const {\n      children,\n      options\n    } = this;\n    const value = data.valueFields;\n    const valueParts = this.splitValue(value);\n    const hasValue = areNumbers(valueParts);\n    const dataItem = series.data[categoryIx];\n    let categoryPoints = this.categoryPoints[categoryIx];\n    let point;\n    if (!categoryPoints) {\n      this.categoryPoints[categoryIx] = categoryPoints = [];\n    }\n    if (hasValue) {\n      point = this.createPoint(data, fields);\n    }\n    let cluster = children[categoryIx];\n    if (!cluster) {\n      cluster = new ClusterLayout({\n        vertical: options.invertAxes,\n        gap: options.gap,\n        spacing: options.spacing,\n        rtl: !options.invertAxes && (this.chartService || {}).rtl\n      });\n      this.append(cluster);\n    }\n    if (point) {\n      this.updateRange(value, fields);\n      cluster.append(point);\n      point.categoryIx = categoryIx;\n      point.category = category;\n      point.series = series;\n      point.seriesIx = seriesIx;\n      point.owner = this;\n      point.dataItem = dataItem;\n    }\n    this.points.push(point);\n    categoryPoints.push(point);\n  }\n  pointType() {\n    if (this.options.invertAxes) {\n      return VerticalBoxPlot;\n    }\n    return BoxPlot;\n  }\n  splitValue(value) {\n    return [value.lower, value.q1, value.median, value.q3, value.upper];\n  }\n  updateRange(value, fields) {\n    const axisName = fields.series.axis;\n    let axisRange = this.valueAxisRanges[axisName];\n    let parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n    if (defined(value.mean)) {\n      parts = parts.concat(value.mean);\n    }\n    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n      min: MAX_VALUE,\n      max: MIN_VALUE\n    };\n    axisRange = this.valueAxisRanges[axisName] = {\n      min: Math.min.apply(Math, parts.concat([axisRange.min])),\n      max: Math.max.apply(Math, parts.concat([axisRange.max]))\n    };\n  }\n  formatPointValue(point, format) {\n    const value = point.value;\n    return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n  }\n  filterOutliers(items) {\n    const length = (items || []).length;\n    const result = [];\n    for (let i = 0; i < length; i++) {\n      const item = items[i];\n      if (defined(item) && item !== null) {\n        result.push(item);\n      }\n    }\n    return result;\n  }\n  supportsPointInactiveOpacity() {\n    return false;\n  }\n}\nexport default BoxPlotChart;","map":{"version":3,"names":["CandlestickChart","VerticalBoxPlot","BoxPlot","ClusterLayout","areNumbers","MIN_VALUE","MAX_VALUE","defined","BoxPlotChart","addValue","data","fields","categoryIx","category","series","seriesIx","children","options","value","valueFields","valueParts","splitValue","hasValue","dataItem","categoryPoints","point","createPoint","cluster","vertical","invertAxes","gap","spacing","rtl","chartService","append","updateRange","owner","points","push","pointType","lower","q1","median","q3","upper","axisName","axis","axisRange","valueAxisRanges","parts","concat","filterOutliers","outliers","mean","min","max","Math","apply","formatPointValue","format","auto","items","length","result","i","item","supportsPointInactiveOpacity"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/box-plot-chart/box-plot-chart.js"],"sourcesContent":["import CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport VerticalBoxPlot from './vertical-box-plot';\nimport BoxPlot from './box-plot';\nimport ClusterLayout from '../layout/cluster-layout';\n\nimport areNumbers from '../utils/are-numbers';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined } from '../../common';\n\nclass BoxPlotChart extends CandlestickChart {\n    addValue(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        const { children, options } = this;\n        const value = data.valueFields;\n        const valueParts = this.splitValue(value);\n        const hasValue = areNumbers(valueParts);\n        const dataItem = series.data[categoryIx];\n        let categoryPoints = this.categoryPoints[categoryIx];\n        let point;\n\n        if (!categoryPoints) {\n            this.categoryPoints[categoryIx] = categoryPoints = [];\n        }\n\n        if (hasValue) {\n            point = this.createPoint(data, fields);\n        }\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing,\n                rtl: !options.invertAxes && (this.chartService || {}).rtl\n            });\n            this.append(cluster);\n        }\n\n        if (point) {\n            this.updateRange(value, fields);\n\n            cluster.append(point);\n\n            point.categoryIx = categoryIx;\n            point.category = category;\n            point.series = series;\n            point.seriesIx = seriesIx;\n            point.owner = this;\n            point.dataItem = dataItem;\n        }\n\n        this.points.push(point);\n        categoryPoints.push(point);\n    }\n\n    pointType() {\n        if (this.options.invertAxes) {\n            return VerticalBoxPlot;\n        }\n\n        return BoxPlot;\n    }\n\n    splitValue(value) {\n        return [\n            value.lower, value.q1, value.median,\n            value.q3, value.upper\n        ];\n    }\n\n    updateRange(value, fields) {\n        const axisName = fields.series.axis;\n        let axisRange = this.valueAxisRanges[axisName];\n        let parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n\n        if (defined(value.mean)) {\n            parts = parts.concat(value.mean);\n        }\n\n        axisRange = this.valueAxisRanges[axisName] =\n            axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n        axisRange = this.valueAxisRanges[axisName] = {\n            min: Math.min.apply(Math, parts.concat([ axisRange.min ])),\n            max: Math.max.apply(Math, parts.concat([ axisRange.max ]))\n        };\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n\n        return this.chartService.format.auto(format,\n            value.lower, value.q1, value.median,\n            value.q3, value.upper, value.mean, point.category\n        );\n    }\n\n    filterOutliers(items) {\n        const length = (items || []).length;\n        const result = [];\n\n        for (let i = 0; i < length; i++) {\n            const item = items[i];\n            if (defined(item) && item !== null) {\n                result.push(item);\n            }\n        }\n\n        return result;\n    }\n\n    supportsPointInactiveOpacity() {\n        return false;\n    }\n}\n\nexport default BoxPlotChart;\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,wCAAwC;AACrE,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,aAAa,MAAM,0BAA0B;AAEpD,OAAOC,UAAU,MAAM,sBAAsB;AAE7C,SAASC,SAAS,EAAEC,SAAS,QAAQ,wBAAwB;AAC7D,SAASC,OAAO,QAAQ,cAAc;AAEtC,MAAMC,YAAY,SAASR,gBAAgB,CAAC;EACxCS,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAE;IACnB,MAAM;MAAEC,UAAU;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAS,CAAC,GAAGJ,MAAM;IACzD,MAAM;MAAEK,QAAQ;MAAEC;IAAQ,CAAC,GAAG,IAAI;IAClC,MAAMC,KAAK,GAAGR,IAAI,CAACS,WAAW;IAC9B,MAAMC,UAAU,GAAG,IAAI,CAACC,UAAU,CAACH,KAAK,CAAC;IACzC,MAAMI,QAAQ,GAAGlB,UAAU,CAACgB,UAAU,CAAC;IACvC,MAAMG,QAAQ,GAAGT,MAAM,CAACJ,IAAI,CAACE,UAAU,CAAC;IACxC,IAAIY,cAAc,GAAG,IAAI,CAACA,cAAc,CAACZ,UAAU,CAAC;IACpD,IAAIa,KAAK;IAET,IAAI,CAACD,cAAc,EAAE;MACjB,IAAI,CAACA,cAAc,CAACZ,UAAU,CAAC,GAAGY,cAAc,GAAG,EAAE;IACzD;IAEA,IAAIF,QAAQ,EAAE;MACVG,KAAK,GAAG,IAAI,CAACC,WAAW,CAAChB,IAAI,EAAEC,MAAM,CAAC;IAC1C;IAEA,IAAIgB,OAAO,GAAGX,QAAQ,CAACJ,UAAU,CAAC;IAClC,IAAI,CAACe,OAAO,EAAE;MACVA,OAAO,GAAG,IAAIxB,aAAa,CAAC;QACxByB,QAAQ,EAAEX,OAAO,CAACY,UAAU;QAC5BC,GAAG,EAAEb,OAAO,CAACa,GAAG;QAChBC,OAAO,EAAEd,OAAO,CAACc,OAAO;QACxBC,GAAG,EAAE,CAACf,OAAO,CAACY,UAAU,IAAI,CAAC,IAAI,CAACI,YAAY,IAAI,CAAC,CAAC,EAAED;MAC1D,CAAC,CAAC;MACF,IAAI,CAACE,MAAM,CAACP,OAAO,CAAC;IACxB;IAEA,IAAIF,KAAK,EAAE;MACP,IAAI,CAACU,WAAW,CAACjB,KAAK,EAAEP,MAAM,CAAC;MAE/BgB,OAAO,CAACO,MAAM,CAACT,KAAK,CAAC;MAErBA,KAAK,CAACb,UAAU,GAAGA,UAAU;MAC7Ba,KAAK,CAACZ,QAAQ,GAAGA,QAAQ;MACzBY,KAAK,CAACX,MAAM,GAAGA,MAAM;MACrBW,KAAK,CAACV,QAAQ,GAAGA,QAAQ;MACzBU,KAAK,CAACW,KAAK,GAAG,IAAI;MAClBX,KAAK,CAACF,QAAQ,GAAGA,QAAQ;IAC7B;IAEA,IAAI,CAACc,MAAM,CAACC,IAAI,CAACb,KAAK,CAAC;IACvBD,cAAc,CAACc,IAAI,CAACb,KAAK,CAAC;EAC9B;EAEAc,SAASA,CAAA,EAAG;IACR,IAAI,IAAI,CAACtB,OAAO,CAACY,UAAU,EAAE;MACzB,OAAO5B,eAAe;IAC1B;IAEA,OAAOC,OAAO;EAClB;EAEAmB,UAAUA,CAACH,KAAK,EAAE;IACd,OAAO,CACHA,KAAK,CAACsB,KAAK,EAAEtB,KAAK,CAACuB,EAAE,EAAEvB,KAAK,CAACwB,MAAM,EACnCxB,KAAK,CAACyB,EAAE,EAAEzB,KAAK,CAAC0B,KAAK,CACxB;EACL;EAEAT,WAAWA,CAACjB,KAAK,EAAEP,MAAM,EAAE;IACvB,MAAMkC,QAAQ,GAAGlC,MAAM,CAACG,MAAM,CAACgC,IAAI;IACnC,IAAIC,SAAS,GAAG,IAAI,CAACC,eAAe,CAACH,QAAQ,CAAC;IAC9C,IAAII,KAAK,GAAG,IAAI,CAAC5B,UAAU,CAACH,KAAK,CAAC,CAACgC,MAAM,CAAC,IAAI,CAACC,cAAc,CAACjC,KAAK,CAACkC,QAAQ,CAAC,CAAC;IAE9E,IAAI7C,OAAO,CAACW,KAAK,CAACmC,IAAI,CAAC,EAAE;MACrBJ,KAAK,GAAGA,KAAK,CAACC,MAAM,CAAChC,KAAK,CAACmC,IAAI,CAAC;IACpC;IAEAN,SAAS,GAAG,IAAI,CAACC,eAAe,CAACH,QAAQ,CAAC,GACtCE,SAAS,IAAI;MAAEO,GAAG,EAAEhD,SAAS;MAAEiD,GAAG,EAAElD;IAAU,CAAC;IAEnD0C,SAAS,GAAG,IAAI,CAACC,eAAe,CAACH,QAAQ,CAAC,GAAG;MACzCS,GAAG,EAAEE,IAAI,CAACF,GAAG,CAACG,KAAK,CAACD,IAAI,EAAEP,KAAK,CAACC,MAAM,CAAC,CAAEH,SAAS,CAACO,GAAG,CAAE,CAAC,CAAC;MAC1DC,GAAG,EAAEC,IAAI,CAACD,GAAG,CAACE,KAAK,CAACD,IAAI,EAAEP,KAAK,CAACC,MAAM,CAAC,CAAEH,SAAS,CAACQ,GAAG,CAAE,CAAC;IAC7D,CAAC;EACL;EAEAG,gBAAgBA,CAACjC,KAAK,EAAEkC,MAAM,EAAE;IAC5B,MAAMzC,KAAK,GAAGO,KAAK,CAACP,KAAK;IAEzB,OAAO,IAAI,CAACe,YAAY,CAAC0B,MAAM,CAACC,IAAI,CAACD,MAAM,EACvCzC,KAAK,CAACsB,KAAK,EAAEtB,KAAK,CAACuB,EAAE,EAAEvB,KAAK,CAACwB,MAAM,EACnCxB,KAAK,CAACyB,EAAE,EAAEzB,KAAK,CAAC0B,KAAK,EAAE1B,KAAK,CAACmC,IAAI,EAAE5B,KAAK,CAACZ,QAC7C,CAAC;EACL;EAEAsC,cAAcA,CAACU,KAAK,EAAE;IAClB,MAAMC,MAAM,GAAG,CAACD,KAAK,IAAI,EAAE,EAAEC,MAAM;IACnC,MAAMC,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,EAAEE,CAAC,EAAE,EAAE;MAC7B,MAAMC,IAAI,GAAGJ,KAAK,CAACG,CAAC,CAAC;MACrB,IAAIzD,OAAO,CAAC0D,IAAI,CAAC,IAAIA,IAAI,KAAK,IAAI,EAAE;QAChCF,MAAM,CAACzB,IAAI,CAAC2B,IAAI,CAAC;MACrB;IACJ;IAEA,OAAOF,MAAM;EACjB;EAEAG,4BAA4BA,CAAA,EAAG;IAC3B,OAAO,KAAK;EAChB;AACJ;AAEA,eAAe1D,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}