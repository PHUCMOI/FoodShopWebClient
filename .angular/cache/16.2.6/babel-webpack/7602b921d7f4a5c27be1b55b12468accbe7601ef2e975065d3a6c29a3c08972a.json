{"ast":null,"code":"import { Encoding } from './encoding';\nconst extend = Object.assign;\nexport class MsiBase extends Encoding {\n  initProperties() {\n    super.initProperties();\n    extend(this, {\n      characterMap: [\"12121212\", \"12121221\", \"12122112\", \"12122121\", \"12211212\", \"12211221\", \"12212112\", \"12212121\", \"21121212\", \"21121221\"],\n      START: \"21\",\n      STOP: \"121\",\n      checkSumType: \"\",\n      checkSums: checkSums\n    });\n  }\n  initValue(value, width) {\n    this.pattern = [];\n    this.value = value;\n    this.checkSumLength = 0;\n    this.width = width;\n  }\n  setBaseUnit() {\n    const startStopLength = 7;\n    this.baseUnit = this.width / (12 * (this.value.length + this.checkSumLength) + this.quietZoneLength + startStopLength);\n  }\n  addData() {\n    const value = this.value;\n    this.addPattern(this.START);\n    for (let i = 0; i < value.length; i++) {\n      this.addCharacter(value.charAt(i));\n    }\n    if (this.options.addCheckSum) {\n      this.addCheckSum();\n    }\n    this.addPattern(this.STOP);\n    this.setBaseUnit();\n  }\n  addCharacter(character) {\n    const pattern = this.characterMap[character];\n    if (!pattern) {\n      this.invalidCharacterError(character);\n    }\n    this.addPattern(pattern);\n  }\n  addPattern(pattern) {\n    for (let i = 0; i < pattern.length; i++) {\n      this.pattern.push(parseInt(pattern.charAt(i), 10));\n    }\n  }\n  addCheckSum() {\n    const checkSumFunction = this.checkSums[this.checkSumType];\n    const checkValues = checkSumFunction.call(this.checkSums, this.value);\n    this.checksum = checkValues.join(\"\");\n    for (let i = 0; i < checkValues.length; i++) {\n      this.checkSumLength++;\n      this.addPattern(this.characterMap[checkValues[i]]);\n    }\n  }\n}\nexport class MsiMod10 extends MsiBase {\n  initProperties() {\n    super.initProperties();\n    extend(this, {\n      name: \"MSI Modulo10\",\n      checkSumType: \"Modulo10\"\n    });\n  }\n}\nexport class MsiMod11 extends MsiBase {\n  initProperties() {\n    super.initProperties();\n    extend(this, {\n      name: \"MSI Modulo11\",\n      checkSumType: \"Modulo11\"\n    });\n  }\n}\nexport class MsiMod1010 extends MsiBase {\n  initProperties() {\n    super.initProperties();\n    extend(this, {\n      name: \"MSI Modulo10 Modulo10\",\n      checkSumType: \"Modulo10Modulo10\"\n    });\n  }\n}\nexport class MsiMod1110 extends MsiBase {\n  initProperties() {\n    super.initProperties();\n    extend(this, {\n      name: \"MSI Modulo11 Modulo10\",\n      checkSumType: \"Modulo11Modulo10\"\n    });\n  }\n}\nconst checkSums = {\n  Modulo10(value) {\n    let checkValues = [0, \"\"],\n      odd = value.length % 2,\n      idx,\n      evenSum,\n      oddSum;\n    for (idx = 0; idx < value.length; idx++) {\n      checkValues[(idx + odd) % 2] += parseInt(value.charAt(idx), 10);\n    }\n    oddSum = checkValues[0];\n    evenSum = (checkValues[1] * 2).toString();\n    for (idx = 0; idx < evenSum.length; idx++) {\n      oddSum += parseInt(evenSum.charAt(idx), 10);\n    }\n    return [(10 - oddSum % 10) % 10];\n  },\n  Modulo11(value) {\n    let weightedSum = 0,\n      mod = 11,\n      length = value.length,\n      weight,\n      checkValue;\n    for (let i = 0; i < length; i++) {\n      weight = ((length - i) % 6 || 6) + 1;\n      weightedSum += weight * value.charAt(i);\n    }\n    checkValue = (mod - weightedSum % mod) % mod;\n    if (checkValue !== 10) {\n      return [checkValue];\n    }\n    return [1, 0];\n  },\n  Modulo11Modulo10(value) {\n    let checkValues = this.Modulo11(value),\n      mod11Value;\n    mod11Value = value + checkValues[0];\n    return checkValues.concat(this.Modulo10(mod11Value));\n  },\n  Modulo10Modulo10(value) {\n    let checkValues = this.Modulo10(value),\n      mod10Value;\n    mod10Value = value + checkValues[0];\n    return checkValues.concat(this.Modulo10(mod10Value));\n  }\n};","map":{"version":3,"names":["Encoding","extend","Object","assign","MsiBase","initProperties","characterMap","START","STOP","checkSumType","checkSums","initValue","value","width","pattern","checkSumLength","setBaseUnit","startStopLength","baseUnit","length","quietZoneLength","addData","addPattern","i","addCharacter","charAt","options","addCheckSum","character","invalidCharacterError","push","parseInt","checkSumFunction","checkValues","call","checksum","join","MsiMod10","name","MsiMod11","MsiMod1010","MsiMod1110","Modulo10","odd","idx","evenSum","oddSum","toString","Modulo11","weightedSum","mod","weight","checkValue","Modulo11Modulo10","mod11Value","concat","Modulo10Modulo10","mod10Value"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/barcode/encodings/msi.js"],"sourcesContent":["import { Encoding } from './encoding';\n\nconst extend = Object.assign;\n\nexport class MsiBase extends Encoding {\n    initProperties() {\n        super.initProperties();\n\n        extend(this, {\n            characterMap: [\n                \"12121212\",\n                \"12121221\",\n                \"12122112\",\n                \"12122121\",\n                \"12211212\",\n                \"12211221\",\n                \"12212112\",\n                \"12212121\",\n                \"21121212\",\n                \"21121221\"\n            ],\n            START: \"21\",\n            STOP: \"121\",\n            checkSumType: \"\",\n            checkSums: checkSums\n        });\n    }\n\n    initValue(value, width) {\n        this.pattern = [];\n        this.value = value;\n        this.checkSumLength = 0;\n        this.width = width;\n    }\n\n    setBaseUnit() {\n        const startStopLength = 7;\n\n        this.baseUnit = this.width /\n            (12 * (this.value.length + this.checkSumLength) + this.quietZoneLength + startStopLength);\n    }\n\n    addData() {\n        const value = this.value;\n\n        this.addPattern(this.START);\n\n        for (let i = 0; i < value.length; i++) {\n            this.addCharacter(value.charAt(i));\n        }\n\n        if (this.options.addCheckSum) {\n            this.addCheckSum();\n        }\n\n        this.addPattern(this.STOP);\n        this.setBaseUnit();\n    }\n\n    addCharacter(character) {\n        const pattern = this.characterMap[character];\n\n        if (!pattern) {\n            this.invalidCharacterError(character);\n        }\n\n        this.addPattern(pattern);\n    }\n\n    addPattern(pattern) {\n        for (let i = 0; i < pattern.length; i++) {\n            this.pattern.push(parseInt(pattern.charAt(i), 10));\n        }\n    }\n\n    addCheckSum() {\n        const checkSumFunction = this.checkSums[this.checkSumType];\n        const checkValues = checkSumFunction.call(this.checkSums, this.value);\n\n        this.checksum = checkValues.join(\"\");\n\n        for (let i = 0; i < checkValues.length; i++) {\n            this.checkSumLength++;\n            this.addPattern(this.characterMap[checkValues[i]]);\n        }\n    }\n}\n\nexport class MsiMod10 extends MsiBase {\n    initProperties() {\n        super.initProperties();\n\n        extend(this, {\n            name: \"MSI Modulo10\",\n            checkSumType: \"Modulo10\"\n        });\n    }\n}\n\nexport class MsiMod11 extends MsiBase {\n    initProperties() {\n        super.initProperties();\n\n        extend(this, {\n            name: \"MSI Modulo11\",\n            checkSumType: \"Modulo11\"\n        });\n    }\n}\n\nexport class MsiMod1010 extends MsiBase {\n    initProperties() {\n        super.initProperties();\n\n        extend(this, {\n            name: \"MSI Modulo10 Modulo10\",\n            checkSumType: \"Modulo10Modulo10\"\n        });\n    }\n}\n\nexport class MsiMod1110 extends MsiBase {\n    initProperties() {\n        super.initProperties();\n\n        extend(this, {\n            name: \"MSI Modulo11 Modulo10\",\n            checkSumType: \"Modulo11Modulo10\"\n        });\n    }\n}\n\nconst checkSums = {\n    Modulo10(value) {\n        let checkValues = [0, \"\"],\n            odd = value.length % 2,\n            idx,\n            evenSum,\n            oddSum;\n\n        for (idx = 0; idx < value.length; idx++) {\n            checkValues[(idx + odd) % 2] += parseInt(value.charAt(idx), 10);\n        }\n\n        oddSum = checkValues[0];\n        evenSum = (checkValues[1] * 2).toString();\n\n        for (idx = 0; idx < evenSum.length; idx++) {\n            oddSum += parseInt(evenSum.charAt(idx), 10);\n        }\n\n        return [(10 - (oddSum % 10)) % 10];\n    },\n    Modulo11(value) {\n        let weightedSum = 0,\n            mod = 11,\n            length = value.length,\n            weight,\n            checkValue;\n\n        for (let i = 0; i < length; i++) {\n            weight = ((length - i) % 6 || 6) + 1;\n            weightedSum += weight * value.charAt(i);\n        }\n\n        checkValue = (mod - weightedSum % mod) % mod;\n\n        if (checkValue !== 10) {\n            return [checkValue];\n        }\n\n        return [1, 0];\n    },\n    Modulo11Modulo10(value) {\n        let checkValues = this.Modulo11(value),\n            mod11Value;\n        mod11Value = value + checkValues[0];\n\n        return checkValues.concat(this.Modulo10(mod11Value));\n    },\n    Modulo10Modulo10(value) {\n        let checkValues = this.Modulo10(value),\n            mod10Value;\n        mod10Value = value + checkValues[0];\n\n        return checkValues.concat(this.Modulo10(mod10Value));\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}