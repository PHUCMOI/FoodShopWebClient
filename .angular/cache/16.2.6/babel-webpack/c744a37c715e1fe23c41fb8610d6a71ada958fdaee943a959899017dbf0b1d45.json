{"ast":null,"code":"import { Class, grep } from '../../common';\nimport { proxy, noop, applyEventMap, getEventMap, on, off, now, getSupportedFeatures } from '../utils';\nimport { Observable } from './observable';\nconst extend = Object.assign;\nconst preventDefault = e => {\n  e.preventDefault();\n};\nlet DEFAULT_MIN_HOLD = 800,\n  CLICK_DELAY = 300,\n  // DEFAULT_THRESHOLD = support.browser.msie ? 5 : 0,\n  DEFAULT_THRESHOLD = 0,\n  PRESS = 'press',\n  HOLD = 'hold',\n  SELECT = 'select',\n  START = 'start',\n  MOVE = 'move',\n  END = 'end',\n  CANCEL = 'cancel',\n  TAP = 'tap',\n  DOUBLETAP = 'doubleTap',\n  RELEASE = 'release',\n  GESTURESTART = 'gesturestart',\n  GESTURECHANGE = 'gesturechange',\n  GESTUREEND = 'gestureend',\n  GESTURETAP = 'gesturetap';\nlet THRESHOLD = {\n  'api': 0,\n  'touch': 0,\n  'mouse': 9,\n  'pointer': 9\n};\nfunction touchDelta(touch1, touch2) {\n  let x1 = touch1.x.location,\n    y1 = touch1.y.location,\n    x2 = touch2.x.location,\n    y2 = touch2.y.location,\n    dx = x1 - x2,\n    dy = y1 - y2;\n  return {\n    center: {\n      x: (x1 + x2) / 2,\n      y: (y1 + y2) / 2\n    },\n    distance: Math.sqrt(dx * dx + dy * dy)\n  };\n}\nfunction getTouches(e) {\n  const support = getSupportedFeatures();\n  let touches = [],\n    originalEvent = e.originalEvent || e,\n    currentTarget = e.currentTarget,\n    idx = 0,\n    length,\n    changedTouches,\n    touch;\n  if (e.api) {\n    touches.push({\n      id: 2,\n      event: e,\n      target: e.target,\n      currentTarget: e.target,\n      location: e,\n      type: 'api'\n    });\n  } else if (e.type.match(/touch/)) {\n    changedTouches = originalEvent ? originalEvent.changedTouches : [];\n    for (length = changedTouches.length; idx < length; idx++) {\n      touch = changedTouches[idx];\n      touches.push({\n        location: touch,\n        event: e,\n        target: touch.target,\n        currentTarget: currentTarget,\n        id: touch.identifier,\n        type: 'touch'\n      });\n    }\n  } else if (support.pointers || support.msPointers) {\n    touches.push({\n      location: originalEvent,\n      event: e,\n      target: e.target,\n      currentTarget: currentTarget,\n      id: originalEvent.pointerId,\n      type: 'pointer'\n    });\n  } else {\n    touches.push({\n      id: 1,\n      event: e,\n      target: e.target,\n      currentTarget: currentTarget,\n      location: e,\n      type: 'mouse'\n    });\n  }\n  return touches;\n}\nexport class TouchAxis extends Class {\n  constructor(axis, location) {\n    super();\n    let that = this;\n    that.support = getSupportedFeatures();\n    that.invalidZeroEvents = this.support.mobileOS && this.support.mobileOS.android;\n    that.axis = axis;\n    that._updateLocationData(location);\n    that.startLocation = that.location;\n    that.velocity = that.delta = 0;\n    that.timeStamp = now();\n  }\n  move(location) {\n    let that = this,\n      offset = location['page' + that.axis],\n      timeStamp = now(),\n      timeDelta = timeStamp - that.timeStamp || 1;\n    if (!offset && this.invalidZeroEvents) {\n      return;\n    }\n    that.delta = offset - that.location;\n    that._updateLocationData(location);\n    that.initialDelta = offset - that.startLocation;\n    that.velocity = that.delta / timeDelta;\n    that.timeStamp = timeStamp;\n  }\n  _updateLocationData(location) {\n    let that = this,\n      axis = that.axis;\n    that.location = location['page' + axis];\n    that.client = location['client' + axis];\n    that.screen = location['screen' + axis];\n  }\n}\nexport class Touch extends Class {\n  constructor(userEvents, target, touchInfo) {\n    super();\n    extend(this, {\n      x: new TouchAxis('X', touchInfo.location),\n      y: new TouchAxis('Y', touchInfo.location),\n      type: touchInfo.type,\n      useClickAsTap: userEvents.useClickAsTap,\n      threshold: userEvents.threshold || THRESHOLD[touchInfo.type],\n      userEvents: userEvents,\n      target: target,\n      currentTarget: touchInfo.currentTarget,\n      initialTouch: touchInfo.target,\n      id: touchInfo.id,\n      pressEvent: touchInfo,\n      _clicks: userEvents._clicks,\n      supportDoubleTap: userEvents.supportDoubleTap,\n      _moved: false,\n      _finished: false\n    });\n  }\n  press() {\n    // this._holdTimeout = setTimeout($.proxy(this, '_hold'), this.userEvents.minHold);\n    this._holdTimeout = setTimeout(proxy(this._hold, this), this.userEvents.minHold);\n    this._trigger(PRESS, this.pressEvent);\n  }\n  _tap(touchInfo) {\n    let that = this;\n    that.userEvents._clicks++;\n    if (that.userEvents._clicks === 1) {\n      that._clickTimeout = setTimeout(function () {\n        if (that.userEvents._clicks === 1) {\n          that._trigger(TAP, touchInfo);\n        } else {\n          that._trigger(DOUBLETAP, touchInfo);\n        }\n        that.userEvents._clicks = 0;\n      }, CLICK_DELAY);\n    }\n  }\n  _hold() {\n    this._trigger(HOLD, this.pressEvent);\n  }\n\n  /* eslint-disable consistent-return */\n  move(touchInfo) {\n    let that = this;\n    let preventMove = touchInfo.type !== 'api' && that.userEvents._shouldNotMove;\n    if (that._finished || preventMove) {\n      return;\n    }\n    that.x.move(touchInfo.location);\n    that.y.move(touchInfo.location);\n    if (!that._moved) {\n      if (that._withinIgnoreThreshold()) {\n        return;\n      }\n      if (!UserEvents.current || UserEvents.current === that.userEvents) {\n        that._start(touchInfo);\n      } else {\n        return that.dispose();\n      }\n    }\n    if (!that._finished) {\n      that._trigger(MOVE, touchInfo);\n    }\n  }\n  /* eslint-enable consistent-return */\n\n  end(touchInfo) {\n    this.endTime = now();\n    if (this._finished) {\n      return;\n    }\n    this._finished = true;\n    this._trigger(RELEASE, touchInfo);\n    if (this._moved) {\n      this._trigger(END, touchInfo);\n    } else {\n      if (!this.useClickAsTap) {\n        if (this.supportDoubleTap) {\n          this._tap(touchInfo);\n        } else {\n          this._trigger(TAP, touchInfo);\n        }\n      }\n    }\n    clearTimeout(this._holdTimeout);\n    this.dispose();\n  }\n  dispose() {\n    let userEvents = this.userEvents,\n      activeTouches = userEvents.touches || [];\n    this._finished = true;\n    this.pressEvent = null;\n    clearTimeout(this._holdTimeout);\n    // activeTouches.splice($.inArray(this, activeTouches), 1);\n    const activeTouchIndex = activeTouches.indexOf(this);\n    activeTouches.splice(activeTouchIndex, 1);\n  }\n  skip() {\n    this.dispose();\n  }\n  cancel() {\n    this.dispose();\n  }\n  isMoved() {\n    return this._moved;\n  }\n  _start(touchInfo) {\n    clearTimeout(this._holdTimeout);\n    this.startTime = now();\n    this._moved = true;\n    this._trigger(START, touchInfo);\n  }\n  _trigger(name, touchInfo) {\n    let that = this,\n      jQueryEvent = touchInfo.event,\n      data = {\n        touch: that,\n        x: that.x,\n        y: that.y,\n        target: that.target,\n        event: jQueryEvent\n      };\n    if (that.userEvents.notify(name, data)) {\n      jQueryEvent.preventDefault();\n    }\n  }\n  _withinIgnoreThreshold() {\n    let xDelta = this.x.initialDelta,\n      yDelta = this.y.initialDelta;\n    return Math.sqrt(xDelta * xDelta + yDelta * yDelta) <= this.threshold;\n  }\n}\nfunction withEachUpEvent(callback) {\n  const eventMap = getEventMap(navigator.userAgent);\n  let downEvents = eventMap.up.split(' '),\n    idx = 0,\n    length = downEvents.length;\n  for (; idx < length; idx++) {\n    callback(downEvents[idx]);\n  }\n}\nexport class UserEvents extends Observable {\n  constructor(element, options) {\n    super();\n    let that = this;\n    let filter;\n    const support = getSupportedFeatures();\n    this.support = support;\n\n    /* eslint-disable no-param-reassign */\n    options = options || {};\n    /* eslint-enable no-param-reassign */\n    this.options = options;\n    filter = that.filter = options.filter;\n    that.threshold = options.threshold || DEFAULT_THRESHOLD;\n    that.minHold = options.minHold || DEFAULT_MIN_HOLD;\n    that.touches = [];\n    that._maxTouches = options.multiTouch ? 2 : 1;\n    that.allowSelection = options.allowSelection;\n    that.captureUpIfMoved = options.captureUpIfMoved;\n    that.useClickAsTap = !options.fastTap && !support.delayedClick();\n    that._clicks = 0;\n    that.supportDoubleTap = options.supportDoubleTap;\n    const enableGlobalSurface = !support.touch || support.mouseAndTouchPresent;\n    extend(that, {\n      element: element,\n      surface: options.global && enableGlobalSurface ? element.ownerDocument.documentElement : options.surface || element,\n      stopPropagation: options.stopPropagation,\n      pressed: false\n    });\n    this._surfaceMoveHandler = proxy(this._move, this);\n    on(that.surface, applyEventMap('move'), this._surfaceMoveHandler);\n    this._surfaceEndHandler = proxy(this._end, this);\n    on(that.surface, applyEventMap('up cancel'), this._surfaceEndHandler);\n    this._elementStartHandler = proxy(this._start, this);\n    on(element, applyEventMap('down'), filter, this._elementStartHandler);\n    if (that.useClickAsTap) {\n      this._elementClickHandler = proxy(this._click, this);\n      on(element, applyEventMap('click'), filter, this._elementClickHandler);\n    }\n    if (support.pointers || support.msPointers) {\n      if (support.browser.version < 11) {\n        let defaultAction = 'pinch-zoom double-tap-zoom';\n        element.style['-ms-touch-action'] = options.touchAction && options.touchAction !== 'none' ? defaultAction + ' ' + options.touchAction : defaultAction;\n      } else {\n        element.style['touch-action'] = options.touchAction || 'none';\n      }\n    }\n    if (options.preventDragEvent) {\n      this._elementDragStartHandler = preventDefault;\n      on(element, applyEventMap('dragstart'), this._elementDragStartHandler);\n    }\n\n    // element.on(kendo.applyEventMap('mousedown'), filter, {\n    //     root: element\n    // } '_select');\n\n    // todo: use root\n    this._elementSelectHandler = proxy(this._select, this);\n    on(element, applyEventMap('mousedown'), filter, this._elementSelectHandler);\n    if (that.captureUpIfMoved && support.eventCapture) {\n      let surfaceElement = that.surface,\n        preventIfMovingProxy = proxy(that.preventIfMoving, that);\n      withEachUpEvent(function (eventName) {\n        surfaceElement.addEventListener(eventName, preventIfMovingProxy, true);\n      });\n    }\n    that.bind([PRESS, HOLD, TAP, DOUBLETAP, START, MOVE, END, RELEASE, CANCEL, GESTURESTART, GESTURECHANGE, GESTUREEND, GESTURETAP, SELECT], options);\n  }\n  preventIfMoving(e) {\n    if (this._isMoved()) {\n      e.preventDefault();\n    }\n  }\n  destroy() {\n    let that = this;\n    const options = this.options;\n    const element = this.element;\n    if (that._destroyed) {\n      return;\n    }\n    that._destroyed = true;\n    if (that.captureUpIfMoved && this.support.eventCapture) {\n      let surfaceElement = that.surface;\n      withEachUpEvent(function (eventName) {\n        surfaceElement.removeEventListener(eventName, that.preventIfMoving);\n      });\n    }\n    off(that.surface, applyEventMap('move'), this._surfaceMoveHandler);\n    off(that.surface, applyEventMap('up cancel'), this._surfaceEndHandler);\n    off(element, applyEventMap('down'), this._elementStartHandler);\n    if (that.useClickAsTap) {\n      off(element, applyEventMap('click'), this._elementClickHandler);\n    }\n    if (options.preventDragEvent) {\n      off(element, applyEventMap('dragstart'), this._elementDragStartHandler);\n    }\n    off(element, applyEventMap('mousedown'), this._elementSelectHandler);\n    that._disposeAll();\n    that.unbind();\n    delete that.surface;\n    delete that.element;\n    delete that.currentTarget;\n  }\n  capture() {\n    UserEvents.current = this;\n  }\n  cancel() {\n    this._disposeAll();\n    this.trigger(CANCEL);\n  }\n\n  /* eslint-disable indent */\n  notify(event, data) {\n    let that = this,\n      touches = that.touches;\n    let eventName = event;\n    if (this._isMultiTouch()) {\n      switch (eventName) {\n        case MOVE:\n          eventName = GESTURECHANGE;\n          break;\n        case END:\n          eventName = GESTUREEND;\n          break;\n        case TAP:\n          eventName = GESTURETAP;\n          break;\n        default:\n          break;\n      }\n      extend(data, {\n        touches: touches\n      }, touchDelta(touches[0], touches[1]));\n    }\n    return this.trigger(eventName, extend(data, {\n      type: eventName\n    }));\n  }\n  /* eslint-enable indent */\n\n  press(x, y, target) {\n    this._apiCall('_start', x, y, target);\n  }\n  move(x, y) {\n    this._apiCall('_move', x, y);\n  }\n  end(x, y) {\n    this._apiCall('_end', x, y);\n  }\n  _isMultiTouch() {\n    return this.touches.length > 1;\n  }\n  _maxTouchesReached() {\n    return this.touches.length >= this._maxTouches;\n  }\n  _disposeAll() {\n    let touches = this.touches;\n    while (touches.length > 0) {\n      touches.pop().dispose();\n    }\n  }\n  _isMoved() {\n    return grep(this.touches, function (touch) {\n      return touch.isMoved();\n    }).length;\n  }\n  _select(e) {\n    if (!this.allowSelection || this.trigger(SELECT, {\n      event: e\n    })) {\n      e.preventDefault();\n    }\n  }\n  _start(e) {\n    let that = this,\n      idx = 0,\n      filter = that.filter,\n      target,\n      touches = getTouches(e),\n      length = touches.length,\n      touch,\n      which = e.which;\n    if (which && which > 1 || that._maxTouchesReached()) {\n      return;\n    }\n    UserEvents.current = null;\n    that.currentTarget = e.currentTarget;\n    if (that.stopPropagation) {\n      e.stopPropagation();\n    }\n    for (; idx < length; idx++) {\n      if (that._maxTouchesReached()) {\n        break;\n      }\n      touch = touches[idx];\n      if (filter) {\n        target = touch.currentTarget;\n      } else {\n        target = that.element;\n      }\n      if (target && target.length === 0) {\n        continue;\n      }\n      touch = new Touch(that, target, touch);\n      that.touches.push(touch);\n      touch.press();\n      if (that._isMultiTouch()) {\n        that.notify('gesturestart', {});\n      }\n    }\n  }\n  _move(e) {\n    this._eachTouch('move', e);\n  }\n  _end(e) {\n    this._eachTouch('end', e);\n  }\n  _click(e) {\n    let data = {\n      touch: {\n        initialTouch: e.target,\n        target: e.currentTarget,\n        endTime: now(),\n        x: {\n          location: e.pageX,\n          client: e.clientX\n        },\n        y: {\n          location: e.pageY,\n          client: e.clientY\n        }\n      },\n      x: e.pageX,\n      y: e.pageY,\n      target: e.currentTarget,\n      event: e,\n      type: 'tap'\n    };\n    if (this.trigger('tap', data)) {\n      e.preventDefault();\n    }\n  }\n  _eachTouch(methodName, e) {\n    let that = this,\n      dict = {},\n      touches = getTouches(e),\n      activeTouches = that.touches,\n      idx,\n      touch,\n      touchInfo,\n      matchingTouch;\n    for (idx = 0; idx < activeTouches.length; idx++) {\n      touch = activeTouches[idx];\n      dict[touch.id] = touch;\n    }\n    for (idx = 0; idx < touches.length; idx++) {\n      touchInfo = touches[idx];\n      matchingTouch = dict[touchInfo.id];\n      if (matchingTouch) {\n        matchingTouch[methodName](touchInfo);\n      }\n    }\n  }\n  _apiCall(type, x, y, target) {\n    this[type]({\n      api: true,\n      pageX: x,\n      pageY: y,\n      clientX: x,\n      clientY: y,\n      target: target || this.element,\n      stopPropagation: noop,\n      preventDefault: noop\n    });\n  }\n  static defaultThreshold(value) {\n    DEFAULT_THRESHOLD = value;\n  }\n  static minHold(value) {\n    DEFAULT_MIN_HOLD = value;\n  }\n}","map":{"version":3,"names":["Class","grep","proxy","noop","applyEventMap","getEventMap","on","off","now","getSupportedFeatures","Observable","extend","Object","assign","preventDefault","e","DEFAULT_MIN_HOLD","CLICK_DELAY","DEFAULT_THRESHOLD","PRESS","HOLD","SELECT","START","MOVE","END","CANCEL","TAP","DOUBLETAP","RELEASE","GESTURESTART","GESTURECHANGE","GESTUREEND","GESTURETAP","THRESHOLD","touchDelta","touch1","touch2","x1","x","location","y1","y","x2","y2","dx","dy","center","distance","Math","sqrt","getTouches","support","touches","originalEvent","currentTarget","idx","length","changedTouches","touch","api","push","id","event","target","type","match","identifier","pointers","msPointers","pointerId","TouchAxis","constructor","axis","that","invalidZeroEvents","mobileOS","android","_updateLocationData","startLocation","velocity","delta","timeStamp","move","offset","timeDelta","initialDelta","client","screen","Touch","userEvents","touchInfo","useClickAsTap","threshold","initialTouch","pressEvent","_clicks","supportDoubleTap","_moved","_finished","press","_holdTimeout","setTimeout","_hold","minHold","_trigger","_tap","_clickTimeout","preventMove","_shouldNotMove","_withinIgnoreThreshold","UserEvents","current","_start","dispose","end","endTime","clearTimeout","activeTouches","activeTouchIndex","indexOf","splice","skip","cancel","isMoved","startTime","name","jQueryEvent","data","notify","xDelta","yDelta","withEachUpEvent","callback","eventMap","navigator","userAgent","downEvents","up","split","element","options","filter","_maxTouches","multiTouch","allowSelection","captureUpIfMoved","fastTap","delayedClick","enableGlobalSurface","mouseAndTouchPresent","surface","global","ownerDocument","documentElement","stopPropagation","pressed","_surfaceMoveHandler","_move","_surfaceEndHandler","_end","_elementStartHandler","_elementClickHandler","_click","browser","version","defaultAction","style","touchAction","preventDragEvent","_elementDragStartHandler","_elementSelectHandler","_select","eventCapture","surfaceElement","preventIfMovingProxy","preventIfMoving","eventName","addEventListener","bind","_isMoved","destroy","_destroyed","removeEventListener","_disposeAll","unbind","capture","trigger","_isMultiTouch","_apiCall","_maxTouchesReached","pop","which","_eachTouch","pageX","clientX","pageY","clientY","methodName","dict","matchingTouch","defaultThreshold","value"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/map/scroller/user-events.js"],"sourcesContent":["import {\n    Class,\n    grep\n} from '../../common';\n\nimport {\n    proxy,\n    noop,\n    applyEventMap,\n    getEventMap,\n    on,\n    off,\n    now,\n    getSupportedFeatures\n} from '../utils';\n\nimport {\n    Observable\n} from './observable';\n\nconst extend = Object.assign;\n\nconst preventDefault = (e) => {\n    e.preventDefault();\n};\n\nlet\n    DEFAULT_MIN_HOLD = 800,\n    CLICK_DELAY = 300,\n    // DEFAULT_THRESHOLD = support.browser.msie ? 5 : 0,\n    DEFAULT_THRESHOLD = 0,\n    PRESS = 'press',\n    HOLD = 'hold',\n    SELECT = 'select',\n    START = 'start',\n    MOVE = 'move',\n    END = 'end',\n    CANCEL = 'cancel',\n    TAP = 'tap',\n    DOUBLETAP = 'doubleTap',\n    RELEASE = 'release',\n    GESTURESTART = 'gesturestart',\n    GESTURECHANGE = 'gesturechange',\n    GESTUREEND = 'gestureend',\n    GESTURETAP = 'gesturetap';\n\nlet THRESHOLD = {\n    'api': 0,\n    'touch': 0,\n    'mouse': 9,\n    'pointer': 9\n};\n\nfunction touchDelta(touch1, touch2) {\n    let x1 = touch1.x.location,\n        y1 = touch1.y.location,\n        x2 = touch2.x.location,\n        y2 = touch2.y.location,\n        dx = x1 - x2,\n        dy = y1 - y2;\n\n    return {\n        center: {\n            x: (x1 + x2) / 2,\n            y: (y1 + y2) / 2\n        },\n        distance: Math.sqrt(dx * dx + dy * dy)\n    };\n}\n\nfunction getTouches(e) {\n    const support = getSupportedFeatures();\n    let touches = [],\n        originalEvent = e.originalEvent || e,\n        currentTarget = e.currentTarget,\n        idx = 0,\n        length, changedTouches, touch;\n\n    if (e.api) {\n        touches.push({\n            id: 2,\n            event: e,\n            target: e.target,\n            currentTarget: e.target,\n            location: e,\n            type: 'api'\n        });\n    } else if (e.type.match(/touch/)) {\n        changedTouches = originalEvent ? originalEvent.changedTouches : [];\n\n        for (length = changedTouches.length; idx < length; idx++) {\n            touch = changedTouches[idx];\n            touches.push({\n                location: touch,\n                event: e,\n                target: touch.target,\n                currentTarget: currentTarget,\n                id: touch.identifier,\n                type: 'touch'\n            });\n        }\n    } else if (support.pointers || support.msPointers) {\n        touches.push({\n            location: originalEvent,\n            event: e,\n            target: e.target,\n            currentTarget: currentTarget,\n            id: originalEvent.pointerId,\n            type: 'pointer'\n        });\n    } else {\n        touches.push({\n            id: 1,\n            event: e,\n            target: e.target,\n            currentTarget: currentTarget,\n            location: e,\n            type: 'mouse'\n        });\n    }\n\n    return touches;\n}\nexport class TouchAxis extends Class {\n    constructor(axis, location) {\n        super();\n        let that = this;\n\n        that.support = getSupportedFeatures();\n        that.invalidZeroEvents = this.support.mobileOS && this.support.mobileOS.android;\n        that.axis = axis;\n        that._updateLocationData(location);\n        that.startLocation = that.location;\n        that.velocity = that.delta = 0;\n        that.timeStamp = now();\n    }\n\n    move(location) {\n        let that = this,\n            offset = location['page' + that.axis],\n            timeStamp = now(),\n            timeDelta = timeStamp - that.timeStamp || 1;\n\n        if (!offset && this.invalidZeroEvents) {\n            return;\n        }\n\n        that.delta = offset - that.location;\n        that._updateLocationData(location);\n        that.initialDelta = offset - that.startLocation;\n        that.velocity = that.delta / timeDelta;\n        that.timeStamp = timeStamp;\n    }\n\n    _updateLocationData(location) {\n        let that = this,\n            axis = that.axis;\n\n        that.location = location['page' + axis];\n        that.client = location['client' + axis];\n        that.screen = location['screen' + axis];\n    }\n}\n\nexport class Touch extends Class {\n    constructor(userEvents, target, touchInfo) {\n        super();\n\n        extend(this, {\n            x: new TouchAxis('X', touchInfo.location),\n            y: new TouchAxis('Y', touchInfo.location),\n            type: touchInfo.type,\n            useClickAsTap: userEvents.useClickAsTap,\n            threshold: userEvents.threshold || THRESHOLD[touchInfo.type],\n            userEvents: userEvents,\n            target: target,\n            currentTarget: touchInfo.currentTarget,\n            initialTouch: touchInfo.target,\n            id: touchInfo.id,\n            pressEvent: touchInfo,\n            _clicks: userEvents._clicks,\n            supportDoubleTap: userEvents.supportDoubleTap,\n            _moved: false,\n            _finished: false\n        });\n    }\n\n    press() {\n        // this._holdTimeout = setTimeout($.proxy(this, '_hold'), this.userEvents.minHold);\n        this._holdTimeout = setTimeout(proxy(this._hold, this), this.userEvents.minHold);\n        this._trigger(PRESS, this.pressEvent);\n    }\n\n    _tap(touchInfo) {\n        let that = this;\n\n        that.userEvents._clicks++;\n\n        if (that.userEvents._clicks === 1) {\n            that._clickTimeout = setTimeout(function() {\n                if (that.userEvents._clicks === 1) {\n                    that._trigger(TAP, touchInfo);\n                } else {\n                    that._trigger(DOUBLETAP, touchInfo);\n                }\n\n                that.userEvents._clicks = 0;\n            }, CLICK_DELAY);\n        }\n    }\n\n    _hold() {\n        this._trigger(HOLD, this.pressEvent);\n    }\n\n    /* eslint-disable consistent-return */\n    move(touchInfo) {\n        let that = this;\n        let preventMove = touchInfo.type !== 'api' && that.userEvents._shouldNotMove;\n\n        if (that._finished || preventMove) {\n            return;\n        }\n\n        that.x.move(touchInfo.location);\n        that.y.move(touchInfo.location);\n\n        if (!that._moved) {\n            if (that._withinIgnoreThreshold()) {\n                return;\n            }\n\n            if (!UserEvents.current || UserEvents.current === that.userEvents) {\n                that._start(touchInfo);\n            } else {\n                return that.dispose();\n            }\n        }\n\n        if (!that._finished) {\n            that._trigger(MOVE, touchInfo);\n        }\n    }\n    /* eslint-enable consistent-return */\n\n    end(touchInfo) {\n        this.endTime = now();\n\n        if (this._finished) {\n            return;\n        }\n\n        this._finished = true;\n        this._trigger(RELEASE, touchInfo);\n\n        if (this._moved) {\n            this._trigger(END, touchInfo);\n        } else {\n            if (!this.useClickAsTap) {\n                if (this.supportDoubleTap) {\n                    this._tap(touchInfo);\n                } else {\n                    this._trigger(TAP, touchInfo);\n                }\n            }\n        }\n\n        clearTimeout(this._holdTimeout);\n        this.dispose();\n    }\n\n    dispose() {\n        let userEvents = this.userEvents,\n            activeTouches = userEvents.touches || [];\n\n        this._finished = true;\n        this.pressEvent = null;\n\n        clearTimeout(this._holdTimeout);\n        // activeTouches.splice($.inArray(this, activeTouches), 1);\n        const activeTouchIndex = activeTouches.indexOf(this);\n        activeTouches.splice(activeTouchIndex, 1);\n    }\n\n    skip() {\n        this.dispose();\n    }\n\n    cancel() {\n        this.dispose();\n    }\n\n    isMoved() {\n        return this._moved;\n    }\n\n    _start(touchInfo) {\n        clearTimeout(this._holdTimeout);\n        this.startTime = now();\n        this._moved = true;\n        this._trigger(START, touchInfo);\n    }\n\n    _trigger(name, touchInfo) {\n        let that = this,\n            jQueryEvent = touchInfo.event,\n            data = {\n                touch: that,\n                x: that.x,\n                y: that.y,\n                target: that.target,\n                event: jQueryEvent\n            };\n        if (that.userEvents.notify(name, data)) {\n            jQueryEvent.preventDefault();\n        }\n    }\n\n    _withinIgnoreThreshold() {\n        let xDelta = this.x.initialDelta,\n            yDelta = this.y.initialDelta;\n        return Math.sqrt(xDelta * xDelta + yDelta * yDelta) <= this.threshold;\n    }\n}\n\nfunction withEachUpEvent(callback) {\n    const eventMap = getEventMap(navigator.userAgent);\n    let downEvents = eventMap.up.split(' '),\n        idx = 0,\n        length = downEvents.length;\n\n    for (; idx < length; idx++) {\n        callback(downEvents[idx]);\n    }\n}\n\nexport class UserEvents extends Observable {\n    constructor(element, options) {\n        super();\n        let that = this;\n        let filter;\n\n        const support = getSupportedFeatures();\n        this.support = support;\n\n        /* eslint-disable no-param-reassign */\n        options = options || {};\n        /* eslint-enable no-param-reassign */\n        this.options = options;\n\n        filter = that.filter = options.filter;\n        that.threshold = options.threshold || DEFAULT_THRESHOLD;\n        that.minHold = options.minHold || DEFAULT_MIN_HOLD;\n        that.touches = [];\n        that._maxTouches = options.multiTouch ? 2 : 1;\n        that.allowSelection = options.allowSelection;\n        that.captureUpIfMoved = options.captureUpIfMoved;\n        that.useClickAsTap = !options.fastTap && !support.delayedClick();\n        that._clicks = 0;\n        that.supportDoubleTap = options.supportDoubleTap;\n\n        const enableGlobalSurface = !support.touch || support.mouseAndTouchPresent;\n\n        extend(that, {\n            element: element,\n            surface: options.global && enableGlobalSurface ?\n                element.ownerDocument.documentElement :\n                options.surface || element,\n            stopPropagation: options.stopPropagation,\n            pressed: false\n        });\n\n        this._surfaceMoveHandler = proxy(this._move, this);\n        on(that.surface, applyEventMap('move'), this._surfaceMoveHandler);\n\n        this._surfaceEndHandler = proxy(this._end, this);\n        on(that.surface, applyEventMap('up cancel'), this._surfaceEndHandler);\n\n        this._elementStartHandler = proxy(this._start, this);\n        on(element, applyEventMap('down'), filter, this._elementStartHandler);\n\n        if (that.useClickAsTap) {\n            this._elementClickHandler = proxy(this._click, this);\n            on(element, applyEventMap('click'), filter, this._elementClickHandler);\n        }\n\n        if (support.pointers || support.msPointers) {\n            if (support.browser.version < 11) {\n                let defaultAction = 'pinch-zoom double-tap-zoom';\n\n                element.style['-ms-touch-action'] =\n                    options.touchAction && options.touchAction !== 'none' ?\n                        defaultAction + ' ' + options.touchAction :\n                        defaultAction;\n\n            } else {\n                element.style['touch-action'] = options.touchAction || 'none';\n            }\n        }\n        if (options.preventDragEvent) {\n            this._elementDragStartHandler = preventDefault;\n            on(element, applyEventMap('dragstart'), this._elementDragStartHandler);\n        }\n\n        // element.on(kendo.applyEventMap('mousedown'), filter, {\n        //     root: element\n        // } '_select');\n\n        // todo: use root\n        this._elementSelectHandler = proxy(this._select, this);\n        on(element, applyEventMap('mousedown'), filter, this._elementSelectHandler);\n\n        if (that.captureUpIfMoved && support.eventCapture) {\n            let surfaceElement = that.surface,\n                preventIfMovingProxy = proxy(that.preventIfMoving, that);\n\n            withEachUpEvent(function(eventName) {\n                surfaceElement.addEventListener(eventName, preventIfMovingProxy, true);\n            });\n        }\n\n        that.bind([\n            PRESS,\n            HOLD,\n            TAP,\n            DOUBLETAP,\n            START,\n            MOVE,\n            END,\n            RELEASE,\n            CANCEL,\n            GESTURESTART,\n            GESTURECHANGE,\n            GESTUREEND,\n            GESTURETAP,\n            SELECT\n        ], options);\n    }\n\n    preventIfMoving(e) {\n        if (this._isMoved()) {\n            e.preventDefault();\n        }\n    }\n\n    destroy() {\n        let that = this;\n        const options = this.options;\n        const element = this.element;\n\n        if (that._destroyed) {\n            return;\n        }\n\n        that._destroyed = true;\n\n        if (that.captureUpIfMoved && this.support.eventCapture) {\n            let surfaceElement = that.surface;\n            withEachUpEvent(function(eventName) {\n                surfaceElement.removeEventListener(eventName, that.preventIfMoving);\n            });\n        }\n\n        off(that.surface, applyEventMap('move'), this._surfaceMoveHandler);\n        off(that.surface, applyEventMap('up cancel'), this._surfaceEndHandler);\n\n        off(element, applyEventMap('down'), this._elementStartHandler);\n\n        if (that.useClickAsTap) {\n            off(element, applyEventMap('click'), this._elementClickHandler);\n        }\n\n        if (options.preventDragEvent) {\n            off(element, applyEventMap('dragstart'), this._elementDragStartHandler);\n        }\n\n        off(element, applyEventMap('mousedown'), this._elementSelectHandler);\n\n        that._disposeAll();\n        that.unbind();\n\n        delete that.surface;\n        delete that.element;\n        delete that.currentTarget;\n    }\n\n    capture() {\n        UserEvents.current = this;\n    }\n\n    cancel() {\n        this._disposeAll();\n        this.trigger(CANCEL);\n    }\n\n    /* eslint-disable indent */\n    notify(event, data) {\n        let that = this,\n            touches = that.touches;\n        let eventName = event;\n\n        if (this._isMultiTouch()) {\n            switch (eventName) {\n                case MOVE:\n                    eventName = GESTURECHANGE;\n                    break;\n                case END:\n                    eventName = GESTUREEND;\n                    break;\n                case TAP:\n                    eventName = GESTURETAP;\n                    break;\n                default:\n                    break;\n            }\n\n            extend(data, {\n                touches: touches\n            }, touchDelta(touches[0], touches[1]));\n        }\n\n        return this.trigger(eventName, extend(data, {\n            type: eventName\n        }));\n    }\n    /* eslint-enable indent */\n\n    press(x, y, target) {\n        this._apiCall('_start', x, y, target);\n    }\n\n    move(x, y) {\n        this._apiCall('_move', x, y);\n    }\n\n    end(x, y) {\n        this._apiCall('_end', x, y);\n    }\n\n    _isMultiTouch() {\n        return this.touches.length > 1;\n    }\n\n    _maxTouchesReached() {\n        return this.touches.length >= this._maxTouches;\n    }\n\n    _disposeAll() {\n        let touches = this.touches;\n        while (touches.length > 0) {\n            touches.pop().dispose();\n        }\n    }\n\n    _isMoved() {\n        return grep(this.touches, function(touch) {\n            return touch.isMoved();\n        }).length;\n    }\n\n    _select(e) {\n        if (!this.allowSelection || this.trigger(SELECT, { event: e })) {\n            e.preventDefault();\n        }\n    }\n\n    _start(e) {\n        let that = this,\n            idx = 0,\n            filter = that.filter,\n            target,\n            touches = getTouches(e),\n            length = touches.length,\n            touch,\n            which = e.which;\n\n        if (which && which > 1 || that._maxTouchesReached()) {\n            return;\n        }\n\n        UserEvents.current = null;\n        that.currentTarget = e.currentTarget;\n\n        if (that.stopPropagation) {\n            e.stopPropagation();\n        }\n\n        for (; idx < length; idx++) {\n            if (that._maxTouchesReached()) {\n                break;\n            }\n\n            touch = touches[idx];\n\n            if (filter) {\n                target = touch.currentTarget;\n            } else {\n                target = that.element;\n            }\n\n            if (target && target.length === 0) {\n                continue;\n            }\n\n            touch = new Touch(that, target, touch);\n            that.touches.push(touch);\n            touch.press();\n\n            if (that._isMultiTouch()) {\n                that.notify('gesturestart', {});\n            }\n        }\n    }\n\n    _move(e) {\n        this._eachTouch('move', e);\n    }\n\n    _end(e) {\n        this._eachTouch('end', e);\n    }\n\n    _click(e) {\n        let data = {\n            touch: {\n                initialTouch: e.target,\n                target: e.currentTarget,\n                endTime: now(),\n                x: {\n                    location: e.pageX,\n                    client: e.clientX\n                },\n                y: {\n                    location: e.pageY,\n                    client: e.clientY\n                }\n            },\n            x: e.pageX,\n            y: e.pageY,\n            target: e.currentTarget,\n            event: e,\n            type: 'tap'\n        };\n\n        if (this.trigger('tap', data)) {\n            e.preventDefault();\n        }\n    }\n\n    _eachTouch(methodName, e) {\n        let that = this,\n            dict = {},\n            touches = getTouches(e),\n            activeTouches = that.touches,\n            idx,\n            touch,\n            touchInfo,\n            matchingTouch;\n\n        for (idx = 0; idx < activeTouches.length; idx++) {\n            touch = activeTouches[idx];\n            dict[touch.id] = touch;\n        }\n\n        for (idx = 0; idx < touches.length; idx++) {\n            touchInfo = touches[idx];\n            matchingTouch = dict[touchInfo.id];\n\n            if (matchingTouch) {\n                matchingTouch[methodName](touchInfo);\n            }\n        }\n    }\n\n    _apiCall(type, x, y, target) {\n        this[type]({\n            api: true,\n            pageX: x,\n            pageY: y,\n            clientX: x,\n            clientY: y,\n            target: target || this.element,\n            stopPropagation: noop,\n            preventDefault: noop\n        });\n    }\n\n    static defaultThreshold(value) {\n        DEFAULT_THRESHOLD = value;\n    }\n\n    static minHold(value) {\n        DEFAULT_MIN_HOLD = value;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}