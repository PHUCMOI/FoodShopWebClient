{"ast":null,"code":"import { Class } from '../common';\nclass QuadRoot extends Class {\n  constructor() {\n    super();\n    this.shapes = [];\n  }\n  _add(shape, bbox) {\n    this.shapes.push({\n      bbox: bbox,\n      shape: shape\n    });\n    shape._quadNode = this;\n  }\n  pointShapes(point) {\n    const shapes = this.shapes;\n    const length = shapes.length;\n    const result = [];\n    for (let idx = 0; idx < length; idx++) {\n      if (shapes[idx].bbox.containsPoint(point)) {\n        result.push(shapes[idx].shape);\n      }\n    }\n    return result;\n  }\n  insert(shape, bbox) {\n    this._add(shape, bbox);\n  }\n  remove(shape) {\n    const shapes = this.shapes;\n    const length = shapes.length;\n    for (let idx = 0; idx < length; idx++) {\n      if (shapes[idx].shape === shape) {\n        shapes.splice(idx, 1);\n        break;\n      }\n    }\n  }\n}\nexport default QuadRoot;","map":{"version":3,"names":["Class","QuadRoot","constructor","shapes","_add","shape","bbox","push","_quadNode","pointShapes","point","length","result","idx","containsPoint","insert","remove","splice"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/search/quad-root.js"],"sourcesContent":["import { Class } from '../common';\n\nclass QuadRoot extends Class {\n    constructor() {\n        super();\n\n        this.shapes = [];\n    }\n\n    _add(shape, bbox) {\n        this.shapes.push({\n            bbox: bbox,\n            shape: shape\n        });\n        shape._quadNode = this;\n    }\n\n    pointShapes(point) {\n        const shapes = this.shapes;\n        const length = shapes.length;\n        const result = [];\n        for (let idx = 0; idx < length; idx++) {\n            if (shapes[idx].bbox.containsPoint(point)) {\n                result.push(shapes[idx].shape);\n            }\n        }\n        return result;\n    }\n\n    insert(shape, bbox) {\n        this._add(shape, bbox);\n    }\n\n    remove(shape) {\n        const shapes = this.shapes;\n        const length = shapes.length;\n\n        for (let idx = 0; idx < length; idx++) {\n            if (shapes[idx].shape === shape) {\n                shapes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n}\n\nexport default QuadRoot;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,WAAW;AAEjC,MAAMC,QAAQ,SAASD,KAAK,CAAC;EACzBE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,MAAM,GAAG,EAAE;EACpB;EAEAC,IAAIA,CAACC,KAAK,EAAEC,IAAI,EAAE;IACd,IAAI,CAACH,MAAM,CAACI,IAAI,CAAC;MACbD,IAAI,EAAEA,IAAI;MACVD,KAAK,EAAEA;IACX,CAAC,CAAC;IACFA,KAAK,CAACG,SAAS,GAAG,IAAI;EAC1B;EAEAC,WAAWA,CAACC,KAAK,EAAE;IACf,MAAMP,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMQ,MAAM,GAAGR,MAAM,CAACQ,MAAM;IAC5B,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,MAAM,EAAEE,GAAG,EAAE,EAAE;MACnC,IAAIV,MAAM,CAACU,GAAG,CAAC,CAACP,IAAI,CAACQ,aAAa,CAACJ,KAAK,CAAC,EAAE;QACvCE,MAAM,CAACL,IAAI,CAACJ,MAAM,CAACU,GAAG,CAAC,CAACR,KAAK,CAAC;MAClC;IACJ;IACA,OAAOO,MAAM;EACjB;EAEAG,MAAMA,CAACV,KAAK,EAAEC,IAAI,EAAE;IAChB,IAAI,CAACF,IAAI,CAACC,KAAK,EAAEC,IAAI,CAAC;EAC1B;EAEAU,MAAMA,CAACX,KAAK,EAAE;IACV,MAAMF,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMQ,MAAM,GAAGR,MAAM,CAACQ,MAAM;IAE5B,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,MAAM,EAAEE,GAAG,EAAE,EAAE;MACnC,IAAIV,MAAM,CAACU,GAAG,CAAC,CAACR,KAAK,KAAKA,KAAK,EAAE;QAC7BF,MAAM,CAACc,MAAM,CAACJ,GAAG,EAAE,CAAC,CAAC;QACrB;MACJ;IACJ;EACJ;AACJ;AAEA,eAAeZ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}