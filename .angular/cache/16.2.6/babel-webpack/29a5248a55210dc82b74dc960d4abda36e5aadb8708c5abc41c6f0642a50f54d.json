{"ast":null,"code":"import autoMajorUnit from '../../core/utils/auto-major-unit';\nimport { valueOrDefault } from '../../common';\nimport calculateSlope from './calculate-slope';\nimport scatterValueGetter from './scatter-value-getter';\nfunction scatterLinearTrendLine(context) {\n  const {\n    options,\n    seriesValues\n  } = context;\n  const data = getData({\n    seriesValues,\n    options\n  });\n  if (data) {\n    return Object.assign({}, options, {\n      type: 'scatterLine',\n      data\n    });\n  }\n  return null;\n}\nfunction getData({\n  seriesValues,\n  options\n}) {\n  let {\n    slope,\n    intercept,\n    count,\n    xMin,\n    xMax\n  } = calculateSlope(seriesValues(), scatterValueGetter(options.field));\n  if (count > 0) {\n    const data = [];\n    const forecast = (options.trendline || {}).forecast;\n    if (forecast) {\n      if (forecast.before > 0) {\n        xMin -= forecast.before;\n      }\n      if (forecast.after > 0) {\n        xMax += forecast.after;\n      }\n    }\n    const samplingInterval = (options.trendline || {}).samplingInterval;\n    let delta = valueOrDefault(samplingInterval, autoMajorUnit(xMin, xMax) / 10);\n    if (samplingInterval <= 0) {\n      delta = xMax - xMin;\n    }\n    for (let x = xMin; x <= xMax; x += delta) {\n      data.push([x, slope * x + intercept]);\n    }\n    return data;\n  }\n  return null;\n}\nexport default scatterLinearTrendLine;","map":{"version":3,"names":["autoMajorUnit","valueOrDefault","calculateSlope","scatterValueGetter","scatterLinearTrendLine","context","options","seriesValues","data","getData","Object","assign","type","slope","intercept","count","xMin","xMax","field","forecast","trendline","before","after","samplingInterval","delta","x","push"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/trendlines/scatter-linear-trendline.js"],"sourcesContent":["import autoMajorUnit from '../../core/utils/auto-major-unit';\nimport { valueOrDefault } from '../../common';\nimport calculateSlope from './calculate-slope';\nimport scatterValueGetter from './scatter-value-getter';\n\nfunction scatterLinearTrendLine(context) {\n    const {\n        options,\n        seriesValues\n    } = context;\n\n    const data = getData({ seriesValues, options });\n    if (data) {\n        return Object.assign({}, options,\n\n            {type: 'scatterLine',\n            data});\n    }\n\n    return null;\n}\n\nfunction getData({ seriesValues, options }) {\n    let { slope, intercept, count, xMin, xMax } = calculateSlope(seriesValues(), scatterValueGetter(options.field));\n\n    if (count > 0) {\n        const data = [];\n        const forecast = (options.trendline || {}).forecast;\n        if (forecast) {\n            if (forecast.before > 0) {\n                xMin -= forecast.before;\n            }\n\n            if (forecast.after > 0) {\n                xMax += forecast.after;\n            }\n        }\n\n        const samplingInterval = (options.trendline || {}).samplingInterval;\n        let delta = valueOrDefault(samplingInterval,  autoMajorUnit(xMin, xMax) / 10);\n        if (samplingInterval <= 0) {\n            delta = xMax - xMin;\n        }\n\n        for (let x = xMin; x <= xMax; x += delta) {\n            data.push([ x,\n                slope * x + intercept\n            ]);\n        }\n\n        return data;\n    }\n\n    return null;\n}\n\nexport default scatterLinearTrendLine;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,kCAAkC;AAC5D,SAASC,cAAc,QAAQ,cAAc;AAC7C,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAOC,kBAAkB,MAAM,wBAAwB;AAEvD,SAASC,sBAAsBA,CAACC,OAAO,EAAE;EACrC,MAAM;IACFC,OAAO;IACPC;EACJ,CAAC,GAAGF,OAAO;EAEX,MAAMG,IAAI,GAAGC,OAAO,CAAC;IAAEF,YAAY;IAAED;EAAQ,CAAC,CAAC;EAC/C,IAAIE,IAAI,EAAE;IACN,OAAOE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,OAAO,EAE5B;MAACM,IAAI,EAAE,aAAa;MACpBJ;IAAI,CAAC,CAAC;EACd;EAEA,OAAO,IAAI;AACf;AAEA,SAASC,OAAOA,CAAC;EAAEF,YAAY;EAAED;AAAQ,CAAC,EAAE;EACxC,IAAI;IAAEO,KAAK;IAAEC,SAAS;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGf,cAAc,CAACK,YAAY,CAAC,CAAC,EAAEJ,kBAAkB,CAACG,OAAO,CAACY,KAAK,CAAC,CAAC;EAE/G,IAAIH,KAAK,GAAG,CAAC,EAAE;IACX,MAAMP,IAAI,GAAG,EAAE;IACf,MAAMW,QAAQ,GAAG,CAACb,OAAO,CAACc,SAAS,IAAI,CAAC,CAAC,EAAED,QAAQ;IACnD,IAAIA,QAAQ,EAAE;MACV,IAAIA,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;QACrBL,IAAI,IAAIG,QAAQ,CAACE,MAAM;MAC3B;MAEA,IAAIF,QAAQ,CAACG,KAAK,GAAG,CAAC,EAAE;QACpBL,IAAI,IAAIE,QAAQ,CAACG,KAAK;MAC1B;IACJ;IAEA,MAAMC,gBAAgB,GAAG,CAACjB,OAAO,CAACc,SAAS,IAAI,CAAC,CAAC,EAAEG,gBAAgB;IACnE,IAAIC,KAAK,GAAGvB,cAAc,CAACsB,gBAAgB,EAAGvB,aAAa,CAACgB,IAAI,EAAEC,IAAI,CAAC,GAAG,EAAE,CAAC;IAC7E,IAAIM,gBAAgB,IAAI,CAAC,EAAE;MACvBC,KAAK,GAAGP,IAAI,GAAGD,IAAI;IACvB;IAEA,KAAK,IAAIS,CAAC,GAAGT,IAAI,EAAES,CAAC,IAAIR,IAAI,EAAEQ,CAAC,IAAID,KAAK,EAAE;MACtChB,IAAI,CAACkB,IAAI,CAAC,CAAED,CAAC,EACTZ,KAAK,GAAGY,CAAC,GAAGX,SAAS,CACxB,CAAC;IACN;IAEA,OAAON,IAAI;EACf;EAEA,OAAO,IAAI;AACf;AAEA,eAAeJ,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}