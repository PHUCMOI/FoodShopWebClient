{"ast":null,"code":"import BaseSurface from '../core/surface';\nimport { createPromise, promiseAll, bindEvents, elementSize, unbindEvents } from '../util';\nimport RootNode from './root-node';\nimport ShapesQuadTree from '../search/shapes-quad-tree';\nimport SurfaceCursor from './surface-cursor';\nimport ArcNode from './arc-node';\nimport CircleNode from './circle-node';\nimport GroupNode from './group-node';\nimport ImageNode from './image-node';\nimport MultiPathNode from './multi-path-node';\nimport PathNode from './path-node';\nimport RectNode from './rect-node';\nimport TextNode from './text-node';\nimport NODE_MAP from './node-map';\nNODE_MAP.Arc = ArcNode;\nNODE_MAP.Circle = CircleNode;\nNODE_MAP.Group = GroupNode;\nNODE_MAP.Image = ImageNode;\nNODE_MAP.MultiPath = MultiPathNode;\nNODE_MAP.Path = PathNode;\nNODE_MAP.Rect = RectNode;\nNODE_MAP.Text = TextNode;\nclass Surface extends BaseSurface {\n  get type() {\n    return \"canvas\";\n  }\n  constructor(element, options) {\n    super(element, options);\n    this.element.innerHTML = this._template(this);\n    const canvas = this.element.firstElementChild;\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    const size = elementSize(element);\n    canvas.width = size.width;\n    canvas.height = size.height;\n    this._rootElement = canvas;\n    this._root = new RootNode(canvas, size);\n    this._mouseTrackHandler = this._trackMouse.bind(this);\n    bindEvents(this.element, {\n      click: this._mouseTrackHandler,\n      mousemove: this._mouseTrackHandler\n    });\n  }\n  destroy() {\n    super.destroy();\n    if (this._root) {\n      this._root.destroy();\n      this._root = null;\n    }\n    if (this._searchTree) {\n      this._searchTree.clear();\n      delete this._searchTree;\n    }\n    if (this._cursor) {\n      this._cursor.destroy();\n      delete this._cursor;\n    }\n    unbindEvents(this.element, {\n      click: this._mouseTrackHandler,\n      mousemove: this._mouseTrackHandler\n    });\n  }\n  draw(element) {\n    super.draw(element);\n    this._root.load([element], undefined, this.options.cors);\n    if (this._searchTree) {\n      this._searchTree.add([element]);\n    }\n  }\n  clear() {\n    super.clear();\n    this._root.clear();\n    if (this._searchTree) {\n      this._searchTree.clear();\n    }\n    if (this._cursor) {\n      this._cursor.clear();\n    }\n  }\n  eventTarget(e) {\n    if (this._searchTree) {\n      const point = this._surfacePoint(e);\n      const shape = this._searchTree.pointShape(point);\n      return shape;\n    }\n  }\n  image() {\n    const {\n      _root: root,\n      _rootElement: rootElement\n    } = this;\n    const loadingStates = [];\n    root.traverse(childNode => {\n      if (childNode.loading) {\n        loadingStates.push(childNode.loading);\n      }\n    });\n    const promise = createPromise();\n    const resolveDataURL = () => {\n      root._invalidate({\n        fixedScale: true\n      });\n      try {\n        const data = rootElement.toDataURL();\n        promise.resolve(data);\n      } catch (e) {\n        promise.reject(e);\n      }\n    };\n    promiseAll(loadingStates).then(resolveDataURL, resolveDataURL);\n    return promise;\n  }\n  suspendTracking() {\n    super.suspendTracking();\n    if (this._searchTree) {\n      this._searchTree.clear();\n      delete this._searchTree;\n    }\n  }\n  resumeTracking() {\n    super.resumeTracking();\n    if (!this._searchTree) {\n      this._searchTree = new ShapesQuadTree();\n      const childNodes = this._root.childNodes;\n      const rootElements = [];\n      for (let idx = 0; idx < childNodes.length; idx++) {\n        rootElements.push(childNodes[idx].srcElement);\n      }\n      this._searchTree.add(rootElements);\n    }\n  }\n  _resize() {\n    this._rootElement.width = this._size.width;\n    this._rootElement.height = this._size.height;\n    this._root.size = this._size;\n    this._root.invalidate();\n  }\n  _template() {\n    return \"<canvas></canvas>\";\n  }\n  _enableTracking() {\n    this._searchTree = new ShapesQuadTree();\n    this._cursor = new SurfaceCursor(this);\n    super._enableTracking();\n  }\n  _trackMouse(e) {\n    if (this._suspendedTracking) {\n      return;\n    }\n    const shape = this.eventTarget(e);\n    if (e.type !== \"click\") {\n      const currentShape = this._currentShape;\n      if (currentShape && currentShape !== shape) {\n        this.trigger(\"mouseleave\", {\n          element: currentShape,\n          originalEvent: e,\n          type: \"mouseleave\"\n        });\n      }\n      if (shape && currentShape !== shape) {\n        this.trigger(\"mouseenter\", {\n          element: shape,\n          originalEvent: e,\n          type: \"mouseenter\"\n        });\n      }\n      this.trigger(\"mousemove\", {\n        element: shape,\n        originalEvent: e,\n        type: \"mousemove\"\n      });\n      this._currentShape = shape;\n    } else if (shape) {\n      this.trigger(\"click\", {\n        element: shape,\n        originalEvent: e,\n        type: \"click\"\n      });\n    }\n  }\n}\nexport default Surface;","map":{"version":3,"names":["BaseSurface","createPromise","promiseAll","bindEvents","elementSize","unbindEvents","RootNode","ShapesQuadTree","SurfaceCursor","ArcNode","CircleNode","GroupNode","ImageNode","MultiPathNode","PathNode","RectNode","TextNode","NODE_MAP","Arc","Circle","Group","Image","MultiPath","Path","Rect","Text","Surface","type","constructor","element","options","innerHTML","_template","canvas","firstElementChild","style","width","height","size","_rootElement","_root","_mouseTrackHandler","_trackMouse","bind","click","mousemove","destroy","_searchTree","clear","_cursor","draw","load","undefined","cors","add","eventTarget","e","point","_surfacePoint","shape","pointShape","image","root","rootElement","loadingStates","traverse","childNode","loading","push","promise","resolveDataURL","_invalidate","fixedScale","data","toDataURL","resolve","reject","then","suspendTracking","resumeTracking","childNodes","rootElements","idx","length","srcElement","_resize","_size","invalidate","_enableTracking","_suspendedTracking","currentShape","_currentShape","trigger","originalEvent"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/canvas/surface.js"],"sourcesContent":["import BaseSurface from '../core/surface';\nimport { createPromise, promiseAll, bindEvents, elementSize, unbindEvents } from '../util';\nimport RootNode from './root-node';\nimport ShapesQuadTree from '../search/shapes-quad-tree';\nimport SurfaceCursor from './surface-cursor';\n\nimport ArcNode from './arc-node';\nimport CircleNode from './circle-node';\nimport GroupNode from './group-node';\nimport ImageNode from './image-node';\nimport MultiPathNode from './multi-path-node';\nimport PathNode from './path-node';\nimport RectNode from './rect-node';\nimport TextNode from './text-node';\nimport NODE_MAP from './node-map';\n\nNODE_MAP.Arc = ArcNode;\nNODE_MAP.Circle = CircleNode;\nNODE_MAP.Group = GroupNode;\nNODE_MAP.Image = ImageNode;\nNODE_MAP.MultiPath = MultiPathNode;\nNODE_MAP.Path = PathNode;\nNODE_MAP.Rect = RectNode;\nNODE_MAP.Text = TextNode;\n\n\nclass Surface extends BaseSurface {\n    get type() {\n        return \"canvas\";\n    }\n\n    constructor(element, options) {\n        super(element, options);\n\n        this.element.innerHTML = this._template(this);\n\n        const canvas = this.element.firstElementChild;\n        canvas.style.width = '100%';\n        canvas.style.height = '100%';\n\n        const size = elementSize(element);\n\n        canvas.width = size.width;\n        canvas.height = size.height;\n\n        this._rootElement = canvas;\n\n        this._root = new RootNode(canvas, size);\n\n        this._mouseTrackHandler = this._trackMouse.bind(this);\n\n        bindEvents(this.element, {\n            click: this._mouseTrackHandler,\n            mousemove: this._mouseTrackHandler\n        });\n    }\n\n    destroy() {\n        super.destroy();\n\n        if (this._root) {\n            this._root.destroy();\n            this._root = null;\n        }\n\n        if (this._searchTree) {\n            this._searchTree.clear();\n            delete this._searchTree;\n        }\n\n        if (this._cursor) {\n            this._cursor.destroy();\n            delete this._cursor;\n        }\n\n        unbindEvents(this.element, {\n            click: this._mouseTrackHandler,\n            mousemove: this._mouseTrackHandler\n        });\n    }\n\n    draw(element) {\n        super.draw(element);\n        this._root.load([ element ], undefined, this.options.cors);\n\n        if (this._searchTree) {\n            this._searchTree.add([ element ]);\n        }\n    }\n\n    clear() {\n        super.clear();\n        this._root.clear();\n\n        if (this._searchTree) {\n            this._searchTree.clear();\n        }\n\n        if (this._cursor) {\n            this._cursor.clear();\n        }\n    }\n\n    eventTarget(e) {\n        if (this._searchTree) {\n            const point = this._surfacePoint(e);\n            const shape = this._searchTree.pointShape(point);\n            return shape;\n        }\n    }\n\n    image() {\n        const { _root: root, _rootElement: rootElement } = this;\n        const loadingStates = [];\n\n        root.traverse((childNode) => {\n            if (childNode.loading) {\n                loadingStates.push(childNode.loading);\n            }\n        });\n\n        const promise = createPromise();\n        const resolveDataURL = () => {\n            root._invalidate({ fixedScale: true });\n\n            try {\n                const data = rootElement.toDataURL();\n                promise.resolve(data);\n            } catch (e) {\n                promise.reject(e);\n            }\n        };\n\n        promiseAll(loadingStates).then(resolveDataURL, resolveDataURL);\n\n        return promise;\n    }\n\n    suspendTracking() {\n        super.suspendTracking();\n        if (this._searchTree) {\n            this._searchTree.clear();\n            delete this._searchTree;\n        }\n    }\n\n    resumeTracking() {\n        super.resumeTracking();\n        if (!this._searchTree) {\n            this._searchTree = new ShapesQuadTree();\n\n            const childNodes = this._root.childNodes;\n            const rootElements = [];\n            for (let idx = 0; idx < childNodes.length; idx++) {\n                rootElements.push(childNodes[idx].srcElement);\n            }\n            this._searchTree.add(rootElements);\n        }\n    }\n\n    _resize() {\n        this._rootElement.width = this._size.width;\n        this._rootElement.height = this._size.height;\n\n        this._root.size = this._size;\n        this._root.invalidate();\n    }\n\n    _template() {\n        return \"<canvas></canvas>\";\n    }\n\n    _enableTracking() {\n        this._searchTree = new ShapesQuadTree();\n        this._cursor = new SurfaceCursor(this);\n\n        super._enableTracking();\n    }\n\n    _trackMouse(e) {\n        if (this._suspendedTracking) {\n            return;\n        }\n\n        const shape = this.eventTarget(e);\n\n        if (e.type !== \"click\") {\n            const currentShape = this._currentShape;\n            if (currentShape && currentShape !== shape) {\n                this.trigger(\"mouseleave\", {\n                    element: currentShape,\n                    originalEvent: e,\n                    type: \"mouseleave\"\n                });\n            }\n\n            if (shape && currentShape !== shape) {\n                this.trigger(\"mouseenter\", {\n                    element: shape,\n                    originalEvent: e,\n                    type: \"mouseenter\"\n                });\n            }\n\n            this.trigger(\"mousemove\", {\n                element: shape,\n                originalEvent: e,\n                type: \"mousemove\"\n            });\n\n            this._currentShape = shape;\n        } else if (shape) {\n            this.trigger(\"click\", {\n                element: shape,\n                originalEvent: e,\n                type: \"click\"\n            });\n        }\n    }\n}\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}