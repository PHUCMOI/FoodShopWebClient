{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2023 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Directive, HostBinding, Injectable, Component, Input, EventEmitter, isDevMode, Output, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { dispatchDragAndDrop, getScrollableParent, autoScroll } from '@progress/kendo-draggable-common';\nimport { PreventableEvent, contains, isDocumentAvailable, parseCSSClassNames } from '@progress/kendo-angular-common';\nimport { fromEvent, merge } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nfunction HintComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    index: a1,\n    data: a2\n  };\n};\nconst packageMetadata = {\n  name: '@progress/kendo-angular-utils',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1697530088,\n  version: '14.0.1',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * Represents the Kendo UI DragHandle directive for Angular.\n * It is used to specify a concrete element within a drag target as a handle for dragging, instead the drag target itself.\n */\nclass DragHandleDirective {\n  constructor(element) {\n    this.element = element;\n    this.cursorStyle = 'move';\n  }\n}\nDragHandleDirective.ɵfac = function DragHandleDirective_Factory(t) {\n  return new (t || DragHandleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nDragHandleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DragHandleDirective,\n  selectors: [[\"\", \"kendoDragHandle\", \"\"]],\n  hostVars: 2,\n  hostBindings: function DragHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"cursor\", ctx.cursorStyle);\n    }\n  },\n  exportAs: [\"kendoDragHandle\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDragHandle]',\n      exportAs: 'kendoDragHandle'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    cursorStyle: [{\n      type: HostBinding,\n      args: ['style.cursor']\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass DragStateService {\n  constructor() {\n    this.dragTarget = null;\n    this.dropTarget = null;\n    this.dragTargets = [];\n    this.dropTargets = [];\n    this.pressed = false;\n    this.ignoreMouse = false;\n    this.autoScroll = true;\n    this.isScrolling = false;\n    this.scrollableParent = null;\n    this.autoScrollDirection = {\n      horizontal: true,\n      vertical: true\n    };\n    this.initialClientOffset = {\n      x: 0,\n      y: 0\n    };\n    this.clientOffset = {\n      x: 0,\n      y: 0\n    };\n    this.initialScrollOffset = {\n      x: 0,\n      y: 0\n    };\n    this.scrollOffset = {\n      x: 0,\n      y: 0\n    };\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n    this.pageOffset = {\n      x: 0,\n      y: 0\n    };\n    this.velocity = {\n      x: 0,\n      y: 0\n    };\n    this.dragIndex = null;\n    this.dropIndex = null;\n    this.callbacks = {};\n    this.scrollInterval = null;\n    this.setCallbacks();\n  }\n  handleDragAndDrop(action) {\n    this.updateState();\n    dispatchDragAndDrop(this.state, action, this.callbacks);\n  }\n  setPressed(pressed) {\n    this.pressed = pressed;\n  }\n  setScrolling(isScrolling) {\n    this.isScrolling = isScrolling;\n    if (isScrolling) {\n      const scrollableParent = getScrollableParent(document.elementFromPoint(this.clientOffset.x, this.clientOffset.y));\n      window.clearInterval(this.scrollInterval);\n      this.scrollInterval = window.setInterval(() => {\n        autoScroll(scrollableParent, {\n          x: this.velocity.x,\n          y: this.velocity.y\n        });\n      }, 50);\n    } else {\n      if (this.scrollInterval) {\n        window.clearInterval(this.scrollInterval);\n        this.scrollInterval = null;\n      }\n    }\n  }\n  setVelocity(velocity) {\n    this.velocity = velocity;\n  }\n  setOffset(offset) {\n    this.offset = offset;\n  }\n  setClientOffset(clientOffset) {\n    this.clientOffset = clientOffset;\n  }\n  setPageOffset(pageOffset) {\n    this.pageOffset = pageOffset;\n  }\n  setInitialClientOffset(initialClientOffset) {\n    this.initialClientOffset = initialClientOffset;\n  }\n  setScrollOffset(scrollOffset) {\n    this.scrollOffset = scrollOffset;\n  }\n  setInitialScrollOffset(initialScrollOffset) {\n    this.initialScrollOffset = initialScrollOffset;\n  }\n  updateState() {\n    this.state = {\n      drag: this.dragTarget,\n      drop: this.dropTarget,\n      drags: this.dragTargets,\n      drops: this.dropTargets,\n      pressed: this.pressed,\n      ignoreMouse: this.ignoreMouse,\n      autoScroll: this.autoScroll,\n      isScrolling: this.isScrolling,\n      scrollableParent: this.scrollableParent,\n      autoScrollDirection: this.autoScrollDirection,\n      initialClientOffset: this.initialClientOffset,\n      clientOffset: this.clientOffset,\n      initialScrollOffset: this.initialScrollOffset,\n      scrollOffset: this.scrollOffset,\n      offset: this.offset,\n      pageOffset: this.pageOffset,\n      velocity: this.velocity\n    };\n  }\n  setCallbacks() {\n    this.callbacks = {\n      onVelocityChange: this.setVelocity.bind(this),\n      onOffsetChange: this.setOffset.bind(this),\n      onClientOffsetChange: this.setClientOffset.bind(this),\n      onPageOffsetChange: this.setPageOffset.bind(this),\n      onInitialClientOffsetChange: this.setInitialClientOffset.bind(this),\n      onScrollOffsetChange: this.setScrollOffset.bind(this),\n      onInitialScrollOffsetChange: this.setInitialScrollOffset.bind(this),\n      onIsPressedChange: this.setPressed.bind(this),\n      onIsScrollingChange: this.setScrolling.bind(this)\n    };\n  }\n  ngOnDestroy() {\n    if (this.scrollInterval) {\n      window.clearInterval(this.scrollInterval);\n      this.scrollInterval = null;\n    }\n  }\n}\nDragStateService.ɵfac = function DragStateService_Factory(t) {\n  return new (t || DragStateService)();\n};\nDragStateService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DragStateService,\n  factory: DragStateService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragStateService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction isDocumentNode(container) {\n  return container.nodeType === 9;\n}\n/**\n * @hidden\n */\nconst getAction = (event, draggable) => {\n  return {\n    event: event,\n    payload: draggable\n  };\n};\n/**\n * @hidden\n */\nconst dragTargetTransition = 'transform .3s ease-in-out';\n/**\n * @hidden\n */\nconst isPresent = value => value !== null && value !== undefined;\n/**\n * @hidden\n */\nfunction closestBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n  const matches = Element.prototype.matches ? (el, sel) => el.matches(sel) : (el, sel) => el.msMatchesSelector(sel);\n  let node = element;\n  while (node && !isDocumentNode(node)) {\n    if (matches(node, selector)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n}\n/**\n * @hidden\n */\nconst intersect = (element, candidates) => {\n  let max = 0;\n  let result = null;\n  candidates.forEach(candidate => {\n    if (candidate && element) {\n      const ration = getRatio(element, candidate);\n      if (ration > max) {\n        max = ration;\n        result = candidate;\n      }\n    }\n  });\n  return result;\n};\nconst getRatio = (element, target) => {\n  const elementRect = element.getBoundingClientRect();\n  const targetRect = target.getBoundingClientRect();\n  const top = Math.max(targetRect.top, elementRect.top);\n  const left = Math.max(targetRect.left, elementRect.left);\n  const right = Math.min(targetRect.left + targetRect.width, elementRect.left + elementRect.width);\n  const bottom = Math.min(targetRect.top + targetRect.height, elementRect.top + elementRect.height);\n  const width = right - left;\n  const height = bottom - top;\n  if (left < right && top < bottom) {\n    const targetArea = targetRect.width * targetRect.height;\n    const entryArea = elementRect.width * elementRect.height;\n    const intersectionArea = width * height;\n    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);\n    return Number(intersectionRatio.toFixed(4));\n  }\n  return 0;\n};\n/**\n * @hidden\n */\nconst setElementStyles = (renderer, elem, styles) => {\n  const props = Object.keys(styles);\n  props.forEach(p => {\n    renderer.setStyle(elem, p, styles[p]);\n  });\n};\n/**\n * @hidden\n */\nconst allPointerDownEvents = ['pointerdown', 'mousedown', 'touchstart'];\n/**\n * @hidden\n */\nconst allPointerMoveEvents = ['pointermove', 'mousemove', 'touchmove'];\n/**\n * @hidden\n */\nconst allPointerUpEvents = ['pointerup', 'pointercancel', 'mouseup', 'contextmenu', 'touchend', 'touchcancel'];\n\n/**\n * @hidden\n */\nclass HintComponent {\n  constructor(element) {\n    this.element = element;\n    this.pointerEvents = 'none';\n  }\n}\nHintComponent.ɵfac = function HintComponent_Factory(t) {\n  return new (t || HintComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nHintComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HintComponent,\n  selectors: [[\"kendo-draghint\"]],\n  hostVars: 2,\n  hostBindings: function HintComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.pointerEvents);\n    }\n  },\n  inputs: {\n    template: \"template\",\n    directive: \"directive\",\n    targetIndex: \"targetIndex\",\n    contextData: \"contextData\"\n  },\n  decls: 1,\n  vars: 6,\n  consts: [[4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function HintComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HintComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c0, ctx.directive, ctx.targetIndex, ctx.contextData));\n    }\n  },\n  dependencies: [i1.NgTemplateOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HintComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-draghint',\n      template: `\n        <ng-container *ngTemplateOutlet=\"template; context: { $implicit: directive, index: targetIndex, data: contextData }\">\n        </ng-container>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    template: [{\n      type: Input\n    }],\n    directive: [{\n      type: Input\n    }],\n    targetIndex: [{\n      type: Input\n    }],\n    contextData: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: HostBinding,\n      args: ['style.pointer-events']\n    }]\n  });\n})();\n\n/**\n * Arguments for the press event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetPressEvent {\n  /**\n   * @hidden\n   */\n  constructor(args) {\n    Object.assign(this, args);\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get normalizedEvent() {\n    return this.dragEvent;\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get hostElement() {\n    return this.dragTarget;\n  }\n}\n\n/**\n * Arguments for the dragReady event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragReadyEvent {\n  /**\n   * @hidden\n   */\n  constructor(args) {\n    Object.assign(this, args);\n  }\n}\n\n/**\n * Arguments for the dragStart event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragStartEvent extends PreventableEvent {\n  /**\n   * @hidden\n   */\n  constructor(args) {\n    super();\n    Object.assign(this, args);\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get normalizedEvent() {\n    return this.dragEvent;\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get hostElement() {\n    return this.dragTarget;\n  }\n}\n\n/**\n * Arguments for the dragEnd event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragEndEvent {\n  /**\n   * @hidden\n   */\n  constructor(args) {\n    Object.assign(this, args);\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get normalizedEvent() {\n    return this.dragEvent;\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get hostElement() {\n    return this.dragTarget;\n  }\n}\n\n/**\n * Arguments for the drag event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragEvent extends PreventableEvent {\n  /**\n   * @hidden\n   */\n  constructor(args) {\n    super();\n    Object.assign(this, args);\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get normalizedEvent() {\n    return this.dragEvent;\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get hostElement() {\n    return this.dragTarget;\n  }\n}\n\n/**\n * Arguments for the release event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetReleaseEvent {\n  /**\n   * @hidden\n   */\n  constructor(args) {\n    Object.assign(this, args);\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get normalizedEvent() {\n    return this.dragEvent;\n  }\n  /**\n   * Left for backward compatibility for the DragTarget deprecated events.\n   * @hidden\n   */\n  get hostElement() {\n    return this.dragTarget;\n  }\n}\nlet isDragStartPrevented$1 = false;\nlet isDragPrevented$1 = false;\n/**\n * Represents the Kendo UI DragTarget directive for Angular.\n */\nclass DragTargetDirective {\n  constructor(element, renderer, ngZone, service, viewContainer) {\n    this.element = element;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.service = service;\n    this.viewContainer = viewContainer;\n    /**\n     * Defines whether a hint will be used for dragging. By default, the hint is a copy of the drag target. ([see example]({% slug drag_hint %})).\n     *\n     * @default false\n     */\n    this.hint = false;\n    /**\n     * The number of pixels the pointer moves in any direction before the dragging starts ([see example]({% slug minimum_distance %})). Applicable when `manualDrag` is set to `false`.\n     *\n     * @default 0\n     */\n    this.threshold = 0;\n    /**\n     * Defines the automatic container scrolling behavior when close to the edge ([see example]({% slug auto_scroll %})).\n     *\n     * @default true\n     */\n    this.autoScroll = true;\n    /**\n     * Defines the delay in milliseconds after which the drag will begin ([see example]({% slug drag_delay %})).\n     *\n     * @default 0\n     */\n    this.dragDelay = 0;\n    /**\n     * Specifies whether the default dragging behavior will be performed or the developer will manually handle the drag action.\n     *\n     * @default 'auto'\n     */\n    this.mode = 'auto';\n    /**\n     * Fires when the user presses the DragTarget element.\n     */\n    this.onPress = new EventEmitter();\n    /**\n     * Fires when the dragging of the DragTarget element begins.\n     */\n    this.onDragStart = new EventEmitter();\n    /**\n     * Fires while the user drags the DragTarget element.\n     */\n    this.onDrag = new EventEmitter();\n    /**\n     * Fires when the DragTarget's `dragDelay` has passed and the user is able to drag the element.\n     */\n    this.onDragReady = new EventEmitter();\n    /**\n     * Fires when the user releases the DragTarget element after being pressed.\n     */\n    this.onRelease = new EventEmitter();\n    /**\n     * Fires when the dragging of the DragTarget ends and the element is released.\n     */\n    this.onDragEnd = new EventEmitter();\n    this.dragTarget = null;\n    this.domSubscriptions = [];\n    this.hintComponent = null;\n    this.dragStarted = false;\n    this.pressed = false;\n    this.dragTimeout = null;\n    this.initialPosition = {\n      x: 0,\n      y: 0\n    };\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.scrollableParent = null;\n    this.defaultHint = null;\n    this._dragData = () => null;\n    validatePackage(packageMetadata);\n  }\n  /**\n   * Defines a callback function used for attaching custom data to the dragTarget.\n   * The data will be available in the events of the respective [`DropTarget`]({% slug api_utils_droptargetdirective %}) or [`DropTargetContainer`]({% slug api_utils_droptargetcontainerdirective %}) directives.\n   * The current DragTarget HTML element and its `dragTargetId` will be available as arguments.\n   */\n  set dragData(fn) {\n    if (isDevMode && typeof fn !== 'function') {\n      throw new Error(`dragData must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._dragData = fn;\n  }\n  get dragData() {\n    return this._dragData;\n  }\n  get hintTemplate() {\n    return isPresent(this.hint) && typeof this.hint === 'object' ? this.hint.hintTemplate : null;\n  }\n  get nativeElement() {\n    return this.element.nativeElement;\n  }\n  get hintElem() {\n    return this.hintTemplate && isPresent(this.hintComponent) ? this.hintComponent.instance.element.nativeElement : this.defaultHint;\n  }\n  onPointerDown(event) {\n    if (this.dragHandles.length && !this.isDragHandle(event.target)) {\n      return;\n    }\n    event.preventDefault();\n    const action = getAction(event, this.dragTarget);\n    this.service.handleDragAndDrop(action);\n    this.service.autoScroll = typeof this.autoScroll === 'object' ? this.autoScroll.enabled !== false : this.autoScroll;\n    this.service.scrollableParent = this.getAutoScrollContainer();\n    this.service.autoScrollDirection = typeof this.autoScroll === 'object' ? this.autoScroll.direction : {\n      horizontal: true,\n      vertical: true\n    };\n    this.attachDomHandlers();\n  }\n  onPointerMove(event) {\n    event.preventDefault();\n    const action = getAction(event, this.dragTarget);\n    this.service.handleDragAndDrop(action);\n  }\n  onPointerUp(event) {\n    event.preventDefault();\n    const action = getAction(event, this.dragTarget);\n    this.service.handleDragAndDrop(action);\n    this.attachDomHandlers();\n  }\n  ngOnInit() {\n    this.initializeDragTarget();\n  }\n  ngAfterContentInit() {\n    if (isPresent(this.element) || isPresent(this.dragTarget)) {\n      this.attachDomHandlers();\n      if (!this.dragHandles.length) {\n        this.renderer.setStyle(this.nativeElement, 'cursor', 'move');\n      }\n    }\n    this.service.dragTargets.push(this.dragTarget);\n  }\n  ngOnDestroy() {\n    this.domSubscriptions.forEach(subscription => subscription());\n  }\n  handlePress(event) {\n    if (this.dragDelay > 0) {\n      this.dragTimeout = window.setTimeout(() => {\n        this.pressed = true;\n        this.emitZoneAwareEvent('onDragReady', event);\n      }, this.dragDelay);\n    } else {\n      this.pressed = true;\n    }\n    this.scrollableParent = this.dragTarget.element ? getScrollableParent(this.dragTarget.element) : null;\n    this.emitZoneAwareEvent('onPress', event);\n  }\n  handleDragStart(event) {\n    if (!this.pressed) {\n      if (this.dragTimeout) {\n        window.clearTimeout(this.dragTimeout);\n        this.dragTimeout = null;\n      }\n      return;\n    }\n    isDragStartPrevented$1 = this.emitZoneAwareEvent('onDragStart', event).isDefaultPrevented();\n    if (isDragStartPrevented$1) {\n      return;\n    }\n    if (this.hint) {\n      this.createHint();\n      if (this.mode === 'auto') {\n        this.renderer.setStyle(this.nativeElement, 'opacity', '0.7');\n      }\n      this.initialPosition = {\n        x: event.offsetX,\n        y: event.offsetY\n      };\n    } else {\n      this.initialPosition = {\n        x: event.clientX - this.position.x,\n        y: event.clientY - this.position.y\n      };\n    }\n    this.dragStarted = this.threshold === 0;\n    this.service.dragTarget = this.dragTarget;\n    this.service.dragTargetDirective = this;\n    this.service.dragData = this.dragData({\n      dragTarget: this.dragTarget.element,\n      dragTargetId: this.dragTargetIdResult,\n      dragTargetIndex: null\n    });\n  }\n  handleDrag(event) {\n    if (!this.pressed || isDragStartPrevented$1) {\n      return;\n    }\n    const elem = this.hint ? this.hintElem : this.nativeElement;\n    this.position = this.calculatePosition(elem, event);\n    const thresholdNotReached = Math.abs(this.position.x) < this.threshold && Math.abs(this.position.y) < this.threshold;\n    if (!this.dragStarted && thresholdNotReached) {\n      return;\n    }\n    if (!this.dragStarted && this.threshold > 0) {\n      this.dragStarted = true;\n    }\n    isDragPrevented$1 = this.emitZoneAwareEvent('onDrag', event).isDefaultPrevented();\n    if (isDragPrevented$1) {\n      return;\n    }\n    if (this.mode === 'auto') {\n      this.performDrag();\n    } else {\n      this.dragStarted = true;\n    }\n  }\n  handleRelease(event) {\n    if (this.dragTimeout) {\n      clearTimeout(this.dragTimeout);\n      this.dragTimeout = null;\n      this.pressed = false;\n    }\n    this.emitZoneAwareEvent('onRelease', event);\n  }\n  handleDragEnd(event) {\n    if (this.mode === 'auto') {\n      const isDroppedOverParentTarget = isPresent(this.service.dropTarget) && !contains(this.service.dropTarget?.element, this.service.dragTarget?.element, true);\n      const elem = this.hint ? this.hintElem : this.nativeElement;\n      if (isDroppedOverParentTarget || this.service.dropTargets.length > 0 && isPresent(elem)) {\n        this.renderer.removeStyle(elem, 'transform');\n        setElementStyles(this.renderer, elem, {\n          transition: dragTargetTransition\n        });\n        this.position = {\n          x: 0,\n          y: 0\n        };\n      }\n    }\n    if (this.hint && isPresent(this.hintElem)) {\n      this.destroyHint();\n      if (this.mode === 'auto') {\n        this.renderer.removeStyle(this.nativeElement, 'opacity');\n      }\n    }\n    this.service.dragTarget = null;\n    this.service.dragTargetDirective = null;\n    if (!this.dragStarted || isDragStartPrevented$1 || isDragPrevented$1) {\n      return;\n    }\n    this.emitZoneAwareEvent('onDragEnd', event);\n    this.dragStarted = false;\n  }\n  initializeDragTarget() {\n    this.dragTarget = {\n      element: this.nativeElement,\n      hint: null,\n      onPress: this.handlePress.bind(this),\n      onRelease: this.handleRelease.bind(this),\n      onDragStart: this.handleDragStart.bind(this),\n      onDrag: this.handleDrag.bind(this),\n      onDragEnd: this.handleDragEnd.bind(this)\n    };\n  }\n  attachDomHandlers() {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.domSubscriptions.length > 0) {\n        this.domSubscriptions.forEach(subscription => subscription());\n      }\n      if (!(isDocumentAvailable() && isPresent(this.element))) {\n        return;\n      }\n      if (this.service.pressed) {\n        this.onPointerMove = this.onPointerMove.bind(this);\n        this.onPointerUp = this.onPointerUp.bind(this);\n        this.domSubscriptions = [this.renderer.listen(document, 'pointermove', this.onPointerMove), this.renderer.listen(document, 'mousemove', this.onPointerMove), this.renderer.listen(document, 'touchmove', this.onPointerMove), this.renderer.listen(document, 'pointerup', this.onPointerUp), this.renderer.listen(document, 'pointercancel', this.onPointerUp), this.renderer.listen(document, 'mouseup', this.onPointerUp), this.renderer.listen(document, 'contextmenu', this.onPointerUp), this.renderer.listen(document, 'touchend', this.onPointerUp), this.renderer.listen(document, 'touchcancel', this.onPointerUp)];\n        if (isPresent(this.scrollableParent)) {\n          if (this.scrollableParent === document.getElementsByTagName('html')[0]) {\n            this.scrollableParent = window;\n          }\n          this.domSubscriptions.push(this.renderer.listen(this.scrollableParent, 'scroll', this.onPointerMove));\n        }\n      } else {\n        this.onPointerDown = this.onPointerDown.bind(this);\n        const element = this.nativeElement;\n        this.domSubscriptions = [this.renderer.listen(element, 'pointerdown', this.onPointerDown), this.renderer.listen(element, 'mousedown', this.onPointerDown), this.renderer.listen(element, 'touchstart', this.onPointerDown)];\n      }\n    });\n  }\n  isDragHandle(el) {\n    return this.dragHandles.toArray().some(dh => contains(dh.element.nativeElement, el, true));\n  }\n  getAutoScrollContainer() {\n    return typeof this.autoScroll === 'object' && this.autoScroll.boundaryElementRef && this.autoScroll.boundaryElementRef.nativeElement ? this.autoScroll.boundaryElementRef.nativeElement : null;\n  }\n  createHint() {\n    if (!(isDocumentAvailable() && isPresent(this.element))) {\n      return;\n    }\n    if (isPresent(this.hint) && typeof this.hint === 'object') {\n      if (isPresent(this.hint.hintTemplate)) {\n        this.createCustomHint();\n      } else {\n        this.createDefaultHint();\n      }\n    } else {\n      this.createDefaultHint();\n    }\n    this.dragTarget.hint = this.hintElem;\n    if (typeof this.hint === 'object' && isPresent(this.hint.appendTo)) {\n      this.hint.appendTo.element.nativeElement.appendChild(this.hintElem);\n    } else {\n      document.body.appendChild(this.hintElem);\n    }\n  }\n  createDefaultHint() {\n    this.defaultHint = this.nativeElement.cloneNode(true);\n    if (typeof this.hint === 'object') {\n      if (isPresent(this.hint.hintClass)) {\n        const hintClasses = parseCSSClassNames(this.hint.hintClass);\n        hintClasses.forEach(className => this.renderer.addClass(this.defaultHint, className));\n      }\n    }\n  }\n  createCustomHint() {\n    if (isPresent(this.hint.appendTo)) {\n      this.hintComponent = this.hint.appendTo.createComponent(HintComponent);\n    } else {\n      this.hintComponent = this.viewContainer.createComponent(HintComponent);\n    }\n    this.hintComponent.instance.template = this.hintTemplate;\n    this.hintComponent.instance.directive = this;\n    this.hintComponent.changeDetectorRef.detectChanges();\n  }\n  destroyHint() {\n    if (isPresent(this.hintTemplate)) {\n      this.hintComponent.destroy();\n      this.hintComponent.changeDetectorRef.detectChanges();\n      this.hintComponent = null;\n    } else {\n      if (typeof this.hint === 'object' && isPresent(this.hint.appendTo)) {\n        this.hint.appendTo.element.nativeElement.removeChild(this.defaultHint);\n      } else {\n        document.body.removeChild(this.defaultHint);\n      }\n      this.defaultHint = null;\n    }\n    this.dragTarget.hint = null;\n  }\n  emitZoneAwareEvent(event, normalizedEvent) {\n    const eventProps = {\n      dragTarget: this.nativeElement,\n      dragEvent: normalizedEvent\n    };\n    if (this.hint && isPresent(this.hintElem)) {\n      eventProps.hintElement = this.hintElem;\n    }\n    if (this.dragTargetId && this.dragTargetId !== '') {\n      eventProps.dragTargetId = this.dragTargetIdResult;\n    }\n    let eventArgs;\n    switch (event) {\n      case 'onDragReady':\n        eventArgs = new DragTargetDragReadyEvent(eventProps);\n        break;\n      case 'onPress':\n        eventArgs = new DragTargetPressEvent(eventProps);\n        break;\n      case 'onDragStart':\n        eventArgs = new DragTargetDragStartEvent(eventProps);\n        break;\n      case 'onDrag':\n        eventArgs = new DragTargetDragEvent(eventProps);\n        break;\n      case 'onRelease':\n        eventArgs = new DragTargetReleaseEvent(eventProps);\n        break;\n      case 'onDragEnd':\n        eventArgs = new DragTargetDragEndEvent(eventProps);\n        break;\n      default:\n        break;\n    }\n    this.ngZone.run(() => {\n      this[event].emit(eventArgs);\n    });\n    return eventArgs;\n  }\n  get dragTargetIdResult() {\n    if (this.dragTargetId && this.dragTargetId !== '') {\n      return typeof this.dragTargetId === 'string' ? this.dragTargetId : this.dragTargetId({\n        dragTarget: this.dragTarget.element,\n        dragTargetIndex: null\n      });\n    }\n  }\n  performDrag() {\n    const elem = this.hint ? this.hintElem : this.nativeElement;\n    if (elem) {\n      const styles = this.getStylesPerElement(elem);\n      setElementStyles(this.renderer, elem, styles);\n    }\n  }\n  calculatePosition(element, event) {\n    let position = null;\n    if (element === this.hintElem) {\n      position = {\n        x: event.clientX,\n        y: event.clientY\n      };\n    } else {\n      position = {\n        x: event.clientX - this.initialPosition.x + event.scrollX,\n        y: event.clientY - this.initialPosition.y + event.scrollY\n      };\n    }\n    if (this.restrictByAxis === 'horizontal') {\n      position.y = 0;\n    } else if (this.restrictByAxis === 'vertical') {\n      position.x = 0;\n    }\n    return position;\n  }\n  getStylesPerElement(element) {\n    if (element === this.hintElem) {\n      const hintCoordinates = {\n        x: this.position.x - this.initialPosition.x,\n        y: this.position.y - this.initialPosition.y\n      };\n      return {\n        top: `${hintCoordinates.y}px`,\n        left: `${hintCoordinates.x}px`,\n        transition: 'none',\n        position: 'absolute',\n        zIndex: 1999\n      };\n    } else {\n      const transform = `translate(${this.position.x}px, ${this.position.y}px)`;\n      return {\n        transform: transform,\n        transition: 'none'\n      };\n    }\n  }\n}\nDragTargetDirective.ɵfac = function DragTargetDirective_Factory(t) {\n  return new (t || DragTargetDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DragStateService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nDragTargetDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DragTargetDirective,\n  selectors: [[\"\", \"kendoDragTarget\", \"\"]],\n  contentQueries: function DragTargetDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DragHandleDirective, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dragHandles = _t);\n    }\n  },\n  inputs: {\n    hint: \"hint\",\n    threshold: \"threshold\",\n    autoScroll: \"autoScroll\",\n    dragTargetId: \"dragTargetId\",\n    dragDelay: \"dragDelay\",\n    restrictByAxis: \"restrictByAxis\",\n    mode: \"mode\",\n    dragData: \"dragData\"\n  },\n  outputs: {\n    onPress: \"onPress\",\n    onDragStart: \"onDragStart\",\n    onDrag: \"onDrag\",\n    onDragReady: \"onDragReady\",\n    onRelease: \"onRelease\",\n    onDragEnd: \"onDragEnd\"\n  },\n  exportAs: [\"kendoDragTarget\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragTargetDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDragTarget]',\n      exportAs: 'kendoDragTarget'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: DragStateService\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    hint: [{\n      type: Input\n    }],\n    threshold: [{\n      type: Input\n    }],\n    autoScroll: [{\n      type: Input\n    }],\n    dragTargetId: [{\n      type: Input\n    }],\n    dragDelay: [{\n      type: Input\n    }],\n    restrictByAxis: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    dragData: [{\n      type: Input\n    }],\n    onPress: [{\n      type: Output\n    }],\n    onDragStart: [{\n      type: Output\n    }],\n    onDrag: [{\n      type: Output\n    }],\n    onDragReady: [{\n      type: Output\n    }],\n    onRelease: [{\n      type: Output\n    }],\n    onDragEnd: [{\n      type: Output\n    }],\n    dragHandles: [{\n      type: ContentChildren,\n      args: [DragHandleDirective]\n    }]\n  });\n})();\n\n/**\n * Arguments for the drag events of the DropTarget and DropTargetContainer directives.\n */\nclass DropTargetEvent {\n  /**\n   * @hidden\n   */\n  constructor(args) {\n    Object.assign(this, args);\n  }\n  /**\n   * Left for backward compatibility for the DropTarget deprecated events.\n   * @hidden\n   */\n  get normalizedEvent() {\n    return this.dragEvent;\n  }\n  /**\n   * Left for backward compatibility for the DropTarget deprecated events.\n   * @hidden\n   */\n  get hostElement() {\n    return this.dropTarget;\n  }\n}\n\n/**\n * Represents the Kendo UI DropTarget directive for Angular.\n */\nclass DropTargetDirective {\n  constructor(service, element, ngZone) {\n    this.service = service;\n    this.element = element;\n    this.ngZone = ngZone;\n    /**\n     * Fires when a DragTarget element enters the DropTarget.\n     */\n    this.onDragEnter = new EventEmitter();\n    /**\n     * Fires when a DragTarget element is being dragged over the DropTarget.\n     */\n    this.onDragOver = new EventEmitter();\n    /**\n     * Fires when a DragTarget element leaves the DropTarget.\n     */\n    this.onDragLeave = new EventEmitter();\n    /**\n     * Fires when a DragTarget element is dropped over the DropTarget.\n     */\n    this.onDrop = new EventEmitter();\n    validatePackage(packageMetadata);\n  }\n  ngOnInit() {\n    this.initializeDropTarget();\n    this.service.dropTargets.push(this.dropTarget);\n  }\n  /**\n   * @hidden\n   */\n  handleDragEnter(event) {\n    if (!this.service.dragTarget) {\n      return;\n    }\n    this.service.dropTarget = this.dropTarget;\n    this.emitZoneAwareEvent('onDragEnter', event);\n  }\n  /**\n   * @hidden\n   */\n  handleDragLeave(event) {\n    this.service.dropTarget = null;\n    if (!this.service.dragTarget) {\n      return;\n    }\n    this.emitZoneAwareEvent('onDragLeave', event);\n  }\n  /**\n   * @hidden\n   */\n  handleDragOver(event) {\n    if (!this.service.dragTarget) {\n      return;\n    }\n    this.emitZoneAwareEvent('onDragOver', event);\n  }\n  /**\n   * @hidden\n   */\n  handleDrop(event) {\n    this.emitZoneAwareEvent('onDrop', event);\n    this.service.dropTarget = null;\n  }\n  initializeDropTarget() {\n    this.dropTarget = {\n      element: this.element.nativeElement,\n      onDragEnter: this.handleDragEnter.bind(this),\n      onDragLeave: this.handleDragLeave.bind(this),\n      onDragOver: this.handleDragOver.bind(this),\n      onDrop: this.handleDrop.bind(this)\n    };\n  }\n  emitZoneAwareEvent(event, normalizedEvent) {\n    const eventProps = {\n      dropTarget: this.element.nativeElement,\n      dragTarget: this.service.dragTarget?.element,\n      dragEvent: normalizedEvent,\n      dragData: this.service.dragData\n    };\n    if (isPresent(this.service.dragTarget?.hint)) {\n      eventProps.hintElement = this.service.dragTarget.element;\n    }\n    const eventArgs = new DropTargetEvent(eventProps);\n    this.ngZone.run(() => {\n      this[event].emit(eventArgs);\n    });\n  }\n}\nDropTargetDirective.ɵfac = function DropTargetDirective_Factory(t) {\n  return new (t || DropTargetDirective)(i0.ɵɵdirectiveInject(DragStateService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nDropTargetDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropTargetDirective,\n  selectors: [[\"\", \"kendoDropTarget\", \"\"]],\n  outputs: {\n    onDragEnter: \"onDragEnter\",\n    onDragOver: \"onDragOver\",\n    onDragLeave: \"onDragLeave\",\n    onDrop: \"onDrop\"\n  },\n  exportAs: [\"kendoDropTarget\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropTargetDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropTarget]',\n      exportAs: 'kendoDropTarget'\n    }]\n  }], function () {\n    return [{\n      type: DragStateService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    onDragEnter: [{\n      type: Output\n    }],\n    onDragOver: [{\n      type: Output\n    }],\n    onDragLeave: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: Output\n    }]\n  });\n})();\nlet isDragStartPrevented = false;\nlet isDragPrevented = false;\n/**\n * Represents the [Kendo UI DragTargetContainer directive for Angular]({% slug api_utils_dragtargetcontainerdirective %}).\n * Used to configure multiple elements as draggable.\n *\n * @example\n * ```ts-no-run\n * <ul kendoDragTargetContainer dragTargetFilter=\".my-draggable\">\n *    <li class=\"my-draggable\">foo</li>\n * </ul>\n * ```\n */\nclass DragTargetContainerDirective {\n  constructor(wrapper, ngZone, renderer, service, viewContainer, cdr) {\n    this.wrapper = wrapper;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.service = service;\n    this.viewContainer = viewContainer;\n    this.cdr = cdr;\n    /**\n     * Defines whether a hint will be used for dragging. By default, the hint is a copy of the current drag target. ([see example]({% slug drag_hint %})).\n     *\n     * @default false\n     */\n    this.hint = false;\n    /**\n     * Defines the delay in milliseconds after which the drag will begin ([see example](slug drag_target_container#toc-events)).\n     *\n     * @default 0\n     */\n    this.dragDelay = 0;\n    /**\n     * The number of pixels the pointer moves in any direction before the dragging starts ([see example]({% slug minimum_distance %})).\n     *\n     * @default 0\n     */\n    this.threshold = 0;\n    /**\n     * Specifies whether the default dragging behavior will be performed or the developer will manually handle the drag action.\n     *\n     * @default 'auto'\n     */\n    this.mode = 'auto';\n    /**\n     * Fires when a DragTarget's `dragDelay` has passed and the user is able to drag the element.\n     */\n    this.onDragReady = new EventEmitter();\n    /**\n     * Fires when the user presses a DragTarget element.\n     */\n    this.onPress = new EventEmitter();\n    /**\n     * Fires when the dragging of a DragTarget element begins.\n    */\n    this.onDragStart = new EventEmitter();\n    /**\n     * Fires while the user drags a DragTarget element.\n     */\n    this.onDrag = new EventEmitter();\n    /**\n     * Fires when the user releases a DragTarget element after being pressed.\n     */\n    this.onRelease = new EventEmitter();\n    /**\n     * Fires when the dragging of a DragTarget ends and the element is released.\n     */\n    this.onDragEnd = new EventEmitter();\n    this.currentDragTarget = null;\n    this.dragTimeout = null;\n    this.pressed = false;\n    this.dragStarted = false;\n    this.hintComponent = null;\n    this.defaultHint = null;\n    this.currentDragTargetElement = null;\n    this.scrollableParent = null;\n    this.previousDragTargets = [];\n    this.initialPosition = {\n      x: 0,\n      y: 0\n    };\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.positionsMap = new Map();\n    this._dragTargetFilter = null;\n    this._dragDisabled = false;\n    this._dragData = () => null;\n    this._dragTargetId = () => null;\n    validatePackage(packageMetadata);\n  }\n  /**\n   * Specifies a selector for elements within a container which will be configured as draggable\n   * ([see example]({% slug drag_target_container %})). The possible values include any\n   * DOM `selector`.\n   */\n  set dragTargetFilter(value) {\n    this._dragTargetFilter = value;\n    if (!this.dragDisabled) {\n      this.initializeDragTargets();\n    }\n  }\n  get dragTargetFilter() {\n    return this._dragTargetFilter;\n  }\n  /**\n   * Defines a unique identifier for each drag target.\n   * It exposes the current DragTarget HTML element and its index in the collection of drag targets as arguments.\n   */\n  set dragTargetId(fn) {\n    if (isDevMode && typeof fn !== 'function') {\n      throw new Error(`dragTargetId must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._dragTargetId = fn;\n  }\n  get dragTargetId() {\n    return this._dragTargetId;\n  }\n  /**\n   * Defines a callback function which returns custom data passed to the DropTarget events.\n   * It exposes the current DragTarget HTML element, its `dragTargetId` and its index in the collection of drag targets as arguments.\n   */\n  set dragData(fn) {\n    if (isDevMode && typeof fn !== 'function') {\n      throw new Error(`dragData must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._dragData = fn;\n  }\n  get dragData() {\n    return this._dragData;\n  }\n  /**\n   * If set to true, the dragging of DragTargets within the container will be disabled.\n   *\n   * @default false\n   */\n  set dragDisabled(value) {\n    this._dragDisabled = value;\n    if (value) {\n      this.clearPreviousTargets();\n      this.unsubscribe();\n      if (isPresent(this.hintElem)) {\n        this.destroyHint();\n      }\n    } else {\n      if (isPresent(this.wrapper) || isPresent(this.currentDragTarget)) {\n        this.subscribe();\n      }\n      this.initializeDragTargets();\n    }\n  }\n  get dragDisabled() {\n    return this._dragDisabled;\n  }\n  /**\n   * Used for notifying the DragTargetContainer that its content has changed.\n   */\n  notify() {\n    this.cdr.detectChanges();\n    this.initializeDragTargets();\n  }\n  get allDragTargets() {\n    return this.queryHost(this.dragTargetFilter);\n  }\n  get dragHandles() {\n    return this.isHandleSelectorValid ? this.queryHost(this.dragHandle) : null;\n  }\n  get hintTemplate() {\n    return isPresent(this.hint) && typeof this.hint === 'object' ? this.hint.hintTemplate : null;\n  }\n  ngAfterViewInit() {\n    const isTargetPresent = isPresent(this.wrapper) || isPresent(this.currentDragTarget);\n    if (!this.dragDisabled && isTargetPresent) {\n      this.subscribe();\n    }\n    !this.dragDisabled && this.initializeDragTargets();\n  }\n  onPointerDown(event) {\n    if (isPresent(this.dragHandles) && !this.isDragHandle(event.target)) {\n      return;\n    }\n    const action = getAction(event, this.currentDragTarget);\n    this.service.handleDragAndDrop(action);\n    this.subscribe();\n  }\n  onPointerMove(event) {\n    event.preventDefault();\n    const action = getAction(event, this.currentDragTarget);\n    this.service.handleDragAndDrop(action);\n  }\n  onPointerUp(event) {\n    event.preventDefault();\n    const action = getAction(event, this.currentDragTarget);\n    this.service.handleDragAndDrop(action);\n    this.ngZone.runOutsideAngular(() => {\n      this.subscribe();\n    });\n  }\n  handlePress(event) {\n    if (this.dragDelay > 0) {\n      this.dragTimeout = window.setTimeout(() => {\n        this.pressed = true;\n        this.emitZoneAwareEvent('onDragReady', event);\n      }, this.dragDelay);\n    } else {\n      this.pressed = true;\n    }\n    const eventTarget = event.originalEvent.target;\n    this.currentDragTargetElement = closestBySelector(eventTarget, this.dragTargetFilter);\n    this.currentDragTarget.element = this.currentDragTargetElement;\n    this.service.dragIndex = this.getDragIndex();\n    this.scrollableParent = this.hintTemplate ? document.body : this.currentDragTargetElement ? getScrollableParent(this.currentDragTargetElement) : null;\n    this.emitZoneAwareEvent('onPress', event);\n  }\n  handleDragStart(event) {\n    if (!this.pressed) {\n      if (this.dragTimeout) {\n        window.clearTimeout(this.dragTimeout);\n        this.dragTimeout = null;\n      }\n      return;\n    }\n    isDragStartPrevented = this.emitZoneAwareEvent('onDragStart', event).isDefaultPrevented();\n    if (isDragStartPrevented) {\n      return;\n    }\n    this.position = this.positionsMap.has(this.currentDragTargetElement) ? this.positionsMap.get(this.currentDragTargetElement) : {\n      x: 0,\n      y: 0\n    };\n    if (this.hint) {\n      this.createHint();\n      if (this.mode === 'auto') {\n        this.renderer.setStyle(this.currentDragTargetElement, 'opacity', '0.7');\n      }\n    } else {\n      this.initialPosition = {\n        x: event.clientX - this.position.x,\n        y: event.clientY - this.position.y\n      };\n    }\n    this.dragStarted = this.threshold === 0;\n    this.service.dragTarget = this.currentDragTarget;\n    const targetIdArgs = {\n      dragTarget: this.currentDragTargetElement,\n      dragTargetIndex: this.service.dragIndex\n    };\n    this.service.dragTargetId = this.dragTargetId(targetIdArgs);\n    const targetDataArgs = Object.assign({\n      dragTargetId: this.service.dragTargetId\n    }, targetIdArgs);\n    this.service.dragData = this.dragData(targetDataArgs);\n  }\n  handleDrag(event) {\n    if (!this.pressed || isDragStartPrevented) {\n      return;\n    }\n    const elem = this.hint ? this.hintElem : this.currentDragTargetElement;\n    this.position = this.calculatePosition(elem, event);\n    const thresholdNotReached = Math.abs(this.position.x) < this.threshold && Math.abs(this.position.y) < this.threshold;\n    if (!this.dragStarted && thresholdNotReached) {\n      return;\n    }\n    if (!this.dragStarted && this.threshold > 0) {\n      this.dragStarted = true;\n    }\n    isDragPrevented = this.emitZoneAwareEvent('onDrag', event).isDefaultPrevented();\n    if (isDragPrevented) {\n      return;\n    }\n    if (this.mode === 'auto') {\n      this.performDrag();\n    } else {\n      this.dragStarted = true;\n    }\n  }\n  handleRelease(event) {\n    if (this.dragStarted) {\n      this.positionsMap.set(this.currentDragTargetElement, this.position);\n    }\n    if (this.dragTimeout) {\n      clearTimeout(this.dragTimeout);\n      this.dragTimeout = null;\n      this.pressed = false;\n    }\n    this.emitZoneAwareEvent('onRelease', event);\n  }\n  handleDragEnd(event) {\n    if (!this.dragStarted) {\n      return;\n    }\n    if (this.mode === 'auto') {\n      const isDroppedOverParentTarget = isPresent(this.service.dropTarget) && !contains(this.service.dropTarget?.element, this.service.dragTarget?.element, true);\n      const elem = this.hint ? this.hintElem : this.currentDragTargetElement;\n      if (isDroppedOverParentTarget || this.service.dropTargets.length > 0 && isPresent(elem)) {\n        this.renderer.removeStyle(elem, 'transform');\n        setElementStyles(this.renderer, elem, {\n          transition: dragTargetTransition\n        });\n        this.positionsMap.delete(this.currentDragTargetElement);\n      }\n    }\n    if (this.hint && isPresent(this.hintElem)) {\n      this.destroyHint();\n      if (this.mode === 'auto') {\n        this.renderer.removeStyle(this.currentDragTargetElement, 'opacity');\n      }\n    }\n    this.service.dragTarget = null;\n    this.service.dragIndex = null;\n    this.currentDragTarget.element = null;\n    this.emitZoneAwareEvent('onDragEnd', event);\n    if (isDragStartPrevented || isDragPrevented) {\n      return;\n    }\n    this.dragStarted = false;\n  }\n  get nativeElement() {\n    return this.wrapper.nativeElement;\n  }\n  get hintElem() {\n    return this.hintTemplate && isPresent(this.hintComponent) ? this.hintComponent.instance.element.nativeElement : this.defaultHint;\n  }\n  unsubscribe() {\n    if (this.pointerDownSubscription) {\n      this.pointerDownSubscription.unsubscribe();\n    }\n    if (this.pointerMoveSubscription) {\n      this.pointerMoveSubscription.unsubscribe();\n    }\n    if (this.pointerUpSubscription) {\n      this.pointerUpSubscription.unsubscribe();\n    }\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n    }\n  }\n  subscribe() {\n    this.ngZone.runOutsideAngular(() => {\n      this.unsubscribe();\n      if (!(isDocumentAvailable() && isPresent(this.wrapper))) {\n        return;\n      }\n      const element = this.nativeElement;\n      if (this.service.pressed) {\n        const pointerMoveStreams = allPointerMoveEvents.map(ev => fromEvent(document, ev));\n        const pointerUpStreams = allPointerUpEvents.map(ev => fromEvent(document, ev));\n        this.pointerMoveSubscription = merge(...pointerMoveStreams).pipe(filter(() => this.dragTargetFilter !== '')).subscribe(e => this.onPointerMove(e));\n        this.pointerUpSubscription = merge(...pointerUpStreams).subscribe(e => this.onPointerUp(e));\n        if (isPresent(this.scrollableParent)) {\n          this.scrollSubscription = fromEvent(this.scrollableParent, 'scroll').subscribe(e => this.onPointerMove(e));\n        }\n      } else {\n        const pointerDownStreams = allPointerDownEvents.map(ev => fromEvent(element, ev));\n        this.pointerDownSubscription = merge(...pointerDownStreams).pipe(filter(() => this.dragTargetFilter !== '')).subscribe(e => {\n          const filterElement = closestBySelector(e.target, this.isHandleSelectorValid ? this.dragHandle : this.dragTargetFilter);\n          if (filterElement) {\n            this.onPointerDown(e);\n          }\n        });\n      }\n    });\n  }\n  emitZoneAwareEvent(event, normalizedEvent) {\n    const targetIdArgs = {\n      dragTarget: this.currentDragTargetElement,\n      dragTargetIndex: this.service.dragIndex\n    };\n    const eventProps = {\n      dragTarget: this.currentDragTargetElement,\n      dragEvent: normalizedEvent,\n      dragTargetIndex: this.service.dragIndex,\n      dragTargetId: this.dragTargetId(targetIdArgs)\n    };\n    if (this.hint && isPresent(this.hintElem)) {\n      eventProps.hintElement = this.hintElem;\n    }\n    let eventArgs;\n    switch (event) {\n      case 'onDragReady':\n        eventArgs = new DragTargetDragReadyEvent(eventProps);\n        break;\n      case 'onPress':\n        eventArgs = new DragTargetPressEvent(eventProps);\n        break;\n      case 'onDragStart':\n        eventArgs = new DragTargetDragStartEvent(eventProps);\n        break;\n      case 'onDrag':\n        eventArgs = new DragTargetDragEvent(eventProps);\n        break;\n      case 'onRelease':\n        eventArgs = new DragTargetReleaseEvent(eventProps);\n        break;\n      case 'onDragEnd':\n        eventArgs = new DragTargetDragEndEvent(eventProps);\n        break;\n      default:\n        break;\n    }\n    this.ngZone.run(() => {\n      this[event].emit(eventArgs);\n    });\n    return eventArgs;\n  }\n  createHint() {\n    if (!(isDocumentAvailable() && isPresent(this.wrapper))) {\n      return;\n    }\n    if (isPresent(this.hint) && typeof this.hint === 'object') {\n      if (isPresent(this.hint.hintTemplate)) {\n        this.createCustomHint();\n      } else {\n        this.createDefaultHint();\n      }\n    } else {\n      this.createDefaultHint();\n    }\n    this.currentDragTarget.hint = this.hintElem;\n    if (typeof this.hint === 'object' && isPresent(this.hint.appendTo)) {\n      this.hint.appendTo.element.nativeElement.appendChild(this.hintElem);\n    } else {\n      document.body.appendChild(this.hintElem);\n    }\n  }\n  createDefaultHint() {\n    this.defaultHint = this.currentDragTargetElement.cloneNode(true);\n    if (typeof this.hint === 'object') {\n      if (isPresent(this.hint.hintClass)) {\n        const hintClasses = parseCSSClassNames(this.hint.hintClass);\n        hintClasses.forEach(className => this.renderer.addClass(this.defaultHint, className));\n      }\n    }\n  }\n  createCustomHint() {\n    if (isPresent(this.hint.appendTo)) {\n      this.hintComponent = this.hint.appendTo.createComponent(HintComponent);\n    } else {\n      this.hintComponent = this.viewContainer.createComponent(HintComponent);\n    }\n    this.hintComponent.instance.template = this.hintTemplate;\n    this.hintComponent.instance.directive = this;\n    this.hintComponent.instance.targetIndex = this.service.dragIndex;\n    const targetDataArgs = {\n      dragTarget: this.currentDragTargetElement,\n      dragTargetId: this.service.dragTargetId,\n      dragTargetIndex: this.service.dragIndex\n    };\n    this.hintComponent.instance.contextData = this.dragData(targetDataArgs);\n    this.hintComponent.changeDetectorRef.detectChanges();\n  }\n  destroyHint() {\n    if (isPresent(this.hintTemplate)) {\n      this.hintComponent.destroy();\n      this.hintComponent.changeDetectorRef.detectChanges();\n      this.hintComponent = null;\n    } else {\n      document.body.removeChild(this.defaultHint);\n      this.defaultHint = null;\n    }\n    this.currentDragTarget.hint = null;\n  }\n  getDragIndex() {\n    return this.allDragTargets.indexOf(this.currentDragTargetElement);\n  }\n  initializeDragTargets() {\n    if (!isPresent(this.allDragTargets)) {\n      if (this.previousDragTargets.length > 0) {\n        this.clearPreviousTargets();\n      }\n      return;\n    }\n    this.allDragTargets.forEach(dragTargetEl => {\n      const isDragTargetInitialized = this.service.dragTargets.find(dt => dt.element === dragTargetEl);\n      if (!isDragTargetInitialized) {\n        this.service.dragTargets.push({\n          element: dragTargetEl,\n          hint: null,\n          onPress: this.handlePress.bind(this),\n          onRelease: this.handleRelease.bind(this),\n          onDragStart: this.handleDragStart.bind(this),\n          onDrag: this.handleDrag.bind(this),\n          onDragEnd: this.handleDragEnd.bind(this)\n        });\n      }\n    });\n    if (this.previousDragTargets.length > 0) {\n      const dragTargetsToRemove = this.previousDragTargets.filter(dt => !this.allDragTargets.includes(dt));\n      dragTargetsToRemove.forEach(dragTarget => {\n        const idx = this.service.dragTargets.findIndex(serviceDragTarget => serviceDragTarget.element === dragTarget);\n        if (idx > -1) {\n          this.service.dragTargets.splice(idx, 1);\n        }\n      });\n    }\n    this.previousDragTargets = this.allDragTargets;\n    this.currentDragTarget = {\n      element: null,\n      hint: null,\n      onPress: this.handlePress.bind(this),\n      onRelease: this.handleRelease.bind(this),\n      onDragStart: this.handleDragStart.bind(this),\n      onDrag: this.handleDrag.bind(this),\n      onDragEnd: this.handleDragEnd.bind(this)\n    };\n    this.setCursorStyle();\n  }\n  isDragHandle(el) {\n    return this.dragHandles.some(dh => contains(dh, el, true));\n  }\n  get isHandleSelectorValid() {\n    return isPresent(this.dragHandle) && this.dragHandle !== '';\n  }\n  setCursorStyle() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n    if (isPresent(this.dragHandle) && this.dragHandle !== '') {\n      if (isPresent(this.dragHandles) && this.dragHandles.length > 0) {\n        this.dragHandles.forEach(handle => {\n          this.renderer.setStyle(handle, 'cursor', 'move');\n        });\n      }\n    } else {\n      this.allDragTargets.forEach(target => {\n        this.renderer.setStyle(target, 'cursor', 'move');\n      });\n    }\n  }\n  queryHost(selector) {\n    if (isPresent(selector) && selector !== \"\") {\n      return Array.from(this.nativeElement.querySelectorAll(selector));\n    }\n  }\n  clearPreviousTargets() {\n    this.previousDragTargets.forEach(dragTarget => {\n      const idx = this.service.dragTargets.findIndex(serviceDragTarget => serviceDragTarget.element === dragTarget);\n      if (idx > -1) {\n        this.service.dragTargets.splice(idx, 1);\n      }\n    });\n    this.previousDragTargets = [];\n  }\n  performDrag() {\n    const elem = this.hint ? this.hintElem : this.currentDragTargetElement;\n    if (elem) {\n      const styles = this.getStylesPerElement(elem);\n      setElementStyles(this.renderer, elem, styles);\n    }\n  }\n  calculatePosition(element, event) {\n    let position = null;\n    if (element === this.hintElem) {\n      position = {\n        x: event.clientX,\n        y: event.clientY\n      };\n    } else {\n      position = {\n        x: event.clientX - this.initialPosition.x + event.scrollX,\n        y: event.clientY - this.initialPosition.y + event.scrollY\n      };\n    }\n    return position;\n  }\n  getStylesPerElement(element) {\n    if (element === this.hintElem) {\n      const hintCoordinates = {\n        x: this.position.x - this.initialPosition.x,\n        y: this.position.y - this.initialPosition.y\n      };\n      return {\n        top: `${hintCoordinates.y}px`,\n        left: `${hintCoordinates.x}px`,\n        transition: 'none',\n        position: 'absolute',\n        zIndex: 1999\n      };\n    } else {\n      const transform = `translate(${this.position.x}px, ${this.position.y}px)`;\n      return {\n        transform: transform,\n        transition: 'none'\n      };\n    }\n  }\n}\nDragTargetContainerDirective.ɵfac = function DragTargetContainerDirective_Factory(t) {\n  return new (t || DragTargetContainerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragStateService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDragTargetContainerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DragTargetContainerDirective,\n  selectors: [[\"\", \"kendoDragTargetContainer\", \"\"]],\n  inputs: {\n    hint: \"hint\",\n    dragTargetFilter: \"dragTargetFilter\",\n    dragHandle: \"dragHandle\",\n    dragDelay: \"dragDelay\",\n    threshold: \"threshold\",\n    dragTargetId: \"dragTargetId\",\n    dragData: \"dragData\",\n    dragDisabled: \"dragDisabled\",\n    mode: \"mode\"\n  },\n  outputs: {\n    onDragReady: \"onDragReady\",\n    onPress: \"onPress\",\n    onDragStart: \"onDragStart\",\n    onDrag: \"onDrag\",\n    onRelease: \"onRelease\",\n    onDragEnd: \"onDragEnd\"\n  },\n  exportAs: [\"kendoDragTargetContainer\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragTargetContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDragTargetContainer]',\n      exportAs: 'kendoDragTargetContainer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: DragStateService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    hint: [{\n      type: Input\n    }],\n    dragTargetFilter: [{\n      type: Input\n    }],\n    dragHandle: [{\n      type: Input\n    }],\n    dragDelay: [{\n      type: Input\n    }],\n    threshold: [{\n      type: Input\n    }],\n    dragTargetId: [{\n      type: Input\n    }],\n    dragData: [{\n      type: Input\n    }],\n    dragDisabled: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    onDragReady: [{\n      type: Output\n    }],\n    onPress: [{\n      type: Output\n    }],\n    onDragStart: [{\n      type: Output\n    }],\n    onDrag: [{\n      type: Output\n    }],\n    onRelease: [{\n      type: Output\n    }],\n    onDragEnd: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Represents the [Kendo UI DropTargetContainer directive for Angular]({% slug api_utils_droptargetcontainerdirective %}).\n * Used to configure multiple elements as drop targets.\n *\n * @example\n * ```ts-no-run\n * <div kendoDropTargetContainer dropTargetFilter=\".my-droptarget\">\n *    <div class=\"my-droptarget\">foo</div>\n * </div>\n * ```\n */\nclass DropTargetContainerDirective {\n  constructor(service, element, ngZone, cdr) {\n    this.service = service;\n    this.element = element;\n    this.ngZone = ngZone;\n    this.cdr = cdr;\n    /**\n     * Fires when a DragTarget element enters the DropTarget.\n     */\n    this.onDragEnter = new EventEmitter();\n    /**\n     * Fires when a DragTarget element is being dragged over the DropTarget.\n     */\n    this.onDragOver = new EventEmitter();\n    /**\n     * Fires when a DragTarget element leaves the DropTarget.\n     */\n    this.onDragLeave = new EventEmitter();\n    /**\n     * Fires when a DragTarget element is dropped over the DropTarget.\n     */\n    this.onDrop = new EventEmitter();\n    this.currentDropTarget = null;\n    this.currentDropTargetElement = null;\n    this.previousDropTargets = [];\n    this._dropTargetFilter = null;\n    this._dropDisabled = false;\n    validatePackage(packageMetadata);\n  }\n  /**\n   * Specifies a selector for elements within a container which will be configured as drop targets\n   * ([see example]({% slug drop_target_container %})). The possible values include any\n   * DOM `selector`.\n   */\n  set dropTargetFilter(value) {\n    this._dropTargetFilter = value;\n    if (!this.dropDisabled) {\n      this.initializeDropTargets();\n    }\n  }\n  get dropTargetFilter() {\n    return this._dropTargetFilter;\n  }\n  /**\n   * Specifies whether the Drop Targets within the container will emit the corresponding events upon interaction with a Drag Target.\n   */\n  set dropDisabled(value) {\n    this._dropDisabled = value;\n    if (value) {\n      this.clearPreviousTargets();\n    } else {\n      this.initializeDropTargets();\n    }\n  }\n  get dropDisabled() {\n    return this._dropDisabled;\n  }\n  /**\n   * Used for notifying the DropTargetContainer that its content has changed.\n   */\n  notify() {\n    this.cdr.detectChanges();\n    this.initializeDropTargets();\n  }\n  get nativeElement() {\n    return this.element.nativeElement;\n  }\n  ngAfterViewInit() {\n    !this.dropDisabled && this.initializeDropTargets();\n  }\n  get allDropTargets() {\n    if (isPresent(this.dropTargetFilter) && this.dropTargetFilter !== '') {\n      return Array.from(this.nativeElement.querySelectorAll(this.dropTargetFilter));\n    }\n  }\n  /**\n   * @hidden\n   */\n  handleDragEnter(event) {\n    if (!this.service.dragTarget) {\n      return;\n    }\n    const eventTarget = event.originalEvent.target;\n    this.currentDropTargetElement = intersect(eventTarget, this.allDropTargets);\n    this.currentDropTarget = this.service.dropTargets.find(dt => dt.element === this.currentDropTargetElement);\n    this.service.dropTarget = this.currentDropTarget;\n    this.service.dropIndex = this.getDropIndex();\n    this.emitZoneAwareEvent('onDragEnter', event);\n  }\n  /**\n   * @hidden\n   */\n  handleDragLeave(event) {\n    const containsEventTarget = isPresent(this.service.dropTarget) && contains(this.service.dropTarget?.element, event.originalEvent.target, false);\n    if (containsEventTarget) {\n      return;\n    }\n    this.service.dropTarget = null;\n    if (!this.service.dragTarget) {\n      return;\n    }\n    this.emitZoneAwareEvent('onDragLeave', event);\n  }\n  /**\n   * @hidden\n   */\n  handleDragOver(event) {\n    if (!this.service.dragTarget) {\n      return;\n    }\n    this.emitZoneAwareEvent('onDragOver', event);\n  }\n  /**\n   * @hidden\n   */\n  handleDrop(event) {\n    if (!this.service.dragTarget) {\n      return;\n    }\n    this.emitZoneAwareEvent('onDrop', event);\n    this.currentDropTarget = null;\n    this.currentDropTargetElement = null;\n    this.service.dropIndex = null;\n  }\n  initializeDropTargets() {\n    if (!isPresent(this.allDropTargets)) {\n      if (this.previousDropTargets.length > 0) {\n        this.clearPreviousTargets();\n      }\n      return;\n    }\n    this.allDropTargets.forEach(dropTargetEl => {\n      const isDropTargetInitialized = this.service.dropTargets.find(dt => dt.element === dropTargetEl);\n      if (!isDropTargetInitialized) {\n        this.service.dropTargets.push({\n          element: dropTargetEl,\n          onDragEnter: this.handleDragEnter.bind(this),\n          onDragLeave: this.handleDragLeave.bind(this),\n          onDragOver: this.handleDragOver.bind(this),\n          onDrop: this.handleDrop.bind(this)\n        });\n      }\n    });\n    if (this.previousDropTargets.length > 0) {\n      const dropTargetsToRemove = this.previousDropTargets.filter(dt => !this.allDropTargets.includes(dt));\n      dropTargetsToRemove.forEach(dropTarget => {\n        const idx = this.service.dropTargets.findIndex(serviceDropTarget => serviceDropTarget.element === dropTarget);\n        if (idx > -1) {\n          this.service.dropTargets.splice(idx, 1);\n        }\n      });\n    }\n    this.previousDropTargets = this.allDropTargets;\n  }\n  emitZoneAwareEvent(event, normalizedEvent) {\n    const eventProps = {\n      dragTarget: this.service.dragTarget?.element,\n      dropTarget: this.currentDropTargetElement,\n      dragData: this.service.dragData,\n      dragEvent: normalizedEvent,\n      dropTargetIndex: this.service.dropIndex\n    };\n    if (isPresent(this.service.dragTarget?.hint)) {\n      eventProps.hintElement = this.service.dragTarget.hint;\n    }\n    const eventArgs = new DropTargetEvent(eventProps);\n    this.ngZone.run(() => {\n      this[event].emit(eventArgs);\n    });\n  }\n  getDropIndex() {\n    const allTargets = this.nativeElement.querySelectorAll(this.dropTargetFilter);\n    return Array.from(allTargets).indexOf(this.currentDropTargetElement);\n  }\n  clearPreviousTargets() {\n    this.previousDropTargets.forEach(dropTarget => {\n      const idx = this.service.dropTargets.findIndex(serviceDropTarget => serviceDropTarget.element === dropTarget);\n      if (idx > -1) {\n        this.service.dropTargets.splice(idx, 1);\n      }\n    });\n    this.previousDropTargets = [];\n  }\n}\nDropTargetContainerDirective.ɵfac = function DropTargetContainerDirective_Factory(t) {\n  return new (t || DropTargetContainerDirective)(i0.ɵɵdirectiveInject(DragStateService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDropTargetContainerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DropTargetContainerDirective,\n  selectors: [[\"\", \"kendoDropTargetContainer\", \"\"]],\n  inputs: {\n    dropTargetFilter: \"dropTargetFilter\",\n    dropDisabled: \"dropDisabled\"\n  },\n  outputs: {\n    onDragEnter: \"onDragEnter\",\n    onDragOver: \"onDragOver\",\n    onDragLeave: \"onDragLeave\",\n    onDrop: \"onDrop\"\n  },\n  exportAs: [\"kendoDropTargetContainer\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropTargetContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropTargetContainer]',\n      exportAs: 'kendoDropTargetContainer'\n    }]\n  }], function () {\n    return [{\n      type: DragStateService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    dropTargetFilter: [{\n      type: Input\n    }],\n    dropDisabled: [{\n      type: Input\n    }],\n    onDragEnter: [{\n      type: Output\n    }],\n    onDragOver: [{\n      type: Output\n    }],\n    onDragLeave: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: Output\n    }]\n  });\n})();\nconst EXPORTS = [DragTargetDirective, DragHandleDirective, DropTargetDirective, DragTargetContainerDirective, DropTargetContainerDirective, HintComponent];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Drag and Drop directives.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the DragAndDrop module\n * import { DragAndDropModule } from '@progress/kendo-angular-utils';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, DragAndDropModule], // import DragAndDropModule module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass DragAndDropModule {}\nDragAndDropModule.ɵfac = function DragAndDropModule_Factory(t) {\n  return new (t || DragAndDropModule)();\n};\nDragAndDropModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DragAndDropModule\n});\nDragAndDropModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragAndDropModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [...EXPORTS],\n      exports: [...EXPORTS],\n      imports: [CommonModule],\n      entryComponents: [HintComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Utils components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Utils module\n * import { UtilsModule } from '@progress/kendo-angular-utils';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, UtilsModule], // import Utils module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass UtilsModule {}\nUtilsModule.ɵfac = function UtilsModule_Factory(t) {\n  return new (t || UtilsModule)();\n};\nUtilsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: UtilsModule\n});\nUtilsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [DragAndDropModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UtilsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [DragAndDropModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DragAndDropModule, DragHandleDirective, DragTargetContainerDirective, DragTargetDirective, DragTargetDragEndEvent, DragTargetDragEvent, DragTargetDragReadyEvent, DragTargetDragStartEvent, DragTargetPressEvent, DragTargetReleaseEvent, DropTargetContainerDirective, DropTargetDirective, DropTargetEvent, HintComponent, UtilsModule };","map":{"version":3,"names":["i0","Directive","HostBinding","Injectable","Component","Input","EventEmitter","isDevMode","Output","ContentChildren","NgModule","i1","CommonModule","validatePackage","dispatchDragAndDrop","getScrollableParent","autoScroll","PreventableEvent","contains","isDocumentAvailable","parseCSSClassNames","fromEvent","merge","filter","HintComponent_ng_container_0_Template","rf","ctx","ɵɵelementContainer","_c0","a0","a1","a2","$implicit","index","data","packageMetadata","name","productName","productCodes","publishDate","version","licensingDocsUrl","DragHandleDirective","constructor","element","cursorStyle","ɵfac","DragHandleDirective_Factory","t","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","DragHandleDirective_HostBindings","ɵɵstyleProp","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","DragStateService","dragTarget","dropTarget","dragTargets","dropTargets","pressed","ignoreMouse","isScrolling","scrollableParent","autoScrollDirection","horizontal","vertical","initialClientOffset","x","y","clientOffset","initialScrollOffset","scrollOffset","offset","pageOffset","velocity","dragIndex","dropIndex","callbacks","scrollInterval","setCallbacks","handleDragAndDrop","action","updateState","state","setPressed","setScrolling","document","elementFromPoint","window","clearInterval","setInterval","setVelocity","setOffset","setClientOffset","setPageOffset","setInitialClientOffset","setScrollOffset","setInitialScrollOffset","drag","drop","drags","drops","onVelocityChange","bind","onOffsetChange","onClientOffsetChange","onPageOffsetChange","onInitialClientOffsetChange","onScrollOffsetChange","onInitialScrollOffsetChange","onIsPressedChange","onIsScrollingChange","ngOnDestroy","DragStateService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","isDocumentNode","container","nodeType","getAction","event","draggable","payload","dragTargetTransition","isPresent","value","undefined","closestBySelector","closest","matches","Element","prototype","el","sel","msMatchesSelector","node","parentNode","intersect","candidates","max","result","forEach","candidate","ration","getRatio","target","elementRect","getBoundingClientRect","targetRect","top","Math","left","right","min","width","bottom","height","targetArea","entryArea","intersectionArea","intersectionRatio","Number","toFixed","setElementStyles","renderer","elem","styles","props","Object","keys","p","setStyle","allPointerDownEvents","allPointerMoveEvents","allPointerUpEvents","HintComponent","pointerEvents","HintComponent_Factory","ɵcmp","ɵɵdefineComponent","HintComponent_HostBindings","inputs","template","directive","targetIndex","contextData","decls","vars","consts","HintComponent_Template","ɵɵtemplate","ɵɵproperty","ɵɵpureFunction3","dependencies","NgTemplateOutlet","encapsulation","DragTargetPressEvent","assign","normalizedEvent","dragEvent","hostElement","DragTargetDragReadyEvent","DragTargetDragStartEvent","DragTargetDragEndEvent","DragTargetDragEvent","DragTargetReleaseEvent","isDragStartPrevented$1","isDragPrevented$1","DragTargetDirective","ngZone","service","viewContainer","hint","threshold","dragDelay","mode","onPress","onDragStart","onDrag","onDragReady","onRelease","onDragEnd","domSubscriptions","hintComponent","dragStarted","dragTimeout","initialPosition","position","defaultHint","_dragData","dragData","fn","Error","JSON","stringify","hintTemplate","nativeElement","hintElem","instance","onPointerDown","dragHandles","length","isDragHandle","preventDefault","enabled","getAutoScrollContainer","direction","attachDomHandlers","onPointerMove","onPointerUp","ngOnInit","initializeDragTarget","ngAfterContentInit","push","subscription","handlePress","setTimeout","emitZoneAwareEvent","handleDragStart","clearTimeout","isDefaultPrevented","createHint","offsetX","offsetY","clientX","clientY","dragTargetDirective","dragTargetId","dragTargetIdResult","dragTargetIndex","handleDrag","calculatePosition","thresholdNotReached","abs","performDrag","handleRelease","handleDragEnd","isDroppedOverParentTarget","removeStyle","transition","destroyHint","runOutsideAngular","listen","getElementsByTagName","toArray","some","dh","boundaryElementRef","createCustomHint","createDefaultHint","appendTo","appendChild","body","cloneNode","hintClass","hintClasses","className","addClass","createComponent","changeDetectorRef","detectChanges","destroy","removeChild","eventProps","hintElement","eventArgs","run","emit","getStylesPerElement","scrollX","scrollY","restrictByAxis","hintCoordinates","zIndex","transform","DragTargetDirective_Factory","Renderer2","NgZone","ViewContainerRef","contentQueries","DragTargetDirective_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","outputs","DropTargetEvent","DropTargetDirective","onDragEnter","onDragOver","onDragLeave","onDrop","initializeDropTarget","handleDragEnter","handleDragLeave","handleDragOver","handleDrop","DropTargetDirective_Factory","isDragStartPrevented","isDragPrevented","DragTargetContainerDirective","wrapper","cdr","currentDragTarget","currentDragTargetElement","previousDragTargets","positionsMap","Map","_dragTargetFilter","_dragDisabled","_dragTargetId","dragTargetFilter","dragDisabled","initializeDragTargets","clearPreviousTargets","unsubscribe","subscribe","notify","allDragTargets","queryHost","isHandleSelectorValid","dragHandle","ngAfterViewInit","isTargetPresent","eventTarget","originalEvent","getDragIndex","has","get","targetIdArgs","targetDataArgs","set","delete","pointerDownSubscription","pointerMoveSubscription","pointerUpSubscription","scrollSubscription","pointerMoveStreams","map","ev","pointerUpStreams","pipe","e","pointerDownStreams","filterElement","indexOf","dragTargetEl","isDragTargetInitialized","find","dt","dragTargetsToRemove","includes","idx","findIndex","serviceDragTarget","splice","setCursorStyle","handle","Array","from","querySelectorAll","DragTargetContainerDirective_Factory","ChangeDetectorRef","DropTargetContainerDirective","currentDropTarget","currentDropTargetElement","previousDropTargets","_dropTargetFilter","_dropDisabled","dropTargetFilter","dropDisabled","initializeDropTargets","allDropTargets","getDropIndex","containsEventTarget","dropTargetEl","isDropTargetInitialized","dropTargetsToRemove","serviceDropTarget","dropTargetIndex","allTargets","DropTargetContainerDirective_Factory","EXPORTS","DragAndDropModule","DragAndDropModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","entryComponents","UtilsModule","UtilsModule_Factory"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-angular-utils/fesm2020/progress-kendo-angular-utils.mjs"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2023 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Directive, HostBinding, Injectable, Component, Input, EventEmitter, isDevMode, Output, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { dispatchDragAndDrop, getScrollableParent, autoScroll } from '@progress/kendo-draggable-common';\nimport { PreventableEvent, contains, isDocumentAvailable, parseCSSClassNames } from '@progress/kendo-angular-common';\nimport { fromEvent, merge } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-utils',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1697530088,\n    version: '14.0.1',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * Represents the Kendo UI DragHandle directive for Angular.\n * It is used to specify a concrete element within a drag target as a handle for dragging, instead the drag target itself.\n */\nclass DragHandleDirective {\n    constructor(element) {\n        this.element = element;\n        this.cursorStyle = 'move';\n    }\n}\nDragHandleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragHandleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDragHandleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DragHandleDirective, selector: \"[kendoDragHandle]\", host: { properties: { \"style.cursor\": \"this.cursorStyle\" } }, exportAs: [\"kendoDragHandle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragHandleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDragHandle]',\n                    exportAs: 'kendoDragHandle'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cursorStyle: [{\n                type: HostBinding,\n                args: ['style.cursor']\n            }] } });\n\n/**\n * @hidden\n */\nclass DragStateService {\n    constructor() {\n        this.dragTarget = null;\n        this.dropTarget = null;\n        this.dragTargets = [];\n        this.dropTargets = [];\n        this.pressed = false;\n        this.ignoreMouse = false;\n        this.autoScroll = true;\n        this.isScrolling = false;\n        this.scrollableParent = null;\n        this.autoScrollDirection = { horizontal: true, vertical: true };\n        this.initialClientOffset = { x: 0, y: 0 };\n        this.clientOffset = { x: 0, y: 0 };\n        this.initialScrollOffset = { x: 0, y: 0 };\n        this.scrollOffset = { x: 0, y: 0 };\n        this.offset = { x: 0, y: 0 };\n        this.pageOffset = { x: 0, y: 0 };\n        this.velocity = { x: 0, y: 0 };\n        this.dragIndex = null;\n        this.dropIndex = null;\n        this.callbacks = {};\n        this.scrollInterval = null;\n        this.setCallbacks();\n    }\n    handleDragAndDrop(action) {\n        this.updateState();\n        dispatchDragAndDrop(this.state, action, this.callbacks);\n    }\n    setPressed(pressed) {\n        this.pressed = pressed;\n    }\n    setScrolling(isScrolling) {\n        this.isScrolling = isScrolling;\n        if (isScrolling) {\n            const scrollableParent = getScrollableParent(document.elementFromPoint(this.clientOffset.x, this.clientOffset.y));\n            window.clearInterval(this.scrollInterval);\n            this.scrollInterval = window.setInterval(() => {\n                autoScroll(scrollableParent, { x: this.velocity.x, y: this.velocity.y });\n            }, 50);\n        }\n        else {\n            if (this.scrollInterval) {\n                window.clearInterval(this.scrollInterval);\n                this.scrollInterval = null;\n            }\n        }\n    }\n    setVelocity(velocity) {\n        this.velocity = velocity;\n    }\n    setOffset(offset) {\n        this.offset = offset;\n    }\n    setClientOffset(clientOffset) {\n        this.clientOffset = clientOffset;\n    }\n    setPageOffset(pageOffset) {\n        this.pageOffset = pageOffset;\n    }\n    setInitialClientOffset(initialClientOffset) {\n        this.initialClientOffset = initialClientOffset;\n    }\n    setScrollOffset(scrollOffset) {\n        this.scrollOffset = scrollOffset;\n    }\n    setInitialScrollOffset(initialScrollOffset) {\n        this.initialScrollOffset = initialScrollOffset;\n    }\n    updateState() {\n        this.state = {\n            drag: this.dragTarget,\n            drop: this.dropTarget,\n            drags: this.dragTargets,\n            drops: this.dropTargets,\n            pressed: this.pressed,\n            ignoreMouse: this.ignoreMouse,\n            autoScroll: this.autoScroll,\n            isScrolling: this.isScrolling,\n            scrollableParent: this.scrollableParent,\n            autoScrollDirection: this.autoScrollDirection,\n            initialClientOffset: this.initialClientOffset,\n            clientOffset: this.clientOffset,\n            initialScrollOffset: this.initialScrollOffset,\n            scrollOffset: this.scrollOffset,\n            offset: this.offset,\n            pageOffset: this.pageOffset,\n            velocity: this.velocity\n        };\n    }\n    setCallbacks() {\n        this.callbacks = {\n            onVelocityChange: this.setVelocity.bind(this),\n            onOffsetChange: this.setOffset.bind(this),\n            onClientOffsetChange: this.setClientOffset.bind(this),\n            onPageOffsetChange: this.setPageOffset.bind(this),\n            onInitialClientOffsetChange: this.setInitialClientOffset.bind(this),\n            onScrollOffsetChange: this.setScrollOffset.bind(this),\n            onInitialScrollOffsetChange: this.setInitialScrollOffset.bind(this),\n            onIsPressedChange: this.setPressed.bind(this),\n            onIsScrollingChange: this.setScrolling.bind(this)\n        };\n    }\n    ngOnDestroy() {\n        if (this.scrollInterval) {\n            window.clearInterval(this.scrollInterval);\n            this.scrollInterval = null;\n        }\n    }\n}\nDragStateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragStateService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDragStateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragStateService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragStateService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction isDocumentNode(container) {\n    return container.nodeType === 9;\n}\n/**\n * @hidden\n */\nconst getAction = (event, draggable) => {\n    return {\n        event: event,\n        payload: draggable\n    };\n};\n/**\n * @hidden\n */\nconst dragTargetTransition = 'transform .3s ease-in-out';\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nfunction closestBySelector(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    const matches = Element.prototype.matches ?\n        (el, sel) => el.matches(sel)\n        : (el, sel) => el.msMatchesSelector(sel);\n    let node = element;\n    while (node && !isDocumentNode(node)) {\n        if (matches(node, selector)) {\n            return node;\n        }\n        node = node.parentNode;\n    }\n}\n/**\n * @hidden\n */\nconst intersect = (element, candidates) => {\n    let max = 0;\n    let result = null;\n    candidates.forEach((candidate) => {\n        if (candidate && element) {\n            const ration = getRatio(element, candidate);\n            if (ration > max) {\n                max = ration;\n                result = candidate;\n            }\n        }\n    });\n    return result;\n};\nconst getRatio = (element, target) => {\n    const elementRect = element.getBoundingClientRect();\n    const targetRect = target.getBoundingClientRect();\n    const top = Math.max(targetRect.top, elementRect.top);\n    const left = Math.max(targetRect.left, elementRect.left);\n    const right = Math.min(targetRect.left + targetRect.width, elementRect.left + elementRect.width);\n    const bottom = Math.min(targetRect.top + targetRect.height, elementRect.top + elementRect.height);\n    const width = right - left;\n    const height = bottom - top;\n    if (left < right && top < bottom) {\n        const targetArea = targetRect.width * targetRect.height;\n        const entryArea = elementRect.width * elementRect.height;\n        const intersectionArea = width * height;\n        const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);\n        return Number(intersectionRatio.toFixed(4));\n    }\n    return 0;\n};\n/**\n * @hidden\n */\nconst setElementStyles = (renderer, elem, styles) => {\n    const props = Object.keys(styles);\n    props.forEach(p => {\n        renderer.setStyle(elem, p, styles[p]);\n    });\n};\n/**\n * @hidden\n */\nconst allPointerDownEvents = ['pointerdown', 'mousedown', 'touchstart'];\n/**\n * @hidden\n */\nconst allPointerMoveEvents = ['pointermove', 'mousemove', 'touchmove'];\n/**\n * @hidden\n */\nconst allPointerUpEvents = ['pointerup', 'pointercancel', 'mouseup', 'contextmenu', 'touchend', 'touchcancel'];\n\n/**\n * @hidden\n */\nclass HintComponent {\n    constructor(element) {\n        this.element = element;\n        this.pointerEvents = 'none';\n    }\n}\nHintComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: HintComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHintComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: HintComponent, selector: \"kendo-draghint\", inputs: { template: \"template\", directive: \"directive\", targetIndex: \"targetIndex\", contextData: \"contextData\" }, host: { properties: { \"style.pointer-events\": \"this.pointerEvents\" } }, ngImport: i0, template: `\n        <ng-container *ngTemplateOutlet=\"template; context: { $implicit: directive, index: targetIndex, data: contextData }\">\n        </ng-container>\n    `, isInline: true, directives: [{ type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: HintComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'kendo-draghint',\n                    template: `\n        <ng-container *ngTemplateOutlet=\"template; context: { $implicit: directive, index: targetIndex, data: contextData }\">\n        </ng-container>\n    `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { template: [{\n                type: Input\n            }], directive: [{\n                type: Input\n            }], targetIndex: [{\n                type: Input\n            }], contextData: [{\n                type: Input\n            }], pointerEvents: [{\n                type: HostBinding,\n                args: ['style.pointer-events']\n            }] } });\n\n/**\n * Arguments for the press event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetPressEvent {\n    /**\n     * @hidden\n     */\n    constructor(args) {\n        Object.assign(this, args);\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get normalizedEvent() {\n        return this.dragEvent;\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get hostElement() {\n        return this.dragTarget;\n    }\n}\n\n/**\n * Arguments for the dragReady event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragReadyEvent {\n    /**\n     * @hidden\n     */\n    constructor(args) {\n        Object.assign(this, args);\n    }\n}\n\n/**\n * Arguments for the dragStart event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragStartEvent extends PreventableEvent {\n    /**\n     * @hidden\n     */\n    constructor(args) {\n        super();\n        Object.assign(this, args);\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get normalizedEvent() {\n        return this.dragEvent;\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get hostElement() {\n        return this.dragTarget;\n    }\n}\n\n/**\n * Arguments for the dragEnd event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragEndEvent {\n    /**\n     * @hidden\n     */\n    constructor(args) {\n        Object.assign(this, args);\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get normalizedEvent() {\n        return this.dragEvent;\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get hostElement() {\n        return this.dragTarget;\n    }\n}\n\n/**\n * Arguments for the drag event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetDragEvent extends PreventableEvent {\n    /**\n     * @hidden\n     */\n    constructor(args) {\n        super();\n        Object.assign(this, args);\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get normalizedEvent() {\n        return this.dragEvent;\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get hostElement() {\n        return this.dragTarget;\n    }\n}\n\n/**\n * Arguments for the release event of the DragTarget and DragTargetContainer.\n */\nclass DragTargetReleaseEvent {\n    /**\n     * @hidden\n     */\n    constructor(args) {\n        Object.assign(this, args);\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get normalizedEvent() {\n        return this.dragEvent;\n    }\n    /**\n     * Left for backward compatibility for the DragTarget deprecated events.\n     * @hidden\n     */\n    get hostElement() {\n        return this.dragTarget;\n    }\n}\n\nlet isDragStartPrevented$1 = false;\nlet isDragPrevented$1 = false;\n/**\n * Represents the Kendo UI DragTarget directive for Angular.\n */\nclass DragTargetDirective {\n    constructor(element, renderer, ngZone, service, viewContainer) {\n        this.element = element;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.service = service;\n        this.viewContainer = viewContainer;\n        /**\n         * Defines whether a hint will be used for dragging. By default, the hint is a copy of the drag target. ([see example]({% slug drag_hint %})).\n         *\n         * @default false\n         */\n        this.hint = false;\n        /**\n         * The number of pixels the pointer moves in any direction before the dragging starts ([see example]({% slug minimum_distance %})). Applicable when `manualDrag` is set to `false`.\n         *\n         * @default 0\n         */\n        this.threshold = 0;\n        /**\n         * Defines the automatic container scrolling behavior when close to the edge ([see example]({% slug auto_scroll %})).\n         *\n         * @default true\n         */\n        this.autoScroll = true;\n        /**\n         * Defines the delay in milliseconds after which the drag will begin ([see example]({% slug drag_delay %})).\n         *\n         * @default 0\n         */\n        this.dragDelay = 0;\n        /**\n         * Specifies whether the default dragging behavior will be performed or the developer will manually handle the drag action.\n         *\n         * @default 'auto'\n         */\n        this.mode = 'auto';\n        /**\n         * Fires when the user presses the DragTarget element.\n         */\n        this.onPress = new EventEmitter();\n        /**\n         * Fires when the dragging of the DragTarget element begins.\n         */\n        this.onDragStart = new EventEmitter();\n        /**\n         * Fires while the user drags the DragTarget element.\n         */\n        this.onDrag = new EventEmitter();\n        /**\n         * Fires when the DragTarget's `dragDelay` has passed and the user is able to drag the element.\n         */\n        this.onDragReady = new EventEmitter();\n        /**\n         * Fires when the user releases the DragTarget element after being pressed.\n         */\n        this.onRelease = new EventEmitter();\n        /**\n         * Fires when the dragging of the DragTarget ends and the element is released.\n         */\n        this.onDragEnd = new EventEmitter();\n        this.dragTarget = null;\n        this.domSubscriptions = [];\n        this.hintComponent = null;\n        this.dragStarted = false;\n        this.pressed = false;\n        this.dragTimeout = null;\n        this.initialPosition = { x: 0, y: 0 };\n        this.position = { x: 0, y: 0 };\n        this.scrollableParent = null;\n        this.defaultHint = null;\n        this._dragData = () => null;\n        validatePackage(packageMetadata);\n    }\n    /**\n     * Defines a callback function used for attaching custom data to the dragTarget.\n     * The data will be available in the events of the respective [`DropTarget`]({% slug api_utils_droptargetdirective %}) or [`DropTargetContainer`]({% slug api_utils_droptargetcontainerdirective %}) directives.\n     * The current DragTarget HTML element and its `dragTargetId` will be available as arguments.\n     */\n    set dragData(fn) {\n        if (isDevMode && typeof fn !== 'function') {\n            throw new Error(`dragData must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._dragData = fn;\n    }\n    get dragData() {\n        return this._dragData;\n    }\n    get hintTemplate() {\n        return isPresent(this.hint) && typeof this.hint === 'object' ? this.hint.hintTemplate : null;\n    }\n    get nativeElement() {\n        return this.element.nativeElement;\n    }\n    get hintElem() {\n        return this.hintTemplate && isPresent(this.hintComponent) ? this.hintComponent.instance.element.nativeElement : this.defaultHint;\n    }\n    onPointerDown(event) {\n        if (this.dragHandles.length && !this.isDragHandle(event.target)) {\n            return;\n        }\n        event.preventDefault();\n        const action = getAction(event, this.dragTarget);\n        this.service.handleDragAndDrop(action);\n        this.service.autoScroll = typeof this.autoScroll === 'object' ? this.autoScroll.enabled !== false : this.autoScroll;\n        this.service.scrollableParent = this.getAutoScrollContainer();\n        this.service.autoScrollDirection = typeof this.autoScroll === 'object' ? this.autoScroll.direction : { horizontal: true, vertical: true };\n        this.attachDomHandlers();\n    }\n    onPointerMove(event) {\n        event.preventDefault();\n        const action = getAction(event, this.dragTarget);\n        this.service.handleDragAndDrop(action);\n    }\n    onPointerUp(event) {\n        event.preventDefault();\n        const action = getAction(event, this.dragTarget);\n        this.service.handleDragAndDrop(action);\n        this.attachDomHandlers();\n    }\n    ngOnInit() {\n        this.initializeDragTarget();\n    }\n    ngAfterContentInit() {\n        if (isPresent(this.element) || isPresent(this.dragTarget)) {\n            this.attachDomHandlers();\n            if (!this.dragHandles.length) {\n                this.renderer.setStyle(this.nativeElement, 'cursor', 'move');\n            }\n        }\n        this.service.dragTargets.push(this.dragTarget);\n    }\n    ngOnDestroy() {\n        this.domSubscriptions.forEach(subscription => subscription());\n    }\n    handlePress(event) {\n        if (this.dragDelay > 0) {\n            this.dragTimeout = window.setTimeout(() => {\n                this.pressed = true;\n                this.emitZoneAwareEvent('onDragReady', event);\n            }, this.dragDelay);\n        }\n        else {\n            this.pressed = true;\n        }\n        this.scrollableParent = this.dragTarget.element ? getScrollableParent(this.dragTarget.element) : null;\n        this.emitZoneAwareEvent('onPress', event);\n    }\n    handleDragStart(event) {\n        if (!this.pressed) {\n            if (this.dragTimeout) {\n                window.clearTimeout(this.dragTimeout);\n                this.dragTimeout = null;\n            }\n            return;\n        }\n        isDragStartPrevented$1 = this.emitZoneAwareEvent('onDragStart', event).isDefaultPrevented();\n        if (isDragStartPrevented$1) {\n            return;\n        }\n        if (this.hint) {\n            this.createHint();\n            if (this.mode === 'auto') {\n                this.renderer.setStyle(this.nativeElement, 'opacity', '0.7');\n            }\n            this.initialPosition = { x: event.offsetX, y: event.offsetY };\n        }\n        else {\n            this.initialPosition = { x: event.clientX - this.position.x, y: event.clientY - this.position.y };\n        }\n        this.dragStarted = this.threshold === 0;\n        this.service.dragTarget = this.dragTarget;\n        this.service.dragTargetDirective = this;\n        this.service.dragData = this.dragData({ dragTarget: this.dragTarget.element, dragTargetId: this.dragTargetIdResult, dragTargetIndex: null });\n    }\n    handleDrag(event) {\n        if (!this.pressed || isDragStartPrevented$1) {\n            return;\n        }\n        const elem = this.hint ? this.hintElem : this.nativeElement;\n        this.position = this.calculatePosition(elem, event);\n        const thresholdNotReached = Math.abs(this.position.x) < this.threshold && Math.abs(this.position.y) < this.threshold;\n        if (!this.dragStarted && thresholdNotReached) {\n            return;\n        }\n        if (!this.dragStarted && this.threshold > 0) {\n            this.dragStarted = true;\n        }\n        isDragPrevented$1 = this.emitZoneAwareEvent('onDrag', event).isDefaultPrevented();\n        if (isDragPrevented$1) {\n            return;\n        }\n        if (this.mode === 'auto') {\n            this.performDrag();\n        }\n        else {\n            this.dragStarted = true;\n        }\n    }\n    handleRelease(event) {\n        if (this.dragTimeout) {\n            clearTimeout(this.dragTimeout);\n            this.dragTimeout = null;\n            this.pressed = false;\n        }\n        this.emitZoneAwareEvent('onRelease', event);\n    }\n    handleDragEnd(event) {\n        if (this.mode === 'auto') {\n            const isDroppedOverParentTarget = isPresent(this.service.dropTarget) && !contains(this.service.dropTarget?.element, this.service.dragTarget?.element, true);\n            const elem = this.hint ? this.hintElem : this.nativeElement;\n            if (isDroppedOverParentTarget || this.service.dropTargets.length > 0 && isPresent(elem)) {\n                this.renderer.removeStyle(elem, 'transform');\n                setElementStyles(this.renderer, elem, {\n                    transition: dragTargetTransition\n                });\n                this.position = { x: 0, y: 0 };\n            }\n        }\n        if (this.hint && isPresent(this.hintElem)) {\n            this.destroyHint();\n            if (this.mode === 'auto') {\n                this.renderer.removeStyle(this.nativeElement, 'opacity');\n            }\n        }\n        this.service.dragTarget = null;\n        this.service.dragTargetDirective = null;\n        if (!this.dragStarted || isDragStartPrevented$1 || isDragPrevented$1) {\n            return;\n        }\n        this.emitZoneAwareEvent('onDragEnd', event);\n        this.dragStarted = false;\n    }\n    initializeDragTarget() {\n        this.dragTarget = {\n            element: this.nativeElement,\n            hint: null,\n            onPress: this.handlePress.bind(this),\n            onRelease: this.handleRelease.bind(this),\n            onDragStart: this.handleDragStart.bind(this),\n            onDrag: this.handleDrag.bind(this),\n            onDragEnd: this.handleDragEnd.bind(this)\n        };\n    }\n    attachDomHandlers() {\n        this.ngZone.runOutsideAngular(() => {\n            if (this.domSubscriptions.length > 0) {\n                this.domSubscriptions.forEach(subscription => subscription());\n            }\n            if (!(isDocumentAvailable() && isPresent(this.element))) {\n                return;\n            }\n            if (this.service.pressed) {\n                this.onPointerMove = this.onPointerMove.bind(this);\n                this.onPointerUp = this.onPointerUp.bind(this);\n                this.domSubscriptions = [\n                    this.renderer.listen(document, 'pointermove', this.onPointerMove),\n                    this.renderer.listen(document, 'mousemove', this.onPointerMove),\n                    this.renderer.listen(document, 'touchmove', this.onPointerMove),\n                    this.renderer.listen(document, 'pointerup', this.onPointerUp),\n                    this.renderer.listen(document, 'pointercancel', this.onPointerUp),\n                    this.renderer.listen(document, 'mouseup', this.onPointerUp),\n                    this.renderer.listen(document, 'contextmenu', this.onPointerUp),\n                    this.renderer.listen(document, 'touchend', this.onPointerUp),\n                    this.renderer.listen(document, 'touchcancel', this.onPointerUp)\n                ];\n                if (isPresent(this.scrollableParent)) {\n                    if (this.scrollableParent === document.getElementsByTagName('html')[0]) {\n                        this.scrollableParent = window;\n                    }\n                    this.domSubscriptions.push(this.renderer.listen(this.scrollableParent, 'scroll', this.onPointerMove));\n                }\n            }\n            else {\n                this.onPointerDown = this.onPointerDown.bind(this);\n                const element = this.nativeElement;\n                this.domSubscriptions = [\n                    this.renderer.listen(element, 'pointerdown', this.onPointerDown),\n                    this.renderer.listen(element, 'mousedown', this.onPointerDown),\n                    this.renderer.listen(element, 'touchstart', this.onPointerDown)\n                ];\n            }\n        });\n    }\n    isDragHandle(el) {\n        return this.dragHandles.toArray().some(dh => contains(dh.element.nativeElement, el, true));\n    }\n    getAutoScrollContainer() {\n        return typeof this.autoScroll === 'object' &&\n            this.autoScroll.boundaryElementRef &&\n            this.autoScroll.boundaryElementRef.nativeElement ?\n            this.autoScroll.boundaryElementRef.nativeElement : null;\n    }\n    createHint() {\n        if (!(isDocumentAvailable() && isPresent(this.element))) {\n            return;\n        }\n        if (isPresent(this.hint) && typeof this.hint === 'object') {\n            if (isPresent(this.hint.hintTemplate)) {\n                this.createCustomHint();\n            }\n            else {\n                this.createDefaultHint();\n            }\n        }\n        else {\n            this.createDefaultHint();\n        }\n        this.dragTarget.hint = this.hintElem;\n        if (typeof this.hint === 'object' && isPresent(this.hint.appendTo)) {\n            this.hint.appendTo.element.nativeElement.appendChild(this.hintElem);\n        }\n        else {\n            document.body.appendChild(this.hintElem);\n        }\n    }\n    createDefaultHint() {\n        this.defaultHint = this.nativeElement.cloneNode(true);\n        if (typeof this.hint === 'object') {\n            if (isPresent(this.hint.hintClass)) {\n                const hintClasses = parseCSSClassNames(this.hint.hintClass);\n                hintClasses.forEach(className => this.renderer.addClass(this.defaultHint, className));\n            }\n        }\n    }\n    createCustomHint() {\n        if (isPresent(this.hint.appendTo)) {\n            this.hintComponent = this.hint.appendTo.createComponent(HintComponent);\n        }\n        else {\n            this.hintComponent = this.viewContainer.createComponent(HintComponent);\n        }\n        this.hintComponent.instance.template = this.hintTemplate;\n        this.hintComponent.instance.directive = this;\n        this.hintComponent.changeDetectorRef.detectChanges();\n    }\n    destroyHint() {\n        if (isPresent(this.hintTemplate)) {\n            this.hintComponent.destroy();\n            this.hintComponent.changeDetectorRef.detectChanges();\n            this.hintComponent = null;\n        }\n        else {\n            if (typeof this.hint === 'object' && isPresent(this.hint.appendTo)) {\n                this.hint.appendTo.element.nativeElement.removeChild(this.defaultHint);\n            }\n            else {\n                document.body.removeChild(this.defaultHint);\n            }\n            this.defaultHint = null;\n        }\n        this.dragTarget.hint = null;\n    }\n    emitZoneAwareEvent(event, normalizedEvent) {\n        const eventProps = {\n            dragTarget: this.nativeElement,\n            dragEvent: normalizedEvent\n        };\n        if (this.hint && isPresent(this.hintElem)) {\n            eventProps.hintElement = this.hintElem;\n        }\n        if (this.dragTargetId && this.dragTargetId !== '') {\n            eventProps.dragTargetId = this.dragTargetIdResult;\n        }\n        let eventArgs;\n        switch (event) {\n            case 'onDragReady':\n                eventArgs = new DragTargetDragReadyEvent(eventProps);\n                break;\n            case 'onPress':\n                eventArgs = new DragTargetPressEvent(eventProps);\n                break;\n            case 'onDragStart':\n                eventArgs = new DragTargetDragStartEvent(eventProps);\n                break;\n            case 'onDrag':\n                eventArgs = new DragTargetDragEvent(eventProps);\n                break;\n            case 'onRelease':\n                eventArgs = new DragTargetReleaseEvent(eventProps);\n                break;\n            case 'onDragEnd':\n                eventArgs = new DragTargetDragEndEvent(eventProps);\n                break;\n            default:\n                break;\n        }\n        this.ngZone.run(() => {\n            this[event].emit(eventArgs);\n        });\n        return eventArgs;\n    }\n    get dragTargetIdResult() {\n        if (this.dragTargetId && this.dragTargetId !== '') {\n            return typeof this.dragTargetId === 'string' ? this.dragTargetId : this.dragTargetId({ dragTarget: this.dragTarget.element, dragTargetIndex: null });\n        }\n    }\n    performDrag() {\n        const elem = this.hint ? this.hintElem : this.nativeElement;\n        if (elem) {\n            const styles = this.getStylesPerElement(elem);\n            setElementStyles(this.renderer, elem, styles);\n        }\n    }\n    calculatePosition(element, event) {\n        let position = null;\n        if (element === this.hintElem) {\n            position = { x: event.clientX, y: event.clientY };\n        }\n        else {\n            position = { x: event.clientX - this.initialPosition.x + event.scrollX, y: event.clientY - this.initialPosition.y + event.scrollY };\n        }\n        if (this.restrictByAxis === 'horizontal') {\n            position.y = 0;\n        }\n        else if (this.restrictByAxis === 'vertical') {\n            position.x = 0;\n        }\n        return position;\n    }\n    getStylesPerElement(element) {\n        if (element === this.hintElem) {\n            const hintCoordinates = { x: this.position.x - this.initialPosition.x, y: this.position.y - this.initialPosition.y };\n            return {\n                top: `${hintCoordinates.y}px`,\n                left: `${hintCoordinates.x}px`,\n                transition: 'none',\n                position: 'absolute',\n                zIndex: 1999\n            };\n        }\n        else {\n            const transform = `translate(${this.position.x}px, ${this.position.y}px)`;\n            return {\n                transform: transform,\n                transition: 'none'\n            };\n        }\n    }\n}\nDragTargetDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragTargetDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: DragStateService }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nDragTargetDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DragTargetDirective, selector: \"[kendoDragTarget]\", inputs: { hint: \"hint\", threshold: \"threshold\", autoScroll: \"autoScroll\", dragTargetId: \"dragTargetId\", dragDelay: \"dragDelay\", restrictByAxis: \"restrictByAxis\", mode: \"mode\", dragData: \"dragData\" }, outputs: { onPress: \"onPress\", onDragStart: \"onDragStart\", onDrag: \"onDrag\", onDragReady: \"onDragReady\", onRelease: \"onRelease\", onDragEnd: \"onDragEnd\" }, queries: [{ propertyName: \"dragHandles\", predicate: DragHandleDirective }], exportAs: [\"kendoDragTarget\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragTargetDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDragTarget]',\n                    exportAs: 'kendoDragTarget'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: DragStateService }, { type: i0.ViewContainerRef }]; }, propDecorators: { hint: [{\n                type: Input\n            }], threshold: [{\n                type: Input\n            }], autoScroll: [{\n                type: Input\n            }], dragTargetId: [{\n                type: Input\n            }], dragDelay: [{\n                type: Input\n            }], restrictByAxis: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], dragData: [{\n                type: Input\n            }], onPress: [{\n                type: Output\n            }], onDragStart: [{\n                type: Output\n            }], onDrag: [{\n                type: Output\n            }], onDragReady: [{\n                type: Output\n            }], onRelease: [{\n                type: Output\n            }], onDragEnd: [{\n                type: Output\n            }], dragHandles: [{\n                type: ContentChildren,\n                args: [DragHandleDirective]\n            }] } });\n\n/**\n * Arguments for the drag events of the DropTarget and DropTargetContainer directives.\n */\nclass DropTargetEvent {\n    /**\n     * @hidden\n     */\n    constructor(args) {\n        Object.assign(this, args);\n    }\n    /**\n     * Left for backward compatibility for the DropTarget deprecated events.\n     * @hidden\n     */\n    get normalizedEvent() {\n        return this.dragEvent;\n    }\n    /**\n     * Left for backward compatibility for the DropTarget deprecated events.\n     * @hidden\n     */\n    get hostElement() {\n        return this.dropTarget;\n    }\n}\n\n/**\n * Represents the Kendo UI DropTarget directive for Angular.\n */\nclass DropTargetDirective {\n    constructor(service, element, ngZone) {\n        this.service = service;\n        this.element = element;\n        this.ngZone = ngZone;\n        /**\n         * Fires when a DragTarget element enters the DropTarget.\n         */\n        this.onDragEnter = new EventEmitter();\n        /**\n         * Fires when a DragTarget element is being dragged over the DropTarget.\n         */\n        this.onDragOver = new EventEmitter();\n        /**\n         * Fires when a DragTarget element leaves the DropTarget.\n         */\n        this.onDragLeave = new EventEmitter();\n        /**\n         * Fires when a DragTarget element is dropped over the DropTarget.\n         */\n        this.onDrop = new EventEmitter();\n        validatePackage(packageMetadata);\n    }\n    ngOnInit() {\n        this.initializeDropTarget();\n        this.service.dropTargets.push(this.dropTarget);\n    }\n    /**\n     * @hidden\n     */\n    handleDragEnter(event) {\n        if (!this.service.dragTarget) {\n            return;\n        }\n        this.service.dropTarget = this.dropTarget;\n        this.emitZoneAwareEvent('onDragEnter', event);\n    }\n    /**\n     * @hidden\n     */\n    handleDragLeave(event) {\n        this.service.dropTarget = null;\n        if (!this.service.dragTarget) {\n            return;\n        }\n        this.emitZoneAwareEvent('onDragLeave', event);\n    }\n    /**\n     * @hidden\n     */\n    handleDragOver(event) {\n        if (!this.service.dragTarget) {\n            return;\n        }\n        this.emitZoneAwareEvent('onDragOver', event);\n    }\n    /**\n     * @hidden\n     */\n    handleDrop(event) {\n        this.emitZoneAwareEvent('onDrop', event);\n        this.service.dropTarget = null;\n    }\n    initializeDropTarget() {\n        this.dropTarget = {\n            element: this.element.nativeElement,\n            onDragEnter: this.handleDragEnter.bind(this),\n            onDragLeave: this.handleDragLeave.bind(this),\n            onDragOver: this.handleDragOver.bind(this),\n            onDrop: this.handleDrop.bind(this)\n        };\n    }\n    emitZoneAwareEvent(event, normalizedEvent) {\n        const eventProps = {\n            dropTarget: this.element.nativeElement,\n            dragTarget: this.service.dragTarget?.element,\n            dragEvent: normalizedEvent,\n            dragData: this.service.dragData\n        };\n        if (isPresent(this.service.dragTarget?.hint)) {\n            eventProps.hintElement = this.service.dragTarget.element;\n        }\n        const eventArgs = new DropTargetEvent(eventProps);\n        this.ngZone.run(() => {\n            this[event].emit(eventArgs);\n        });\n    }\n}\nDropTargetDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropTargetDirective, deps: [{ token: DragStateService }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nDropTargetDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DropTargetDirective, selector: \"[kendoDropTarget]\", outputs: { onDragEnter: \"onDragEnter\", onDragOver: \"onDragOver\", onDragLeave: \"onDragLeave\", onDrop: \"onDrop\" }, exportAs: [\"kendoDropTarget\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropTargetDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropTarget]',\n                    exportAs: 'kendoDropTarget'\n                }]\n        }], ctorParameters: function () { return [{ type: DragStateService }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { onDragEnter: [{\n                type: Output\n            }], onDragOver: [{\n                type: Output\n            }], onDragLeave: [{\n                type: Output\n            }], onDrop: [{\n                type: Output\n            }] } });\n\nlet isDragStartPrevented = false;\nlet isDragPrevented = false;\n/**\n * Represents the [Kendo UI DragTargetContainer directive for Angular]({% slug api_utils_dragtargetcontainerdirective %}).\n * Used to configure multiple elements as draggable.\n *\n * @example\n * ```ts-no-run\n * <ul kendoDragTargetContainer dragTargetFilter=\".my-draggable\">\n *    <li class=\"my-draggable\">foo</li>\n * </ul>\n * ```\n */\nclass DragTargetContainerDirective {\n    constructor(wrapper, ngZone, renderer, service, viewContainer, cdr) {\n        this.wrapper = wrapper;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.service = service;\n        this.viewContainer = viewContainer;\n        this.cdr = cdr;\n        /**\n         * Defines whether a hint will be used for dragging. By default, the hint is a copy of the current drag target. ([see example]({% slug drag_hint %})).\n         *\n         * @default false\n         */\n        this.hint = false;\n        /**\n         * Defines the delay in milliseconds after which the drag will begin ([see example](slug drag_target_container#toc-events)).\n         *\n         * @default 0\n         */\n        this.dragDelay = 0;\n        /**\n         * The number of pixels the pointer moves in any direction before the dragging starts ([see example]({% slug minimum_distance %})).\n         *\n         * @default 0\n         */\n        this.threshold = 0;\n        /**\n         * Specifies whether the default dragging behavior will be performed or the developer will manually handle the drag action.\n         *\n         * @default 'auto'\n         */\n        this.mode = 'auto';\n        /**\n         * Fires when a DragTarget's `dragDelay` has passed and the user is able to drag the element.\n         */\n        this.onDragReady = new EventEmitter();\n        /**\n         * Fires when the user presses a DragTarget element.\n         */\n        this.onPress = new EventEmitter();\n        /**\n         * Fires when the dragging of a DragTarget element begins.\n        */\n        this.onDragStart = new EventEmitter();\n        /**\n         * Fires while the user drags a DragTarget element.\n         */\n        this.onDrag = new EventEmitter();\n        /**\n         * Fires when the user releases a DragTarget element after being pressed.\n         */\n        this.onRelease = new EventEmitter();\n        /**\n         * Fires when the dragging of a DragTarget ends and the element is released.\n         */\n        this.onDragEnd = new EventEmitter();\n        this.currentDragTarget = null;\n        this.dragTimeout = null;\n        this.pressed = false;\n        this.dragStarted = false;\n        this.hintComponent = null;\n        this.defaultHint = null;\n        this.currentDragTargetElement = null;\n        this.scrollableParent = null;\n        this.previousDragTargets = [];\n        this.initialPosition = { x: 0, y: 0 };\n        this.position = { x: 0, y: 0 };\n        this.positionsMap = new Map();\n        this._dragTargetFilter = null;\n        this._dragDisabled = false;\n        this._dragData = () => null;\n        this._dragTargetId = () => null;\n        validatePackage(packageMetadata);\n    }\n    /**\n     * Specifies a selector for elements within a container which will be configured as draggable\n     * ([see example]({% slug drag_target_container %})). The possible values include any\n     * DOM `selector`.\n     */\n    set dragTargetFilter(value) {\n        this._dragTargetFilter = value;\n        if (!this.dragDisabled) {\n            this.initializeDragTargets();\n        }\n    }\n    get dragTargetFilter() {\n        return this._dragTargetFilter;\n    }\n    /**\n     * Defines a unique identifier for each drag target.\n     * It exposes the current DragTarget HTML element and its index in the collection of drag targets as arguments.\n     */\n    set dragTargetId(fn) {\n        if (isDevMode && typeof fn !== 'function') {\n            throw new Error(`dragTargetId must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._dragTargetId = fn;\n    }\n    get dragTargetId() {\n        return this._dragTargetId;\n    }\n    /**\n     * Defines a callback function which returns custom data passed to the DropTarget events.\n     * It exposes the current DragTarget HTML element, its `dragTargetId` and its index in the collection of drag targets as arguments.\n     */\n    set dragData(fn) {\n        if (isDevMode && typeof fn !== 'function') {\n            throw new Error(`dragData must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._dragData = fn;\n    }\n    get dragData() {\n        return this._dragData;\n    }\n    /**\n     * If set to true, the dragging of DragTargets within the container will be disabled.\n     *\n     * @default false\n     */\n    set dragDisabled(value) {\n        this._dragDisabled = value;\n        if (value) {\n            this.clearPreviousTargets();\n            this.unsubscribe();\n            if (isPresent(this.hintElem)) {\n                this.destroyHint();\n            }\n        }\n        else {\n            if (isPresent(this.wrapper) || isPresent(this.currentDragTarget)) {\n                this.subscribe();\n            }\n            this.initializeDragTargets();\n        }\n    }\n    get dragDisabled() {\n        return this._dragDisabled;\n    }\n    /**\n     * Used for notifying the DragTargetContainer that its content has changed.\n     */\n    notify() {\n        this.cdr.detectChanges();\n        this.initializeDragTargets();\n    }\n    get allDragTargets() {\n        return this.queryHost(this.dragTargetFilter);\n    }\n    get dragHandles() {\n        return this.isHandleSelectorValid ? this.queryHost(this.dragHandle) : null;\n    }\n    get hintTemplate() {\n        return isPresent(this.hint) && typeof this.hint === 'object' ? this.hint.hintTemplate : null;\n    }\n    ngAfterViewInit() {\n        const isTargetPresent = isPresent(this.wrapper) || isPresent(this.currentDragTarget);\n        if (!this.dragDisabled && isTargetPresent) {\n            this.subscribe();\n        }\n        !this.dragDisabled && this.initializeDragTargets();\n    }\n    onPointerDown(event) {\n        if (isPresent(this.dragHandles) && !this.isDragHandle(event.target)) {\n            return;\n        }\n        const action = getAction(event, this.currentDragTarget);\n        this.service.handleDragAndDrop(action);\n        this.subscribe();\n    }\n    onPointerMove(event) {\n        event.preventDefault();\n        const action = getAction(event, this.currentDragTarget);\n        this.service.handleDragAndDrop(action);\n    }\n    onPointerUp(event) {\n        event.preventDefault();\n        const action = getAction(event, this.currentDragTarget);\n        this.service.handleDragAndDrop(action);\n        this.ngZone.runOutsideAngular(() => {\n            this.subscribe();\n        });\n    }\n    handlePress(event) {\n        if (this.dragDelay > 0) {\n            this.dragTimeout = window.setTimeout(() => {\n                this.pressed = true;\n                this.emitZoneAwareEvent('onDragReady', event);\n            }, this.dragDelay);\n        }\n        else {\n            this.pressed = true;\n        }\n        const eventTarget = event.originalEvent.target;\n        this.currentDragTargetElement = closestBySelector(eventTarget, this.dragTargetFilter);\n        this.currentDragTarget.element = this.currentDragTargetElement;\n        this.service.dragIndex = this.getDragIndex();\n        this.scrollableParent = this.hintTemplate ? document.body : this.currentDragTargetElement ? getScrollableParent(this.currentDragTargetElement) : null;\n        this.emitZoneAwareEvent('onPress', event);\n    }\n    handleDragStart(event) {\n        if (!this.pressed) {\n            if (this.dragTimeout) {\n                window.clearTimeout(this.dragTimeout);\n                this.dragTimeout = null;\n            }\n            return;\n        }\n        isDragStartPrevented = this.emitZoneAwareEvent('onDragStart', event).isDefaultPrevented();\n        if (isDragStartPrevented) {\n            return;\n        }\n        this.position = this.positionsMap.has(this.currentDragTargetElement) ? this.positionsMap.get(this.currentDragTargetElement) : { x: 0, y: 0 };\n        if (this.hint) {\n            this.createHint();\n            if (this.mode === 'auto') {\n                this.renderer.setStyle(this.currentDragTargetElement, 'opacity', '0.7');\n            }\n        }\n        else {\n            this.initialPosition = { x: event.clientX - this.position.x, y: event.clientY - this.position.y };\n        }\n        this.dragStarted = this.threshold === 0;\n        this.service.dragTarget = this.currentDragTarget;\n        const targetIdArgs = { dragTarget: this.currentDragTargetElement, dragTargetIndex: this.service.dragIndex };\n        this.service.dragTargetId = this.dragTargetId(targetIdArgs);\n        const targetDataArgs = Object.assign({ dragTargetId: this.service.dragTargetId }, targetIdArgs);\n        this.service.dragData = this.dragData(targetDataArgs);\n    }\n    handleDrag(event) {\n        if (!this.pressed || isDragStartPrevented) {\n            return;\n        }\n        const elem = this.hint ? this.hintElem : this.currentDragTargetElement;\n        this.position = this.calculatePosition(elem, event);\n        const thresholdNotReached = Math.abs(this.position.x) < this.threshold && Math.abs(this.position.y) < this.threshold;\n        if (!this.dragStarted && thresholdNotReached) {\n            return;\n        }\n        if (!this.dragStarted && this.threshold > 0) {\n            this.dragStarted = true;\n        }\n        isDragPrevented = this.emitZoneAwareEvent('onDrag', event).isDefaultPrevented();\n        if (isDragPrevented) {\n            return;\n        }\n        if (this.mode === 'auto') {\n            this.performDrag();\n        }\n        else {\n            this.dragStarted = true;\n        }\n    }\n    handleRelease(event) {\n        if (this.dragStarted) {\n            this.positionsMap.set(this.currentDragTargetElement, this.position);\n        }\n        if (this.dragTimeout) {\n            clearTimeout(this.dragTimeout);\n            this.dragTimeout = null;\n            this.pressed = false;\n        }\n        this.emitZoneAwareEvent('onRelease', event);\n    }\n    handleDragEnd(event) {\n        if (!this.dragStarted) {\n            return;\n        }\n        if (this.mode === 'auto') {\n            const isDroppedOverParentTarget = isPresent(this.service.dropTarget) && !contains(this.service.dropTarget?.element, this.service.dragTarget?.element, true);\n            const elem = this.hint ? this.hintElem : this.currentDragTargetElement;\n            if (isDroppedOverParentTarget || this.service.dropTargets.length > 0 && isPresent(elem)) {\n                this.renderer.removeStyle(elem, 'transform');\n                setElementStyles(this.renderer, elem, {\n                    transition: dragTargetTransition\n                });\n                this.positionsMap.delete(this.currentDragTargetElement);\n            }\n        }\n        if (this.hint && isPresent(this.hintElem)) {\n            this.destroyHint();\n            if (this.mode === 'auto') {\n                this.renderer.removeStyle(this.currentDragTargetElement, 'opacity');\n            }\n        }\n        this.service.dragTarget = null;\n        this.service.dragIndex = null;\n        this.currentDragTarget.element = null;\n        this.emitZoneAwareEvent('onDragEnd', event);\n        if (isDragStartPrevented || isDragPrevented) {\n            return;\n        }\n        this.dragStarted = false;\n    }\n    get nativeElement() {\n        return this.wrapper.nativeElement;\n    }\n    get hintElem() {\n        return this.hintTemplate && isPresent(this.hintComponent) ? this.hintComponent.instance.element.nativeElement : this.defaultHint;\n    }\n    unsubscribe() {\n        if (this.pointerDownSubscription) {\n            this.pointerDownSubscription.unsubscribe();\n        }\n        if (this.pointerMoveSubscription) {\n            this.pointerMoveSubscription.unsubscribe();\n        }\n        if (this.pointerUpSubscription) {\n            this.pointerUpSubscription.unsubscribe();\n        }\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n    }\n    subscribe() {\n        this.ngZone.runOutsideAngular(() => {\n            this.unsubscribe();\n            if (!(isDocumentAvailable() && isPresent(this.wrapper))) {\n                return;\n            }\n            const element = this.nativeElement;\n            if (this.service.pressed) {\n                const pointerMoveStreams = allPointerMoveEvents.map((ev) => fromEvent(document, ev));\n                const pointerUpStreams = allPointerUpEvents.map((ev) => fromEvent(document, ev));\n                this.pointerMoveSubscription = merge(...pointerMoveStreams)\n                    .pipe(filter(() => this.dragTargetFilter !== ''))\n                    .subscribe(e => this.onPointerMove(e));\n                this.pointerUpSubscription = merge(...pointerUpStreams)\n                    .subscribe(e => this.onPointerUp(e));\n                if (isPresent(this.scrollableParent)) {\n                    this.scrollSubscription = fromEvent(this.scrollableParent, 'scroll')\n                        .subscribe(e => this.onPointerMove(e));\n                }\n            }\n            else {\n                const pointerDownStreams = allPointerDownEvents.map((ev) => fromEvent(element, ev));\n                this.pointerDownSubscription = merge(...pointerDownStreams)\n                    .pipe(filter(() => this.dragTargetFilter !== ''))\n                    .subscribe((e) => {\n                    const filterElement = closestBySelector(e.target, this.isHandleSelectorValid ? this.dragHandle : this.dragTargetFilter);\n                    if (filterElement) {\n                        this.onPointerDown(e);\n                    }\n                });\n            }\n        });\n    }\n    emitZoneAwareEvent(event, normalizedEvent) {\n        const targetIdArgs = { dragTarget: this.currentDragTargetElement, dragTargetIndex: this.service.dragIndex };\n        const eventProps = {\n            dragTarget: this.currentDragTargetElement,\n            dragEvent: normalizedEvent,\n            dragTargetIndex: this.service.dragIndex,\n            dragTargetId: this.dragTargetId(targetIdArgs)\n        };\n        if (this.hint && isPresent(this.hintElem)) {\n            eventProps.hintElement = this.hintElem;\n        }\n        let eventArgs;\n        switch (event) {\n            case 'onDragReady':\n                eventArgs = new DragTargetDragReadyEvent(eventProps);\n                break;\n            case 'onPress':\n                eventArgs = new DragTargetPressEvent(eventProps);\n                break;\n            case 'onDragStart':\n                eventArgs = new DragTargetDragStartEvent(eventProps);\n                break;\n            case 'onDrag':\n                eventArgs = new DragTargetDragEvent(eventProps);\n                break;\n            case 'onRelease':\n                eventArgs = new DragTargetReleaseEvent(eventProps);\n                break;\n            case 'onDragEnd':\n                eventArgs = new DragTargetDragEndEvent(eventProps);\n                break;\n            default:\n                break;\n        }\n        this.ngZone.run(() => {\n            this[event].emit(eventArgs);\n        });\n        return eventArgs;\n    }\n    createHint() {\n        if (!(isDocumentAvailable() && isPresent(this.wrapper))) {\n            return;\n        }\n        if (isPresent(this.hint) && typeof this.hint === 'object') {\n            if (isPresent(this.hint.hintTemplate)) {\n                this.createCustomHint();\n            }\n            else {\n                this.createDefaultHint();\n            }\n        }\n        else {\n            this.createDefaultHint();\n        }\n        this.currentDragTarget.hint = this.hintElem;\n        if (typeof this.hint === 'object' && isPresent(this.hint.appendTo)) {\n            this.hint.appendTo.element.nativeElement.appendChild(this.hintElem);\n        }\n        else {\n            document.body.appendChild(this.hintElem);\n        }\n    }\n    createDefaultHint() {\n        this.defaultHint = this.currentDragTargetElement.cloneNode(true);\n        if (typeof this.hint === 'object') {\n            if (isPresent(this.hint.hintClass)) {\n                const hintClasses = parseCSSClassNames(this.hint.hintClass);\n                hintClasses.forEach(className => this.renderer.addClass(this.defaultHint, className));\n            }\n        }\n    }\n    createCustomHint() {\n        if (isPresent(this.hint.appendTo)) {\n            this.hintComponent = this.hint.appendTo.createComponent(HintComponent);\n        }\n        else {\n            this.hintComponent = this.viewContainer.createComponent(HintComponent);\n        }\n        this.hintComponent.instance.template = this.hintTemplate;\n        this.hintComponent.instance.directive = this;\n        this.hintComponent.instance.targetIndex = this.service.dragIndex;\n        const targetDataArgs = { dragTarget: this.currentDragTargetElement, dragTargetId: this.service.dragTargetId, dragTargetIndex: this.service.dragIndex };\n        this.hintComponent.instance.contextData = this.dragData(targetDataArgs);\n        this.hintComponent.changeDetectorRef.detectChanges();\n    }\n    destroyHint() {\n        if (isPresent(this.hintTemplate)) {\n            this.hintComponent.destroy();\n            this.hintComponent.changeDetectorRef.detectChanges();\n            this.hintComponent = null;\n        }\n        else {\n            document.body.removeChild(this.defaultHint);\n            this.defaultHint = null;\n        }\n        this.currentDragTarget.hint = null;\n    }\n    getDragIndex() {\n        return this.allDragTargets.indexOf(this.currentDragTargetElement);\n    }\n    initializeDragTargets() {\n        if (!isPresent(this.allDragTargets)) {\n            if (this.previousDragTargets.length > 0) {\n                this.clearPreviousTargets();\n            }\n            return;\n        }\n        this.allDragTargets.forEach(dragTargetEl => {\n            const isDragTargetInitialized = this.service.dragTargets.find(dt => dt.element === dragTargetEl);\n            if (!isDragTargetInitialized) {\n                this.service.dragTargets.push({\n                    element: dragTargetEl,\n                    hint: null,\n                    onPress: this.handlePress.bind(this),\n                    onRelease: this.handleRelease.bind(this),\n                    onDragStart: this.handleDragStart.bind(this),\n                    onDrag: this.handleDrag.bind(this),\n                    onDragEnd: this.handleDragEnd.bind(this)\n                });\n            }\n        });\n        if (this.previousDragTargets.length > 0) {\n            const dragTargetsToRemove = this.previousDragTargets.filter(dt => !this.allDragTargets.includes(dt));\n            dragTargetsToRemove.forEach(dragTarget => {\n                const idx = this.service.dragTargets.findIndex(serviceDragTarget => serviceDragTarget.element === dragTarget);\n                if (idx > -1) {\n                    this.service.dragTargets.splice(idx, 1);\n                }\n            });\n        }\n        this.previousDragTargets = this.allDragTargets;\n        this.currentDragTarget = {\n            element: null,\n            hint: null,\n            onPress: this.handlePress.bind(this),\n            onRelease: this.handleRelease.bind(this),\n            onDragStart: this.handleDragStart.bind(this),\n            onDrag: this.handleDrag.bind(this),\n            onDragEnd: this.handleDragEnd.bind(this)\n        };\n        this.setCursorStyle();\n    }\n    isDragHandle(el) {\n        return this.dragHandles.some(dh => contains(dh, el, true));\n    }\n    get isHandleSelectorValid() {\n        return isPresent(this.dragHandle) && this.dragHandle !== '';\n    }\n    setCursorStyle() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        if (isPresent(this.dragHandle) && this.dragHandle !== '') {\n            if (isPresent(this.dragHandles) && this.dragHandles.length > 0) {\n                this.dragHandles.forEach(handle => {\n                    this.renderer.setStyle(handle, 'cursor', 'move');\n                });\n            }\n        }\n        else {\n            this.allDragTargets.forEach(target => {\n                this.renderer.setStyle(target, 'cursor', 'move');\n            });\n        }\n    }\n    queryHost(selector) {\n        if (isPresent(selector) && selector !== \"\") {\n            return Array.from(this.nativeElement.querySelectorAll(selector));\n        }\n    }\n    clearPreviousTargets() {\n        this.previousDragTargets.forEach(dragTarget => {\n            const idx = this.service.dragTargets.findIndex(serviceDragTarget => serviceDragTarget.element === dragTarget);\n            if (idx > -1) {\n                this.service.dragTargets.splice(idx, 1);\n            }\n        });\n        this.previousDragTargets = [];\n    }\n    performDrag() {\n        const elem = this.hint ? this.hintElem : this.currentDragTargetElement;\n        if (elem) {\n            const styles = this.getStylesPerElement(elem);\n            setElementStyles(this.renderer, elem, styles);\n        }\n    }\n    calculatePosition(element, event) {\n        let position = null;\n        if (element === this.hintElem) {\n            position = { x: event.clientX, y: event.clientY };\n        }\n        else {\n            position = { x: event.clientX - this.initialPosition.x + event.scrollX, y: event.clientY - this.initialPosition.y + event.scrollY };\n        }\n        return position;\n    }\n    getStylesPerElement(element) {\n        if (element === this.hintElem) {\n            const hintCoordinates = { x: this.position.x - this.initialPosition.x, y: this.position.y - this.initialPosition.y };\n            return {\n                top: `${hintCoordinates.y}px`,\n                left: `${hintCoordinates.x}px`,\n                transition: 'none',\n                position: 'absolute',\n                zIndex: 1999\n            };\n        }\n        else {\n            const transform = `translate(${this.position.x}px, ${this.position.y}px)`;\n            return {\n                transform: transform,\n                transition: 'none'\n            };\n        }\n    }\n}\nDragTargetContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragTargetContainerDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }, { token: DragStateService }, { token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nDragTargetContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DragTargetContainerDirective, selector: \"[kendoDragTargetContainer]\", inputs: { hint: \"hint\", dragTargetFilter: \"dragTargetFilter\", dragHandle: \"dragHandle\", dragDelay: \"dragDelay\", threshold: \"threshold\", dragTargetId: \"dragTargetId\", dragData: \"dragData\", dragDisabled: \"dragDisabled\", mode: \"mode\" }, outputs: { onDragReady: \"onDragReady\", onPress: \"onPress\", onDragStart: \"onDragStart\", onDrag: \"onDrag\", onRelease: \"onRelease\", onDragEnd: \"onDragEnd\" }, exportAs: [\"kendoDragTargetContainer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragTargetContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDragTargetContainer]',\n                    exportAs: 'kendoDragTargetContainer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }, { type: DragStateService }, { type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { hint: [{\n                type: Input\n            }], dragTargetFilter: [{\n                type: Input\n            }], dragHandle: [{\n                type: Input\n            }], dragDelay: [{\n                type: Input\n            }], threshold: [{\n                type: Input\n            }], dragTargetId: [{\n                type: Input\n            }], dragData: [{\n                type: Input\n            }], dragDisabled: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], onDragReady: [{\n                type: Output\n            }], onPress: [{\n                type: Output\n            }], onDragStart: [{\n                type: Output\n            }], onDrag: [{\n                type: Output\n            }], onRelease: [{\n                type: Output\n            }], onDragEnd: [{\n                type: Output\n            }] } });\n\n/**\n * Represents the [Kendo UI DropTargetContainer directive for Angular]({% slug api_utils_droptargetcontainerdirective %}).\n * Used to configure multiple elements as drop targets.\n *\n * @example\n * ```ts-no-run\n * <div kendoDropTargetContainer dropTargetFilter=\".my-droptarget\">\n *    <div class=\"my-droptarget\">foo</div>\n * </div>\n * ```\n */\nclass DropTargetContainerDirective {\n    constructor(service, element, ngZone, cdr) {\n        this.service = service;\n        this.element = element;\n        this.ngZone = ngZone;\n        this.cdr = cdr;\n        /**\n         * Fires when a DragTarget element enters the DropTarget.\n         */\n        this.onDragEnter = new EventEmitter();\n        /**\n         * Fires when a DragTarget element is being dragged over the DropTarget.\n         */\n        this.onDragOver = new EventEmitter();\n        /**\n         * Fires when a DragTarget element leaves the DropTarget.\n         */\n        this.onDragLeave = new EventEmitter();\n        /**\n         * Fires when a DragTarget element is dropped over the DropTarget.\n         */\n        this.onDrop = new EventEmitter();\n        this.currentDropTarget = null;\n        this.currentDropTargetElement = null;\n        this.previousDropTargets = [];\n        this._dropTargetFilter = null;\n        this._dropDisabled = false;\n        validatePackage(packageMetadata);\n    }\n    /**\n     * Specifies a selector for elements within a container which will be configured as drop targets\n     * ([see example]({% slug drop_target_container %})). The possible values include any\n     * DOM `selector`.\n     */\n    set dropTargetFilter(value) {\n        this._dropTargetFilter = value;\n        if (!this.dropDisabled) {\n            this.initializeDropTargets();\n        }\n    }\n    get dropTargetFilter() {\n        return this._dropTargetFilter;\n    }\n    /**\n     * Specifies whether the Drop Targets within the container will emit the corresponding events upon interaction with a Drag Target.\n     */\n    set dropDisabled(value) {\n        this._dropDisabled = value;\n        if (value) {\n            this.clearPreviousTargets();\n        }\n        else {\n            this.initializeDropTargets();\n        }\n    }\n    get dropDisabled() {\n        return this._dropDisabled;\n    }\n    /**\n     * Used for notifying the DropTargetContainer that its content has changed.\n     */\n    notify() {\n        this.cdr.detectChanges();\n        this.initializeDropTargets();\n    }\n    get nativeElement() {\n        return this.element.nativeElement;\n    }\n    ngAfterViewInit() {\n        !this.dropDisabled && this.initializeDropTargets();\n    }\n    get allDropTargets() {\n        if (isPresent(this.dropTargetFilter) && this.dropTargetFilter !== '') {\n            return Array.from(this.nativeElement.querySelectorAll(this.dropTargetFilter));\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleDragEnter(event) {\n        if (!this.service.dragTarget) {\n            return;\n        }\n        const eventTarget = event.originalEvent.target;\n        this.currentDropTargetElement = intersect(eventTarget, this.allDropTargets);\n        this.currentDropTarget = this.service.dropTargets.find(dt => dt.element === this.currentDropTargetElement);\n        this.service.dropTarget = this.currentDropTarget;\n        this.service.dropIndex = this.getDropIndex();\n        this.emitZoneAwareEvent('onDragEnter', event);\n    }\n    /**\n     * @hidden\n     */\n    handleDragLeave(event) {\n        const containsEventTarget = isPresent(this.service.dropTarget) && contains(this.service.dropTarget?.element, event.originalEvent.target, false);\n        if (containsEventTarget) {\n            return;\n        }\n        this.service.dropTarget = null;\n        if (!this.service.dragTarget) {\n            return;\n        }\n        this.emitZoneAwareEvent('onDragLeave', event);\n    }\n    /**\n     * @hidden\n     */\n    handleDragOver(event) {\n        if (!this.service.dragTarget) {\n            return;\n        }\n        this.emitZoneAwareEvent('onDragOver', event);\n    }\n    /**\n     * @hidden\n     */\n    handleDrop(event) {\n        if (!this.service.dragTarget) {\n            return;\n        }\n        this.emitZoneAwareEvent('onDrop', event);\n        this.currentDropTarget = null;\n        this.currentDropTargetElement = null;\n        this.service.dropIndex = null;\n    }\n    initializeDropTargets() {\n        if (!isPresent(this.allDropTargets)) {\n            if (this.previousDropTargets.length > 0) {\n                this.clearPreviousTargets();\n            }\n            return;\n        }\n        this.allDropTargets.forEach(dropTargetEl => {\n            const isDropTargetInitialized = this.service.dropTargets.find(dt => dt.element === dropTargetEl);\n            if (!isDropTargetInitialized) {\n                this.service.dropTargets.push({\n                    element: dropTargetEl,\n                    onDragEnter: this.handleDragEnter.bind(this),\n                    onDragLeave: this.handleDragLeave.bind(this),\n                    onDragOver: this.handleDragOver.bind(this),\n                    onDrop: this.handleDrop.bind(this)\n                });\n            }\n        });\n        if (this.previousDropTargets.length > 0) {\n            const dropTargetsToRemove = this.previousDropTargets.filter(dt => !this.allDropTargets.includes(dt));\n            dropTargetsToRemove.forEach(dropTarget => {\n                const idx = this.service.dropTargets.findIndex(serviceDropTarget => serviceDropTarget.element === dropTarget);\n                if (idx > -1) {\n                    this.service.dropTargets.splice(idx, 1);\n                }\n            });\n        }\n        this.previousDropTargets = this.allDropTargets;\n    }\n    emitZoneAwareEvent(event, normalizedEvent) {\n        const eventProps = {\n            dragTarget: this.service.dragTarget?.element,\n            dropTarget: this.currentDropTargetElement,\n            dragData: this.service.dragData,\n            dragEvent: normalizedEvent,\n            dropTargetIndex: this.service.dropIndex\n        };\n        if (isPresent(this.service.dragTarget?.hint)) {\n            eventProps.hintElement = this.service.dragTarget.hint;\n        }\n        const eventArgs = new DropTargetEvent(eventProps);\n        this.ngZone.run(() => {\n            this[event].emit(eventArgs);\n        });\n    }\n    getDropIndex() {\n        const allTargets = this.nativeElement.querySelectorAll(this.dropTargetFilter);\n        return Array.from(allTargets).indexOf(this.currentDropTargetElement);\n    }\n    clearPreviousTargets() {\n        this.previousDropTargets.forEach(dropTarget => {\n            const idx = this.service.dropTargets.findIndex(serviceDropTarget => serviceDropTarget.element === dropTarget);\n            if (idx > -1) {\n                this.service.dropTargets.splice(idx, 1);\n            }\n        });\n        this.previousDropTargets = [];\n    }\n}\nDropTargetContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropTargetContainerDirective, deps: [{ token: DragStateService }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nDropTargetContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: DropTargetContainerDirective, selector: \"[kendoDropTargetContainer]\", inputs: { dropTargetFilter: \"dropTargetFilter\", dropDisabled: \"dropDisabled\" }, outputs: { onDragEnter: \"onDragEnter\", onDragOver: \"onDragOver\", onDragLeave: \"onDragLeave\", onDrop: \"onDrop\" }, exportAs: [\"kendoDropTargetContainer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DropTargetContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoDropTargetContainer]',\n                    exportAs: 'kendoDropTargetContainer'\n                }]\n        }], ctorParameters: function () { return [{ type: DragStateService }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { dropTargetFilter: [{\n                type: Input\n            }], dropDisabled: [{\n                type: Input\n            }], onDragEnter: [{\n                type: Output\n            }], onDragOver: [{\n                type: Output\n            }], onDragLeave: [{\n                type: Output\n            }], onDrop: [{\n                type: Output\n            }] } });\n\nconst EXPORTS = [\n    DragTargetDirective,\n    DragHandleDirective,\n    DropTargetDirective,\n    DragTargetContainerDirective,\n    DropTargetContainerDirective,\n    HintComponent\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Drag and Drop directives.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the DragAndDrop module\n * import { DragAndDropModule } from '@progress/kendo-angular-utils';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, DragAndDropModule], // import DragAndDropModule module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass DragAndDropModule {\n}\nDragAndDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragAndDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragAndDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragAndDropModule, declarations: [DragTargetDirective,\n        DragHandleDirective,\n        DropTargetDirective,\n        DragTargetContainerDirective,\n        DropTargetContainerDirective,\n        HintComponent], imports: [CommonModule], exports: [DragTargetDirective,\n        DragHandleDirective,\n        DropTargetDirective,\n        DragTargetContainerDirective,\n        DropTargetContainerDirective,\n        HintComponent] });\nDragAndDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragAndDropModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: DragAndDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [...EXPORTS],\n                    exports: [...EXPORTS],\n                    imports: [CommonModule],\n                    entryComponents: [HintComponent]\n                }]\n        }] });\n\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the Utils components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Utils module\n * import { UtilsModule } from '@progress/kendo-angular-utils';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, UtilsModule], // import Utils module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass UtilsModule {\n}\nUtilsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: UtilsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUtilsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: UtilsModule, exports: [DragAndDropModule] });\nUtilsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: UtilsModule, imports: [DragAndDropModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: UtilsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [DragAndDropModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DragAndDropModule, DragHandleDirective, DragTargetContainerDirective, DragTargetDirective, DragTargetDragEndEvent, DragTargetDragEvent, DragTargetDragReadyEvent, DragTargetDragStartEvent, DragTargetPressEvent, DragTargetReleaseEvent, DropTargetContainerDirective, DropTargetDirective, DropTargetEvent, HintComponent, UtilsModule };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,eAAe;AAChJ,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,mBAAmB,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,kCAAkC;AACvG,SAASC,gBAAgB,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,kBAAkB,QAAQ,gCAAgC;AACpH,SAASC,SAAS,EAAEC,KAAK,QAAQ,MAAM;AACvC,SAASC,MAAM,QAAQ,gBAAgB;;AAEvC;AACA;AACA;AAFA,SAAAC,sCAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAsBuGzB,EAAE,CAAA2B,kBAAA,EAkPnF,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA,YAAAA,CAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;EAAA;IAAAC,SAAA,EAAAH,EAAA;IAAAI,KAAA,EAAAH,EAAA;IAAAI,IAAA,EAAAH;EAAA;AAAA;AArQvB,MAAMI,eAAe,GAAG;EACpBC,IAAI,EAAE,+BAA+B;EACrCC,WAAW,EAAE,sBAAsB;EACnCC,YAAY,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;EACnDC,WAAW,EAAE,UAAU;EACvBC,OAAO,EAAE,QAAQ;EACjBC,gBAAgB,EAAE;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,CAAC;EACtBC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAG,MAAM;EAC7B;AACJ;AACAH,mBAAmB,CAACI,IAAI,YAAAC,4BAAAC,CAAA;EAAA,YAAAA,CAAA,IAAyFN,mBAAmB,EAA7B1C,EAAE,CAAAiD,iBAAA,CAA6CjD,EAAE,CAACkD,UAAU;AAAA,CAA4C;AAC/MR,mBAAmB,CAACS,IAAI,kBAD+EnD,EAAE,CAAAoD,iBAAA;EAAAC,IAAA,EACJX,mBAAmB;EAAAY,SAAA;EAAAC,QAAA;EAAAC,YAAA,WAAAC,iCAAAhC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MADjBzB,EAAE,CAAA0D,WAAA,WAAAhC,GAAA,CAAAmB,WAAA;IAAA;EAAA;EAAAc,QAAA;AAAA,EAC4J;AACrQ;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAFuG5D,EAAE,CAAA6D,iBAAA,CAEbnB,mBAAmB,EAAc,CAAC;IAClHW,IAAI,EAAEpD,SAAS;IACf6D,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,mBAAmB;MAC7BJ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEN,IAAI,EAAErD,EAAE,CAACkD;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEL,WAAW,EAAE,CAAC;MAC/FQ,IAAI,EAAEnD,WAAW;MACjB4D,IAAI,EAAE,CAAC,cAAc;IACzB,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAME,gBAAgB,CAAC;EACnBrB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACsB,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACtD,UAAU,GAAG,IAAI;IACtB,IAAI,CAACuD,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,mBAAmB,GAAG;MAAEC,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC;IAC/D,IAAI,CAACC,mBAAmB,GAAG;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACzC,IAAI,CAACC,YAAY,GAAG;MAAEF,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAClC,IAAI,CAACE,mBAAmB,GAAG;MAAEH,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACzC,IAAI,CAACG,YAAY,GAAG;MAAEJ,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAClC,IAAI,CAACI,MAAM,GAAG;MAAEL,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC5B,IAAI,CAACK,UAAU,GAAG;MAAEN,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAChC,IAAI,CAACM,QAAQ,GAAG;MAAEP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC9B,IAAI,CAACO,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB;EACAC,iBAAiBA,CAACC,MAAM,EAAE;IACtB,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB9E,mBAAmB,CAAC,IAAI,CAAC+E,KAAK,EAAEF,MAAM,EAAE,IAAI,CAACJ,SAAS,CAAC;EAC3D;EACAO,UAAUA,CAACzB,OAAO,EAAE;IAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACA0B,YAAYA,CAACxB,WAAW,EAAE;IACtB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAIA,WAAW,EAAE;MACb,MAAMC,gBAAgB,GAAGzD,mBAAmB,CAACiF,QAAQ,CAACC,gBAAgB,CAAC,IAAI,CAAClB,YAAY,CAACF,CAAC,EAAE,IAAI,CAACE,YAAY,CAACD,CAAC,CAAC,CAAC;MACjHoB,MAAM,CAACC,aAAa,CAAC,IAAI,CAACX,cAAc,CAAC;MACzC,IAAI,CAACA,cAAc,GAAGU,MAAM,CAACE,WAAW,CAAC,MAAM;QAC3CpF,UAAU,CAACwD,gBAAgB,EAAE;UAAEK,CAAC,EAAE,IAAI,CAACO,QAAQ,CAACP,CAAC;UAAEC,CAAC,EAAE,IAAI,CAACM,QAAQ,CAACN;QAAE,CAAC,CAAC;MAC5E,CAAC,EAAE,EAAE,CAAC;IACV,CAAC,MACI;MACD,IAAI,IAAI,CAACU,cAAc,EAAE;QACrBU,MAAM,CAACC,aAAa,CAAC,IAAI,CAACX,cAAc,CAAC;QACzC,IAAI,CAACA,cAAc,GAAG,IAAI;MAC9B;IACJ;EACJ;EACAa,WAAWA,CAACjB,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EACAkB,SAASA,CAACpB,MAAM,EAAE;IACd,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACAqB,eAAeA,CAACxB,YAAY,EAAE;IAC1B,IAAI,CAACA,YAAY,GAAGA,YAAY;EACpC;EACAyB,aAAaA,CAACrB,UAAU,EAAE;IACtB,IAAI,CAACA,UAAU,GAAGA,UAAU;EAChC;EACAsB,sBAAsBA,CAAC7B,mBAAmB,EAAE;IACxC,IAAI,CAACA,mBAAmB,GAAGA,mBAAmB;EAClD;EACA8B,eAAeA,CAACzB,YAAY,EAAE;IAC1B,IAAI,CAACA,YAAY,GAAGA,YAAY;EACpC;EACA0B,sBAAsBA,CAAC3B,mBAAmB,EAAE;IACxC,IAAI,CAACA,mBAAmB,GAAGA,mBAAmB;EAClD;EACAY,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAG;MACTe,IAAI,EAAE,IAAI,CAAC3C,UAAU;MACrB4C,IAAI,EAAE,IAAI,CAAC3C,UAAU;MACrB4C,KAAK,EAAE,IAAI,CAAC3C,WAAW;MACvB4C,KAAK,EAAE,IAAI,CAAC3C,WAAW;MACvBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BtD,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BuD,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7CG,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7CG,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7CC,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,QAAQ,EAAE,IAAI,CAACA;IACnB,CAAC;EACL;EACAK,YAAYA,CAAA,EAAG;IACX,IAAI,CAACF,SAAS,GAAG;MACbyB,gBAAgB,EAAE,IAAI,CAACX,WAAW,CAACY,IAAI,CAAC,IAAI,CAAC;MAC7CC,cAAc,EAAE,IAAI,CAACZ,SAAS,CAACW,IAAI,CAAC,IAAI,CAAC;MACzCE,oBAAoB,EAAE,IAAI,CAACZ,eAAe,CAACU,IAAI,CAAC,IAAI,CAAC;MACrDG,kBAAkB,EAAE,IAAI,CAACZ,aAAa,CAACS,IAAI,CAAC,IAAI,CAAC;MACjDI,2BAA2B,EAAE,IAAI,CAACZ,sBAAsB,CAACQ,IAAI,CAAC,IAAI,CAAC;MACnEK,oBAAoB,EAAE,IAAI,CAACZ,eAAe,CAACO,IAAI,CAAC,IAAI,CAAC;MACrDM,2BAA2B,EAAE,IAAI,CAACZ,sBAAsB,CAACM,IAAI,CAAC,IAAI,CAAC;MACnEO,iBAAiB,EAAE,IAAI,CAAC1B,UAAU,CAACmB,IAAI,CAAC,IAAI,CAAC;MAC7CQ,mBAAmB,EAAE,IAAI,CAAC1B,YAAY,CAACkB,IAAI,CAAC,IAAI;IACpD,CAAC;EACL;EACAS,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAAClC,cAAc,EAAE;MACrBU,MAAM,CAACC,aAAa,CAAC,IAAI,CAACX,cAAc,CAAC;MACzC,IAAI,CAACA,cAAc,GAAG,IAAI;IAC9B;EACJ;AACJ;AACAxB,gBAAgB,CAAClB,IAAI,YAAA6E,yBAAA3E,CAAA;EAAA,YAAAA,CAAA,IAAyFgB,gBAAgB;AAAA,CAAoD;AAClLA,gBAAgB,CAAC4D,KAAK,kBA/HiF5H,EAAE,CAAA6H,kBAAA;EAAAC,KAAA,EA+HS9D,gBAAgB;EAAA+D,OAAA,EAAhB/D,gBAAgB,CAAAlB,IAAA;EAAAkF,UAAA,EAAc;AAAM,EAAG;AACzJ;EAAA,QAAApE,SAAA,oBAAAA,SAAA,KAhIuG5D,EAAE,CAAA6D,iBAAA,CAgIbG,gBAAgB,EAAc,CAAC;IAC/GX,IAAI,EAAElD,UAAU;IAChB2D,IAAI,EAAE,CAAC;MACCkE,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC;AAAA;AAEtD,SAASC,cAAcA,CAACC,SAAS,EAAE;EAC/B,OAAOA,SAAS,CAACC,QAAQ,KAAK,CAAC;AACnC;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;EACpC,OAAO;IACHD,KAAK,EAAEA,KAAK;IACZE,OAAO,EAAED;EACb,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,MAAME,oBAAoB,GAAG,2BAA2B;AACxD;AACA;AACA;AACA,MAAMC,SAAS,GAAIC,KAAK,IAAKA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS;AAClE;AACA;AACA;AACA,SAASC,iBAAiBA,CAAChG,OAAO,EAAEmB,QAAQ,EAAE;EAC1C,IAAInB,OAAO,CAACiG,OAAO,EAAE;IACjB,OAAOjG,OAAO,CAACiG,OAAO,CAAC9E,QAAQ,CAAC;EACpC;EACA,MAAM+E,OAAO,GAAGC,OAAO,CAACC,SAAS,CAACF,OAAO,GACrC,CAACG,EAAE,EAAEC,GAAG,KAAKD,EAAE,CAACH,OAAO,CAACI,GAAG,CAAC,GAC1B,CAACD,EAAE,EAAEC,GAAG,KAAKD,EAAE,CAACE,iBAAiB,CAACD,GAAG,CAAC;EAC5C,IAAIE,IAAI,GAAGxG,OAAO;EAClB,OAAOwG,IAAI,IAAI,CAACnB,cAAc,CAACmB,IAAI,CAAC,EAAE;IAClC,IAAIN,OAAO,CAACM,IAAI,EAAErF,QAAQ,CAAC,EAAE;MACzB,OAAOqF,IAAI;IACf;IACAA,IAAI,GAAGA,IAAI,CAACC,UAAU;EAC1B;AACJ;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAGA,CAAC1G,OAAO,EAAE2G,UAAU,KAAK;EACvC,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,MAAM,GAAG,IAAI;EACjBF,UAAU,CAACG,OAAO,CAAEC,SAAS,IAAK;IAC9B,IAAIA,SAAS,IAAI/G,OAAO,EAAE;MACtB,MAAMgH,MAAM,GAAGC,QAAQ,CAACjH,OAAO,EAAE+G,SAAS,CAAC;MAC3C,IAAIC,MAAM,GAAGJ,GAAG,EAAE;QACdA,GAAG,GAAGI,MAAM;QACZH,MAAM,GAAGE,SAAS;MACtB;IACJ;EACJ,CAAC,CAAC;EACF,OAAOF,MAAM;AACjB,CAAC;AACD,MAAMI,QAAQ,GAAGA,CAACjH,OAAO,EAAEkH,MAAM,KAAK;EAClC,MAAMC,WAAW,GAAGnH,OAAO,CAACoH,qBAAqB,CAAC,CAAC;EACnD,MAAMC,UAAU,GAAGH,MAAM,CAACE,qBAAqB,CAAC,CAAC;EACjD,MAAME,GAAG,GAAGC,IAAI,CAACX,GAAG,CAACS,UAAU,CAACC,GAAG,EAAEH,WAAW,CAACG,GAAG,CAAC;EACrD,MAAME,IAAI,GAAGD,IAAI,CAACX,GAAG,CAACS,UAAU,CAACG,IAAI,EAAEL,WAAW,CAACK,IAAI,CAAC;EACxD,MAAMC,KAAK,GAAGF,IAAI,CAACG,GAAG,CAACL,UAAU,CAACG,IAAI,GAAGH,UAAU,CAACM,KAAK,EAAER,WAAW,CAACK,IAAI,GAAGL,WAAW,CAACQ,KAAK,CAAC;EAChG,MAAMC,MAAM,GAAGL,IAAI,CAACG,GAAG,CAACL,UAAU,CAACC,GAAG,GAAGD,UAAU,CAACQ,MAAM,EAAEV,WAAW,CAACG,GAAG,GAAGH,WAAW,CAACU,MAAM,CAAC;EACjG,MAAMF,KAAK,GAAGF,KAAK,GAAGD,IAAI;EAC1B,MAAMK,MAAM,GAAGD,MAAM,GAAGN,GAAG;EAC3B,IAAIE,IAAI,GAAGC,KAAK,IAAIH,GAAG,GAAGM,MAAM,EAAE;IAC9B,MAAME,UAAU,GAAGT,UAAU,CAACM,KAAK,GAAGN,UAAU,CAACQ,MAAM;IACvD,MAAME,SAAS,GAAGZ,WAAW,CAACQ,KAAK,GAAGR,WAAW,CAACU,MAAM;IACxD,MAAMG,gBAAgB,GAAGL,KAAK,GAAGE,MAAM;IACvC,MAAMI,iBAAiB,GAAGD,gBAAgB,IAAIF,UAAU,GAAGC,SAAS,GAAGC,gBAAgB,CAAC;IACxF,OAAOE,MAAM,CAACD,iBAAiB,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C;EACA,OAAO,CAAC;AACZ,CAAC;AACD;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,KAAK;EACjD,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;EACjCC,KAAK,CAAC1B,OAAO,CAAC6B,CAAC,IAAI;IACfN,QAAQ,CAACO,QAAQ,CAACN,IAAI,EAAEK,CAAC,EAAEJ,MAAM,CAACI,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA,MAAME,oBAAoB,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,YAAY,CAAC;AACvE;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC;AACtE;AACA;AACA;AACA,MAAMC,kBAAkB,GAAG,CAAC,WAAW,EAAE,eAAe,EAAE,SAAS,EAAE,aAAa,EAAE,UAAU,EAAE,aAAa,CAAC;;AAE9G;AACA;AACA;AACA,MAAMC,aAAa,CAAC;EAChBjJ,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACiJ,aAAa,GAAG,MAAM;EAC/B;AACJ;AACAD,aAAa,CAAC9I,IAAI,YAAAgJ,sBAAA9I,CAAA;EAAA,YAAAA,CAAA,IAAyF4I,aAAa,EA/OjB5L,EAAE,CAAAiD,iBAAA,CA+OiCjD,EAAE,CAACkD,UAAU;AAAA,CAA4C;AACnM0I,aAAa,CAACG,IAAI,kBAhPqF/L,EAAE,CAAAgM,iBAAA;EAAA3I,IAAA,EAgPVuI,aAAa;EAAAtI,SAAA;EAAAC,QAAA;EAAAC,YAAA,WAAAyI,2BAAAxK,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAhPLzB,EAAE,CAAA0D,WAAA,mBAAAhC,GAAA,CAAAmK,aAAA;IAAA;EAAA;EAAAK,MAAA;IAAAC,QAAA;IAAAC,SAAA;IAAAC,WAAA;IAAAC,WAAA;EAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAN,QAAA,WAAAO,uBAAAjL,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFzB,EAAE,CAAA2M,UAAA,IAAAnL,qCAAA,yBAkPnF,CAAC;IAAA;IAAA,IAAAC,EAAA;MAlPgFzB,EAAE,CAAA4M,UAAA,qBAAAlL,GAAA,CAAAyK,QAiPvD,CAAC,4BAjPoDnM,EAAE,CAAA6M,eAAA,IAAAjL,GAAA,EAAAF,GAAA,CAAA0K,SAAA,EAAA1K,GAAA,CAAA2K,WAAA,EAAA3K,GAAA,CAAA4K,WAAA,CAiPvD,CAAC;IAAA;EAAA;EAAAQ,YAAA,GAEPnM,EAAE,CAACoM,gBAAgB;EAAAC,aAAA;AAAA,EAA+F;AAC9J;EAAA,QAAApJ,SAAA,oBAAAA,SAAA,KApPuG5D,EAAE,CAAA6D,iBAAA,CAoPb+H,aAAa,EAAc,CAAC;IAC5GvI,IAAI,EAAEjD,SAAS;IACf0D,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,gBAAgB;MAC1BoI,QAAQ,EAAG;AAC/B;AACA;AACA;IACgB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAErD,EAAE,CAACkD;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEiJ,QAAQ,EAAE,CAAC;MAC5F9I,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE+L,SAAS,EAAE,CAAC;MACZ/I,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEgM,WAAW,EAAE,CAAC;MACdhJ,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEiM,WAAW,EAAE,CAAC;MACdjJ,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEwL,aAAa,EAAE,CAAC;MAChBxI,IAAI,EAAEnD,WAAW;MACjB4D,IAAI,EAAE,CAAC,sBAAsB;IACjC,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAMmJ,oBAAoB,CAAC;EACvB;AACJ;AACA;EACItK,WAAWA,CAACmB,IAAI,EAAE;IACduH,MAAM,CAAC6B,MAAM,CAAC,IAAI,EAAEpJ,IAAI,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACI,IAAIqJ,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACC,SAAS;EACzB;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACpJ,UAAU;EAC1B;AACJ;;AAEA;AACA;AACA;AACA,MAAMqJ,wBAAwB,CAAC;EAC3B;AACJ;AACA;EACI3K,WAAWA,CAACmB,IAAI,EAAE;IACduH,MAAM,CAAC6B,MAAM,CAAC,IAAI,EAAEpJ,IAAI,CAAC;EAC7B;AACJ;;AAEA;AACA;AACA;AACA,MAAMyJ,wBAAwB,SAAStM,gBAAgB,CAAC;EACpD;AACJ;AACA;EACI0B,WAAWA,CAACmB,IAAI,EAAE;IACd,KAAK,CAAC,CAAC;IACPuH,MAAM,CAAC6B,MAAM,CAAC,IAAI,EAAEpJ,IAAI,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACI,IAAIqJ,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACC,SAAS;EACzB;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACpJ,UAAU;EAC1B;AACJ;;AAEA;AACA;AACA;AACA,MAAMuJ,sBAAsB,CAAC;EACzB;AACJ;AACA;EACI7K,WAAWA,CAACmB,IAAI,EAAE;IACduH,MAAM,CAAC6B,MAAM,CAAC,IAAI,EAAEpJ,IAAI,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACI,IAAIqJ,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACC,SAAS;EACzB;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACpJ,UAAU;EAC1B;AACJ;;AAEA;AACA;AACA;AACA,MAAMwJ,mBAAmB,SAASxM,gBAAgB,CAAC;EAC/C;AACJ;AACA;EACI0B,WAAWA,CAACmB,IAAI,EAAE;IACd,KAAK,CAAC,CAAC;IACPuH,MAAM,CAAC6B,MAAM,CAAC,IAAI,EAAEpJ,IAAI,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACI,IAAIqJ,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACC,SAAS;EACzB;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACpJ,UAAU;EAC1B;AACJ;;AAEA;AACA;AACA;AACA,MAAMyJ,sBAAsB,CAAC;EACzB;AACJ;AACA;EACI/K,WAAWA,CAACmB,IAAI,EAAE;IACduH,MAAM,CAAC6B,MAAM,CAAC,IAAI,EAAEpJ,IAAI,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACI,IAAIqJ,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACC,SAAS;EACzB;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACpJ,UAAU;EAC1B;AACJ;AAEA,IAAI0J,sBAAsB,GAAG,KAAK;AAClC,IAAIC,iBAAiB,GAAG,KAAK;AAC7B;AACA;AACA;AACA,MAAMC,mBAAmB,CAAC;EACtBlL,WAAWA,CAACC,OAAO,EAAEqI,QAAQ,EAAE6C,MAAM,EAAEC,OAAO,EAAEC,aAAa,EAAE;IAC3D,IAAI,CAACpL,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACqI,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC6C,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,IAAI,GAAG,KAAK;IACjB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAAClN,UAAU,GAAG,IAAI;IACtB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACmN,SAAS,GAAG,CAAC;IAClB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,IAAI,GAAG,MAAM;IAClB;AACR;AACA;IACQ,IAAI,CAACC,OAAO,GAAG,IAAI/N,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACgO,WAAW,GAAG,IAAIhO,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACiO,MAAM,GAAG,IAAIjO,YAAY,CAAC,CAAC;IAChC;AACR;AACA;IACQ,IAAI,CAACkO,WAAW,GAAG,IAAIlO,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACmO,SAAS,GAAG,IAAInO,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAACoO,SAAS,GAAG,IAAIpO,YAAY,CAAC,CAAC;IACnC,IAAI,CAAC2D,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC0K,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACxK,OAAO,GAAG,KAAK;IACpB,IAAI,CAACyK,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,eAAe,GAAG;MAAElK,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACrC,IAAI,CAACkK,QAAQ,GAAG;MAAEnK,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC9B,IAAI,CAACN,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACyK,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,SAAS,GAAG,MAAM,IAAI;IAC3BrO,eAAe,CAACsB,eAAe,CAAC;EACpC;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIgN,QAAQA,CAACC,EAAE,EAAE;IACb,IAAI7O,SAAS,IAAI,OAAO6O,EAAE,KAAK,UAAU,EAAE;MACvC,MAAM,IAAIC,KAAK,CAAE,6CAA4CC,IAAI,CAACC,SAAS,CAACH,EAAE,CAAE,GAAE,CAAC;IACvF;IACA,IAAI,CAACF,SAAS,GAAGE,EAAE;EACvB;EACA,IAAID,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACD,SAAS;EACzB;EACA,IAAIM,YAAYA,CAAA,EAAG;IACf,OAAO/G,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC,IAAI,OAAO,IAAI,CAACA,IAAI,KAAK,QAAQ,GAAG,IAAI,CAACA,IAAI,CAACuB,YAAY,GAAG,IAAI;EAChG;EACA,IAAIC,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAC7M,OAAO,CAAC6M,aAAa;EACrC;EACA,IAAIC,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACF,YAAY,IAAI/G,SAAS,CAAC,IAAI,CAACmG,aAAa,CAAC,GAAG,IAAI,CAACA,aAAa,CAACe,QAAQ,CAAC/M,OAAO,CAAC6M,aAAa,GAAG,IAAI,CAACR,WAAW;EACpI;EACAW,aAAaA,CAACvH,KAAK,EAAE;IACjB,IAAI,IAAI,CAACwH,WAAW,CAACC,MAAM,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC1H,KAAK,CAACyB,MAAM,CAAC,EAAE;MAC7D;IACJ;IACAzB,KAAK,CAAC2H,cAAc,CAAC,CAAC;IACtB,MAAMrK,MAAM,GAAGyC,SAAS,CAACC,KAAK,EAAE,IAAI,CAACpE,UAAU,CAAC;IAChD,IAAI,CAAC8J,OAAO,CAACrI,iBAAiB,CAACC,MAAM,CAAC;IACtC,IAAI,CAACoI,OAAO,CAAC/M,UAAU,GAAG,OAAO,IAAI,CAACA,UAAU,KAAK,QAAQ,GAAG,IAAI,CAACA,UAAU,CAACiP,OAAO,KAAK,KAAK,GAAG,IAAI,CAACjP,UAAU;IACnH,IAAI,CAAC+M,OAAO,CAACvJ,gBAAgB,GAAG,IAAI,CAAC0L,sBAAsB,CAAC,CAAC;IAC7D,IAAI,CAACnC,OAAO,CAACtJ,mBAAmB,GAAG,OAAO,IAAI,CAACzD,UAAU,KAAK,QAAQ,GAAG,IAAI,CAACA,UAAU,CAACmP,SAAS,GAAG;MAAEzL,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC;IACzI,IAAI,CAACyL,iBAAiB,CAAC,CAAC;EAC5B;EACAC,aAAaA,CAAChI,KAAK,EAAE;IACjBA,KAAK,CAAC2H,cAAc,CAAC,CAAC;IACtB,MAAMrK,MAAM,GAAGyC,SAAS,CAACC,KAAK,EAAE,IAAI,CAACpE,UAAU,CAAC;IAChD,IAAI,CAAC8J,OAAO,CAACrI,iBAAiB,CAACC,MAAM,CAAC;EAC1C;EACA2K,WAAWA,CAACjI,KAAK,EAAE;IACfA,KAAK,CAAC2H,cAAc,CAAC,CAAC;IACtB,MAAMrK,MAAM,GAAGyC,SAAS,CAACC,KAAK,EAAE,IAAI,CAACpE,UAAU,CAAC;IAChD,IAAI,CAAC8J,OAAO,CAACrI,iBAAiB,CAACC,MAAM,CAAC;IACtC,IAAI,CAACyK,iBAAiB,CAAC,CAAC;EAC5B;EACAG,QAAQA,CAAA,EAAG;IACP,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B;EACAC,kBAAkBA,CAAA,EAAG;IACjB,IAAIhI,SAAS,CAAC,IAAI,CAAC7F,OAAO,CAAC,IAAI6F,SAAS,CAAC,IAAI,CAACxE,UAAU,CAAC,EAAE;MACvD,IAAI,CAACmM,iBAAiB,CAAC,CAAC;MACxB,IAAI,CAAC,IAAI,CAACP,WAAW,CAACC,MAAM,EAAE;QAC1B,IAAI,CAAC7E,QAAQ,CAACO,QAAQ,CAAC,IAAI,CAACiE,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC;MAChE;IACJ;IACA,IAAI,CAAC1B,OAAO,CAAC5J,WAAW,CAACuM,IAAI,CAAC,IAAI,CAACzM,UAAU,CAAC;EAClD;EACAyD,WAAWA,CAAA,EAAG;IACV,IAAI,CAACiH,gBAAgB,CAACjF,OAAO,CAACiH,YAAY,IAAIA,YAAY,CAAC,CAAC,CAAC;EACjE;EACAC,WAAWA,CAACvI,KAAK,EAAE;IACf,IAAI,IAAI,CAAC8F,SAAS,GAAG,CAAC,EAAE;MACpB,IAAI,CAACW,WAAW,GAAG5I,MAAM,CAAC2K,UAAU,CAAC,MAAM;QACvC,IAAI,CAACxM,OAAO,GAAG,IAAI;QACnB,IAAI,CAACyM,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC;MACjD,CAAC,EAAE,IAAI,CAAC8F,SAAS,CAAC;IACtB,CAAC,MACI;MACD,IAAI,CAAC9J,OAAO,GAAG,IAAI;IACvB;IACA,IAAI,CAACG,gBAAgB,GAAG,IAAI,CAACP,UAAU,CAACrB,OAAO,GAAG7B,mBAAmB,CAAC,IAAI,CAACkD,UAAU,CAACrB,OAAO,CAAC,GAAG,IAAI;IACrG,IAAI,CAACkO,kBAAkB,CAAC,SAAS,EAAEzI,KAAK,CAAC;EAC7C;EACA0I,eAAeA,CAAC1I,KAAK,EAAE;IACnB,IAAI,CAAC,IAAI,CAAChE,OAAO,EAAE;MACf,IAAI,IAAI,CAACyK,WAAW,EAAE;QAClB5I,MAAM,CAAC8K,YAAY,CAAC,IAAI,CAAClC,WAAW,CAAC;QACrC,IAAI,CAACA,WAAW,GAAG,IAAI;MAC3B;MACA;IACJ;IACAnB,sBAAsB,GAAG,IAAI,CAACmD,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC,CAAC4I,kBAAkB,CAAC,CAAC;IAC3F,IAAItD,sBAAsB,EAAE;MACxB;IACJ;IACA,IAAI,IAAI,CAACM,IAAI,EAAE;MACX,IAAI,CAACiD,UAAU,CAAC,CAAC;MACjB,IAAI,IAAI,CAAC9C,IAAI,KAAK,MAAM,EAAE;QACtB,IAAI,CAACnD,QAAQ,CAACO,QAAQ,CAAC,IAAI,CAACiE,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC;MAChE;MACA,IAAI,CAACV,eAAe,GAAG;QAAElK,CAAC,EAAEwD,KAAK,CAAC8I,OAAO;QAAErM,CAAC,EAAEuD,KAAK,CAAC+I;MAAQ,CAAC;IACjE,CAAC,MACI;MACD,IAAI,CAACrC,eAAe,GAAG;QAAElK,CAAC,EAAEwD,KAAK,CAACgJ,OAAO,GAAG,IAAI,CAACrC,QAAQ,CAACnK,CAAC;QAAEC,CAAC,EAAEuD,KAAK,CAACiJ,OAAO,GAAG,IAAI,CAACtC,QAAQ,CAAClK;MAAE,CAAC;IACrG;IACA,IAAI,CAAC+J,WAAW,GAAG,IAAI,CAACX,SAAS,KAAK,CAAC;IACvC,IAAI,CAACH,OAAO,CAAC9J,UAAU,GAAG,IAAI,CAACA,UAAU;IACzC,IAAI,CAAC8J,OAAO,CAACwD,mBAAmB,GAAG,IAAI;IACvC,IAAI,CAACxD,OAAO,CAACoB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC;MAAElL,UAAU,EAAE,IAAI,CAACA,UAAU,CAACrB,OAAO;MAAE4O,YAAY,EAAE,IAAI,CAACC,kBAAkB;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC;EAChJ;EACAC,UAAUA,CAACtJ,KAAK,EAAE;IACd,IAAI,CAAC,IAAI,CAAChE,OAAO,IAAIsJ,sBAAsB,EAAE;MACzC;IACJ;IACA,MAAMzC,IAAI,GAAG,IAAI,CAAC+C,IAAI,GAAG,IAAI,CAACyB,QAAQ,GAAG,IAAI,CAACD,aAAa;IAC3D,IAAI,CAACT,QAAQ,GAAG,IAAI,CAAC4C,iBAAiB,CAAC1G,IAAI,EAAE7C,KAAK,CAAC;IACnD,MAAMwJ,mBAAmB,GAAG1H,IAAI,CAAC2H,GAAG,CAAC,IAAI,CAAC9C,QAAQ,CAACnK,CAAC,CAAC,GAAG,IAAI,CAACqJ,SAAS,IAAI/D,IAAI,CAAC2H,GAAG,CAAC,IAAI,CAAC9C,QAAQ,CAAClK,CAAC,CAAC,GAAG,IAAI,CAACoJ,SAAS;IACpH,IAAI,CAAC,IAAI,CAACW,WAAW,IAAIgD,mBAAmB,EAAE;MAC1C;IACJ;IACA,IAAI,CAAC,IAAI,CAAChD,WAAW,IAAI,IAAI,CAACX,SAAS,GAAG,CAAC,EAAE;MACzC,IAAI,CAACW,WAAW,GAAG,IAAI;IAC3B;IACAjB,iBAAiB,GAAG,IAAI,CAACkD,kBAAkB,CAAC,QAAQ,EAAEzI,KAAK,CAAC,CAAC4I,kBAAkB,CAAC,CAAC;IACjF,IAAIrD,iBAAiB,EAAE;MACnB;IACJ;IACA,IAAI,IAAI,CAACQ,IAAI,KAAK,MAAM,EAAE;MACtB,IAAI,CAAC2D,WAAW,CAAC,CAAC;IACtB,CAAC,MACI;MACD,IAAI,CAAClD,WAAW,GAAG,IAAI;IAC3B;EACJ;EACAmD,aAAaA,CAAC3J,KAAK,EAAE;IACjB,IAAI,IAAI,CAACyG,WAAW,EAAE;MAClBkC,YAAY,CAAC,IAAI,CAAClC,WAAW,CAAC;MAC9B,IAAI,CAACA,WAAW,GAAG,IAAI;MACvB,IAAI,CAACzK,OAAO,GAAG,KAAK;IACxB;IACA,IAAI,CAACyM,kBAAkB,CAAC,WAAW,EAAEzI,KAAK,CAAC;EAC/C;EACA4J,aAAaA,CAAC5J,KAAK,EAAE;IACjB,IAAI,IAAI,CAAC+F,IAAI,KAAK,MAAM,EAAE;MACtB,MAAM8D,yBAAyB,GAAGzJ,SAAS,CAAC,IAAI,CAACsF,OAAO,CAAC7J,UAAU,CAAC,IAAI,CAAChD,QAAQ,CAAC,IAAI,CAAC6M,OAAO,CAAC7J,UAAU,EAAEtB,OAAO,EAAE,IAAI,CAACmL,OAAO,CAAC9J,UAAU,EAAErB,OAAO,EAAE,IAAI,CAAC;MAC3J,MAAMsI,IAAI,GAAG,IAAI,CAAC+C,IAAI,GAAG,IAAI,CAACyB,QAAQ,GAAG,IAAI,CAACD,aAAa;MAC3D,IAAIyC,yBAAyB,IAAI,IAAI,CAACnE,OAAO,CAAC3J,WAAW,CAAC0L,MAAM,GAAG,CAAC,IAAIrH,SAAS,CAACyC,IAAI,CAAC,EAAE;QACrF,IAAI,CAACD,QAAQ,CAACkH,WAAW,CAACjH,IAAI,EAAE,WAAW,CAAC;QAC5CF,gBAAgB,CAAC,IAAI,CAACC,QAAQ,EAAEC,IAAI,EAAE;UAClCkH,UAAU,EAAE5J;QAChB,CAAC,CAAC;QACF,IAAI,CAACwG,QAAQ,GAAG;UAAEnK,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC;MAClC;IACJ;IACA,IAAI,IAAI,CAACmJ,IAAI,IAAIxF,SAAS,CAAC,IAAI,CAACiH,QAAQ,CAAC,EAAE;MACvC,IAAI,CAAC2C,WAAW,CAAC,CAAC;MAClB,IAAI,IAAI,CAACjE,IAAI,KAAK,MAAM,EAAE;QACtB,IAAI,CAACnD,QAAQ,CAACkH,WAAW,CAAC,IAAI,CAAC1C,aAAa,EAAE,SAAS,CAAC;MAC5D;IACJ;IACA,IAAI,CAAC1B,OAAO,CAAC9J,UAAU,GAAG,IAAI;IAC9B,IAAI,CAAC8J,OAAO,CAACwD,mBAAmB,GAAG,IAAI;IACvC,IAAI,CAAC,IAAI,CAAC1C,WAAW,IAAIlB,sBAAsB,IAAIC,iBAAiB,EAAE;MAClE;IACJ;IACA,IAAI,CAACkD,kBAAkB,CAAC,WAAW,EAAEzI,KAAK,CAAC;IAC3C,IAAI,CAACwG,WAAW,GAAG,KAAK;EAC5B;EACA2B,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACvM,UAAU,GAAG;MACdrB,OAAO,EAAE,IAAI,CAAC6M,aAAa;MAC3BxB,IAAI,EAAE,IAAI;MACVI,OAAO,EAAE,IAAI,CAACuC,WAAW,CAAC3J,IAAI,CAAC,IAAI,CAAC;MACpCwH,SAAS,EAAE,IAAI,CAACuD,aAAa,CAAC/K,IAAI,CAAC,IAAI,CAAC;MACxCqH,WAAW,EAAE,IAAI,CAACyC,eAAe,CAAC9J,IAAI,CAAC,IAAI,CAAC;MAC5CsH,MAAM,EAAE,IAAI,CAACoD,UAAU,CAAC1K,IAAI,CAAC,IAAI,CAAC;MAClCyH,SAAS,EAAE,IAAI,CAACuD,aAAa,CAAChL,IAAI,CAAC,IAAI;IAC3C,CAAC;EACL;EACAmJ,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACtC,MAAM,CAACwE,iBAAiB,CAAC,MAAM;MAChC,IAAI,IAAI,CAAC3D,gBAAgB,CAACmB,MAAM,GAAG,CAAC,EAAE;QAClC,IAAI,CAACnB,gBAAgB,CAACjF,OAAO,CAACiH,YAAY,IAAIA,YAAY,CAAC,CAAC,CAAC;MACjE;MACA,IAAI,EAAExP,mBAAmB,CAAC,CAAC,IAAIsH,SAAS,CAAC,IAAI,CAAC7F,OAAO,CAAC,CAAC,EAAE;QACrD;MACJ;MACA,IAAI,IAAI,CAACmL,OAAO,CAAC1J,OAAO,EAAE;QACtB,IAAI,CAACgM,aAAa,GAAG,IAAI,CAACA,aAAa,CAACpJ,IAAI,CAAC,IAAI,CAAC;QAClD,IAAI,CAACqJ,WAAW,GAAG,IAAI,CAACA,WAAW,CAACrJ,IAAI,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC0H,gBAAgB,GAAG,CACpB,IAAI,CAAC1D,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,aAAa,EAAE,IAAI,CAACqK,aAAa,CAAC,EACjE,IAAI,CAACpF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,WAAW,EAAE,IAAI,CAACqK,aAAa,CAAC,EAC/D,IAAI,CAACpF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,WAAW,EAAE,IAAI,CAACqK,aAAa,CAAC,EAC/D,IAAI,CAACpF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,WAAW,EAAE,IAAI,CAACsK,WAAW,CAAC,EAC7D,IAAI,CAACrF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,eAAe,EAAE,IAAI,CAACsK,WAAW,CAAC,EACjE,IAAI,CAACrF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,SAAS,EAAE,IAAI,CAACsK,WAAW,CAAC,EAC3D,IAAI,CAACrF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,aAAa,EAAE,IAAI,CAACsK,WAAW,CAAC,EAC/D,IAAI,CAACrF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,UAAU,EAAE,IAAI,CAACsK,WAAW,CAAC,EAC5D,IAAI,CAACrF,QAAQ,CAACsH,MAAM,CAACvM,QAAQ,EAAE,aAAa,EAAE,IAAI,CAACsK,WAAW,CAAC,CAClE;QACD,IAAI7H,SAAS,CAAC,IAAI,CAACjE,gBAAgB,CAAC,EAAE;UAClC,IAAI,IAAI,CAACA,gBAAgB,KAAKwB,QAAQ,CAACwM,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;YACpE,IAAI,CAAChO,gBAAgB,GAAG0B,MAAM;UAClC;UACA,IAAI,CAACyI,gBAAgB,CAAC+B,IAAI,CAAC,IAAI,CAACzF,QAAQ,CAACsH,MAAM,CAAC,IAAI,CAAC/N,gBAAgB,EAAE,QAAQ,EAAE,IAAI,CAAC6L,aAAa,CAAC,CAAC;QACzG;MACJ,CAAC,MACI;QACD,IAAI,CAACT,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC3I,IAAI,CAAC,IAAI,CAAC;QAClD,MAAMrE,OAAO,GAAG,IAAI,CAAC6M,aAAa;QAClC,IAAI,CAACd,gBAAgB,GAAG,CACpB,IAAI,CAAC1D,QAAQ,CAACsH,MAAM,CAAC3P,OAAO,EAAE,aAAa,EAAE,IAAI,CAACgN,aAAa,CAAC,EAChE,IAAI,CAAC3E,QAAQ,CAACsH,MAAM,CAAC3P,OAAO,EAAE,WAAW,EAAE,IAAI,CAACgN,aAAa,CAAC,EAC9D,IAAI,CAAC3E,QAAQ,CAACsH,MAAM,CAAC3P,OAAO,EAAE,YAAY,EAAE,IAAI,CAACgN,aAAa,CAAC,CAClE;MACL;IACJ,CAAC,CAAC;EACN;EACAG,YAAYA,CAAC9G,EAAE,EAAE;IACb,OAAO,IAAI,CAAC4G,WAAW,CAAC4C,OAAO,CAAC,CAAC,CAACC,IAAI,CAACC,EAAE,IAAIzR,QAAQ,CAACyR,EAAE,CAAC/P,OAAO,CAAC6M,aAAa,EAAExG,EAAE,EAAE,IAAI,CAAC,CAAC;EAC9F;EACAiH,sBAAsBA,CAAA,EAAG;IACrB,OAAO,OAAO,IAAI,CAAClP,UAAU,KAAK,QAAQ,IACtC,IAAI,CAACA,UAAU,CAAC4R,kBAAkB,IAClC,IAAI,CAAC5R,UAAU,CAAC4R,kBAAkB,CAACnD,aAAa,GAChD,IAAI,CAACzO,UAAU,CAAC4R,kBAAkB,CAACnD,aAAa,GAAG,IAAI;EAC/D;EACAyB,UAAUA,CAAA,EAAG;IACT,IAAI,EAAE/P,mBAAmB,CAAC,CAAC,IAAIsH,SAAS,CAAC,IAAI,CAAC7F,OAAO,CAAC,CAAC,EAAE;MACrD;IACJ;IACA,IAAI6F,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC,IAAI,OAAO,IAAI,CAACA,IAAI,KAAK,QAAQ,EAAE;MACvD,IAAIxF,SAAS,CAAC,IAAI,CAACwF,IAAI,CAACuB,YAAY,CAAC,EAAE;QACnC,IAAI,CAACqD,gBAAgB,CAAC,CAAC;MAC3B,CAAC,MACI;QACD,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAC5B;IACJ,CAAC,MACI;MACD,IAAI,CAACA,iBAAiB,CAAC,CAAC;IAC5B;IACA,IAAI,CAAC7O,UAAU,CAACgK,IAAI,GAAG,IAAI,CAACyB,QAAQ;IACpC,IAAI,OAAO,IAAI,CAACzB,IAAI,KAAK,QAAQ,IAAIxF,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC8E,QAAQ,CAAC,EAAE;MAChE,IAAI,CAAC9E,IAAI,CAAC8E,QAAQ,CAACnQ,OAAO,CAAC6M,aAAa,CAACuD,WAAW,CAAC,IAAI,CAACtD,QAAQ,CAAC;IACvE,CAAC,MACI;MACD1J,QAAQ,CAACiN,IAAI,CAACD,WAAW,CAAC,IAAI,CAACtD,QAAQ,CAAC;IAC5C;EACJ;EACAoD,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAAC7D,WAAW,GAAG,IAAI,CAACQ,aAAa,CAACyD,SAAS,CAAC,IAAI,CAAC;IACrD,IAAI,OAAO,IAAI,CAACjF,IAAI,KAAK,QAAQ,EAAE;MAC/B,IAAIxF,SAAS,CAAC,IAAI,CAACwF,IAAI,CAACkF,SAAS,CAAC,EAAE;QAChC,MAAMC,WAAW,GAAGhS,kBAAkB,CAAC,IAAI,CAAC6M,IAAI,CAACkF,SAAS,CAAC;QAC3DC,WAAW,CAAC1J,OAAO,CAAC2J,SAAS,IAAI,IAAI,CAACpI,QAAQ,CAACqI,QAAQ,CAAC,IAAI,CAACrE,WAAW,EAAEoE,SAAS,CAAC,CAAC;MACzF;IACJ;EACJ;EACAR,gBAAgBA,CAAA,EAAG;IACf,IAAIpK,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC8E,QAAQ,CAAC,EAAE;MAC/B,IAAI,CAACnE,aAAa,GAAG,IAAI,CAACX,IAAI,CAAC8E,QAAQ,CAACQ,eAAe,CAAC3H,aAAa,CAAC;IAC1E,CAAC,MACI;MACD,IAAI,CAACgD,aAAa,GAAG,IAAI,CAACZ,aAAa,CAACuF,eAAe,CAAC3H,aAAa,CAAC;IAC1E;IACA,IAAI,CAACgD,aAAa,CAACe,QAAQ,CAACxD,QAAQ,GAAG,IAAI,CAACqD,YAAY;IACxD,IAAI,CAACZ,aAAa,CAACe,QAAQ,CAACvD,SAAS,GAAG,IAAI;IAC5C,IAAI,CAACwC,aAAa,CAAC4E,iBAAiB,CAACC,aAAa,CAAC,CAAC;EACxD;EACApB,WAAWA,CAAA,EAAG;IACV,IAAI5J,SAAS,CAAC,IAAI,CAAC+G,YAAY,CAAC,EAAE;MAC9B,IAAI,CAACZ,aAAa,CAAC8E,OAAO,CAAC,CAAC;MAC5B,IAAI,CAAC9E,aAAa,CAAC4E,iBAAiB,CAACC,aAAa,CAAC,CAAC;MACpD,IAAI,CAAC7E,aAAa,GAAG,IAAI;IAC7B,CAAC,MACI;MACD,IAAI,OAAO,IAAI,CAACX,IAAI,KAAK,QAAQ,IAAIxF,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC8E,QAAQ,CAAC,EAAE;QAChE,IAAI,CAAC9E,IAAI,CAAC8E,QAAQ,CAACnQ,OAAO,CAAC6M,aAAa,CAACkE,WAAW,CAAC,IAAI,CAAC1E,WAAW,CAAC;MAC1E,CAAC,MACI;QACDjJ,QAAQ,CAACiN,IAAI,CAACU,WAAW,CAAC,IAAI,CAAC1E,WAAW,CAAC;MAC/C;MACA,IAAI,CAACA,WAAW,GAAG,IAAI;IAC3B;IACA,IAAI,CAAChL,UAAU,CAACgK,IAAI,GAAG,IAAI;EAC/B;EACA6C,kBAAkBA,CAACzI,KAAK,EAAE8E,eAAe,EAAE;IACvC,MAAMyG,UAAU,GAAG;MACf3P,UAAU,EAAE,IAAI,CAACwL,aAAa;MAC9BrC,SAAS,EAAED;IACf,CAAC;IACD,IAAI,IAAI,CAACc,IAAI,IAAIxF,SAAS,CAAC,IAAI,CAACiH,QAAQ,CAAC,EAAE;MACvCkE,UAAU,CAACC,WAAW,GAAG,IAAI,CAACnE,QAAQ;IAC1C;IACA,IAAI,IAAI,CAAC8B,YAAY,IAAI,IAAI,CAACA,YAAY,KAAK,EAAE,EAAE;MAC/CoC,UAAU,CAACpC,YAAY,GAAG,IAAI,CAACC,kBAAkB;IACrD;IACA,IAAIqC,SAAS;IACb,QAAQzL,KAAK;MACT,KAAK,aAAa;QACdyL,SAAS,GAAG,IAAIxG,wBAAwB,CAACsG,UAAU,CAAC;QACpD;MACJ,KAAK,SAAS;QACVE,SAAS,GAAG,IAAI7G,oBAAoB,CAAC2G,UAAU,CAAC;QAChD;MACJ,KAAK,aAAa;QACdE,SAAS,GAAG,IAAIvG,wBAAwB,CAACqG,UAAU,CAAC;QACpD;MACJ,KAAK,QAAQ;QACTE,SAAS,GAAG,IAAIrG,mBAAmB,CAACmG,UAAU,CAAC;QAC/C;MACJ,KAAK,WAAW;QACZE,SAAS,GAAG,IAAIpG,sBAAsB,CAACkG,UAAU,CAAC;QAClD;MACJ,KAAK,WAAW;QACZE,SAAS,GAAG,IAAItG,sBAAsB,CAACoG,UAAU,CAAC;QAClD;MACJ;QACI;IACR;IACA,IAAI,CAAC9F,MAAM,CAACiG,GAAG,CAAC,MAAM;MAClB,IAAI,CAAC1L,KAAK,CAAC,CAAC2L,IAAI,CAACF,SAAS,CAAC;IAC/B,CAAC,CAAC;IACF,OAAOA,SAAS;EACpB;EACA,IAAIrC,kBAAkBA,CAAA,EAAG;IACrB,IAAI,IAAI,CAACD,YAAY,IAAI,IAAI,CAACA,YAAY,KAAK,EAAE,EAAE;MAC/C,OAAO,OAAO,IAAI,CAACA,YAAY,KAAK,QAAQ,GAAG,IAAI,CAACA,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC;QAAEvN,UAAU,EAAE,IAAI,CAACA,UAAU,CAACrB,OAAO;QAAE8O,eAAe,EAAE;MAAK,CAAC,CAAC;IACxJ;EACJ;EACAK,WAAWA,CAAA,EAAG;IACV,MAAM7G,IAAI,GAAG,IAAI,CAAC+C,IAAI,GAAG,IAAI,CAACyB,QAAQ,GAAG,IAAI,CAACD,aAAa;IAC3D,IAAIvE,IAAI,EAAE;MACN,MAAMC,MAAM,GAAG,IAAI,CAAC8I,mBAAmB,CAAC/I,IAAI,CAAC;MAC7CF,gBAAgB,CAAC,IAAI,CAACC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,CAAC;IACjD;EACJ;EACAyG,iBAAiBA,CAAChP,OAAO,EAAEyF,KAAK,EAAE;IAC9B,IAAI2G,QAAQ,GAAG,IAAI;IACnB,IAAIpM,OAAO,KAAK,IAAI,CAAC8M,QAAQ,EAAE;MAC3BV,QAAQ,GAAG;QAAEnK,CAAC,EAAEwD,KAAK,CAACgJ,OAAO;QAAEvM,CAAC,EAAEuD,KAAK,CAACiJ;MAAQ,CAAC;IACrD,CAAC,MACI;MACDtC,QAAQ,GAAG;QAAEnK,CAAC,EAAEwD,KAAK,CAACgJ,OAAO,GAAG,IAAI,CAACtC,eAAe,CAAClK,CAAC,GAAGwD,KAAK,CAAC6L,OAAO;QAAEpP,CAAC,EAAEuD,KAAK,CAACiJ,OAAO,GAAG,IAAI,CAACvC,eAAe,CAACjK,CAAC,GAAGuD,KAAK,CAAC8L;MAAQ,CAAC;IACvI;IACA,IAAI,IAAI,CAACC,cAAc,KAAK,YAAY,EAAE;MACtCpF,QAAQ,CAAClK,CAAC,GAAG,CAAC;IAClB,CAAC,MACI,IAAI,IAAI,CAACsP,cAAc,KAAK,UAAU,EAAE;MACzCpF,QAAQ,CAACnK,CAAC,GAAG,CAAC;IAClB;IACA,OAAOmK,QAAQ;EACnB;EACAiF,mBAAmBA,CAACrR,OAAO,EAAE;IACzB,IAAIA,OAAO,KAAK,IAAI,CAAC8M,QAAQ,EAAE;MAC3B,MAAM2E,eAAe,GAAG;QAAExP,CAAC,EAAE,IAAI,CAACmK,QAAQ,CAACnK,CAAC,GAAG,IAAI,CAACkK,eAAe,CAAClK,CAAC;QAAEC,CAAC,EAAE,IAAI,CAACkK,QAAQ,CAAClK,CAAC,GAAG,IAAI,CAACiK,eAAe,CAACjK;MAAE,CAAC;MACpH,OAAO;QACHoF,GAAG,EAAG,GAAEmK,eAAe,CAACvP,CAAE,IAAG;QAC7BsF,IAAI,EAAG,GAAEiK,eAAe,CAACxP,CAAE,IAAG;QAC9BuN,UAAU,EAAE,MAAM;QAClBpD,QAAQ,EAAE,UAAU;QACpBsF,MAAM,EAAE;MACZ,CAAC;IACL,CAAC,MACI;MACD,MAAMC,SAAS,GAAI,aAAY,IAAI,CAACvF,QAAQ,CAACnK,CAAE,OAAM,IAAI,CAACmK,QAAQ,CAAClK,CAAE,KAAI;MACzE,OAAO;QACHyP,SAAS,EAAEA,SAAS;QACpBnC,UAAU,EAAE;MAChB,CAAC;IACL;EACJ;AACJ;AACAvE,mBAAmB,CAAC/K,IAAI,YAAA0R,4BAAAxR,CAAA;EAAA,YAAAA,CAAA,IAAyF6K,mBAAmB,EAv1B7B7N,EAAE,CAAAiD,iBAAA,CAu1B6CjD,EAAE,CAACkD,UAAU,GAv1B5DlD,EAAE,CAAAiD,iBAAA,CAu1BuEjD,EAAE,CAACyU,SAAS,GAv1BrFzU,EAAE,CAAAiD,iBAAA,CAu1BgGjD,EAAE,CAAC0U,MAAM,GAv1B3G1U,EAAE,CAAAiD,iBAAA,CAu1BsHe,gBAAgB,GAv1BxIhE,EAAE,CAAAiD,iBAAA,CAu1BmJjD,EAAE,CAAC2U,gBAAgB;AAAA,CAA4C;AAC3T9G,mBAAmB,CAAC1K,IAAI,kBAx1B+EnD,EAAE,CAAAoD,iBAAA;EAAAC,IAAA,EAw1BJwK,mBAAmB;EAAAvK,SAAA;EAAAsR,cAAA,WAAAC,mCAAApT,EAAA,EAAAC,GAAA,EAAAoT,QAAA;IAAA,IAAArT,EAAA;MAx1BjBzB,EAAE,CAAA+U,cAAA,CAAAD,QAAA,EAw1BucpS,mBAAmB;IAAA;IAAA,IAAAjB,EAAA;MAAA,IAAAuT,EAAA;MAx1B5dhV,EAAE,CAAAiV,cAAA,CAAAD,EAAA,GAAFhV,EAAE,CAAAkV,WAAA,QAAAxT,GAAA,CAAAmO,WAAA,GAAAmF,EAAA;IAAA;EAAA;EAAA9I,MAAA;IAAA+B,IAAA;IAAAC,SAAA;IAAAlN,UAAA;IAAAwQ,YAAA;IAAArD,SAAA;IAAAiG,cAAA;IAAAhG,IAAA;IAAAe,QAAA;EAAA;EAAAgG,OAAA;IAAA9G,OAAA;IAAAC,WAAA;IAAAC,MAAA;IAAAC,WAAA;IAAAC,SAAA;IAAAC,SAAA;EAAA;EAAA/K,QAAA;AAAA,EAw1B6gB;AACtnB;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAz1BuG5D,EAAE,CAAA6D,iBAAA,CAy1BbgK,mBAAmB,EAAc,CAAC;IAClHxK,IAAI,EAAEpD,SAAS;IACf6D,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,mBAAmB;MAC7BJ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEN,IAAI,EAAErD,EAAE,CAACkD;IAAW,CAAC,EAAE;MAAEG,IAAI,EAAErD,EAAE,CAACyU;IAAU,CAAC,EAAE;MAAEpR,IAAI,EAAErD,EAAE,CAAC0U;IAAO,CAAC,EAAE;MAAErR,IAAI,EAAEW;IAAiB,CAAC,EAAE;MAAEX,IAAI,EAAErD,EAAE,CAAC2U;IAAiB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE1G,IAAI,EAAE,CAAC;MAChM5K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE6N,SAAS,EAAE,CAAC;MACZ7K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEW,UAAU,EAAE,CAAC;MACbqC,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEmR,YAAY,EAAE,CAAC;MACfnO,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE8N,SAAS,EAAE,CAAC;MACZ9K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE+T,cAAc,EAAE,CAAC;MACjB/Q,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE+N,IAAI,EAAE,CAAC;MACP/K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE8O,QAAQ,EAAE,CAAC;MACX9L,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEgO,OAAO,EAAE,CAAC;MACVhL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAE8N,WAAW,EAAE,CAAC;MACdjL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAE+N,MAAM,EAAE,CAAC;MACTlL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEgO,WAAW,EAAE,CAAC;MACdnL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEiO,SAAS,EAAE,CAAC;MACZpL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEkO,SAAS,EAAE,CAAC;MACZrL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEqP,WAAW,EAAE,CAAC;MACdxM,IAAI,EAAE5C,eAAe;MACrBqD,IAAI,EAAE,CAACpB,mBAAmB;IAC9B,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAM0S,eAAe,CAAC;EAClB;AACJ;AACA;EACIzS,WAAWA,CAACmB,IAAI,EAAE;IACduH,MAAM,CAAC6B,MAAM,CAAC,IAAI,EAAEpJ,IAAI,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACI,IAAIqJ,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACC,SAAS;EACzB;EACA;AACJ;AACA;AACA;EACI,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACnJ,UAAU;EAC1B;AACJ;;AAEA;AACA;AACA;AACA,MAAMmR,mBAAmB,CAAC;EACtB1S,WAAWA,CAACoL,OAAO,EAAEnL,OAAO,EAAEkL,MAAM,EAAE;IAClC,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACnL,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACkL,MAAM,GAAGA,MAAM;IACpB;AACR;AACA;IACQ,IAAI,CAACwH,WAAW,GAAG,IAAIhV,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACiV,UAAU,GAAG,IAAIjV,YAAY,CAAC,CAAC;IACpC;AACR;AACA;IACQ,IAAI,CAACkV,WAAW,GAAG,IAAIlV,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACmV,MAAM,GAAG,IAAInV,YAAY,CAAC,CAAC;IAChCO,eAAe,CAACsB,eAAe,CAAC;EACpC;EACAoO,QAAQA,CAAA,EAAG;IACP,IAAI,CAACmF,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAAC3H,OAAO,CAAC3J,WAAW,CAACsM,IAAI,CAAC,IAAI,CAACxM,UAAU,CAAC;EAClD;EACA;AACJ;AACA;EACIyR,eAAeA,CAACtN,KAAK,EAAE;IACnB,IAAI,CAAC,IAAI,CAAC0F,OAAO,CAAC9J,UAAU,EAAE;MAC1B;IACJ;IACA,IAAI,CAAC8J,OAAO,CAAC7J,UAAU,GAAG,IAAI,CAACA,UAAU;IACzC,IAAI,CAAC4M,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC;EACjD;EACA;AACJ;AACA;EACIuN,eAAeA,CAACvN,KAAK,EAAE;IACnB,IAAI,CAAC0F,OAAO,CAAC7J,UAAU,GAAG,IAAI;IAC9B,IAAI,CAAC,IAAI,CAAC6J,OAAO,CAAC9J,UAAU,EAAE;MAC1B;IACJ;IACA,IAAI,CAAC6M,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC;EACjD;EACA;AACJ;AACA;EACIwN,cAAcA,CAACxN,KAAK,EAAE;IAClB,IAAI,CAAC,IAAI,CAAC0F,OAAO,CAAC9J,UAAU,EAAE;MAC1B;IACJ;IACA,IAAI,CAAC6M,kBAAkB,CAAC,YAAY,EAAEzI,KAAK,CAAC;EAChD;EACA;AACJ;AACA;EACIyN,UAAUA,CAACzN,KAAK,EAAE;IACd,IAAI,CAACyI,kBAAkB,CAAC,QAAQ,EAAEzI,KAAK,CAAC;IACxC,IAAI,CAAC0F,OAAO,CAAC7J,UAAU,GAAG,IAAI;EAClC;EACAwR,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACxR,UAAU,GAAG;MACdtB,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC6M,aAAa;MACnC6F,WAAW,EAAE,IAAI,CAACK,eAAe,CAAC1O,IAAI,CAAC,IAAI,CAAC;MAC5CuO,WAAW,EAAE,IAAI,CAACI,eAAe,CAAC3O,IAAI,CAAC,IAAI,CAAC;MAC5CsO,UAAU,EAAE,IAAI,CAACM,cAAc,CAAC5O,IAAI,CAAC,IAAI,CAAC;MAC1CwO,MAAM,EAAE,IAAI,CAACK,UAAU,CAAC7O,IAAI,CAAC,IAAI;IACrC,CAAC;EACL;EACA6J,kBAAkBA,CAACzI,KAAK,EAAE8E,eAAe,EAAE;IACvC,MAAMyG,UAAU,GAAG;MACf1P,UAAU,EAAE,IAAI,CAACtB,OAAO,CAAC6M,aAAa;MACtCxL,UAAU,EAAE,IAAI,CAAC8J,OAAO,CAAC9J,UAAU,EAAErB,OAAO;MAC5CwK,SAAS,EAAED,eAAe;MAC1BgC,QAAQ,EAAE,IAAI,CAACpB,OAAO,CAACoB;IAC3B,CAAC;IACD,IAAI1G,SAAS,CAAC,IAAI,CAACsF,OAAO,CAAC9J,UAAU,EAAEgK,IAAI,CAAC,EAAE;MAC1C2F,UAAU,CAACC,WAAW,GAAG,IAAI,CAAC9F,OAAO,CAAC9J,UAAU,CAACrB,OAAO;IAC5D;IACA,MAAMkR,SAAS,GAAG,IAAIsB,eAAe,CAACxB,UAAU,CAAC;IACjD,IAAI,CAAC9F,MAAM,CAACiG,GAAG,CAAC,MAAM;MAClB,IAAI,CAAC1L,KAAK,CAAC,CAAC2L,IAAI,CAACF,SAAS,CAAC;IAC/B,CAAC,CAAC;EACN;AACJ;AACAuB,mBAAmB,CAACvS,IAAI,YAAAiT,4BAAA/S,CAAA;EAAA,YAAAA,CAAA,IAAyFqS,mBAAmB,EAr/B7BrV,EAAE,CAAAiD,iBAAA,CAq/B6Ce,gBAAgB,GAr/B/DhE,EAAE,CAAAiD,iBAAA,CAq/B0EjD,EAAE,CAACkD,UAAU,GAr/BzFlD,EAAE,CAAAiD,iBAAA,CAq/BoGjD,EAAE,CAAC0U,MAAM;AAAA,CAA4C;AAClQW,mBAAmB,CAAClS,IAAI,kBAt/B+EnD,EAAE,CAAAoD,iBAAA;EAAAC,IAAA,EAs/BJgS,mBAAmB;EAAA/R,SAAA;EAAA6R,OAAA;IAAAG,WAAA;IAAAC,UAAA;IAAAC,WAAA;IAAAC,MAAA;EAAA;EAAA9R,QAAA;AAAA,EAAgM;AACxT;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAv/BuG5D,EAAE,CAAA6D,iBAAA,CAu/BbwR,mBAAmB,EAAc,CAAC;IAClHhS,IAAI,EAAEpD,SAAS;IACf6D,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,mBAAmB;MAC7BJ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEN,IAAI,EAAEW;IAAiB,CAAC,EAAE;MAAEX,IAAI,EAAErD,EAAE,CAACkD;IAAW,CAAC,EAAE;MAAEG,IAAI,EAAErD,EAAE,CAAC0U;IAAO,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEY,WAAW,EAAE,CAAC;MAChJjS,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAE+U,UAAU,EAAE,CAAC;MACblS,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEgV,WAAW,EAAE,CAAC;MACdnS,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEiV,MAAM,EAAE,CAAC;MACTpS,IAAI,EAAE7C;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAIwV,oBAAoB,GAAG,KAAK;AAChC,IAAIC,eAAe,GAAG,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,4BAA4B,CAAC;EAC/BvT,WAAWA,CAACwT,OAAO,EAAErI,MAAM,EAAE7C,QAAQ,EAAE8C,OAAO,EAAEC,aAAa,EAAEoI,GAAG,EAAE;IAChE,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACrI,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC7C,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC8C,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACoI,GAAG,GAAGA,GAAG;IACd;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACnI,IAAI,GAAG,KAAK;IACjB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACE,SAAS,GAAG,CAAC;IAClB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACD,SAAS,GAAG,CAAC;IAClB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACE,IAAI,GAAG,MAAM;IAClB;AACR;AACA;IACQ,IAAI,CAACI,WAAW,GAAG,IAAIlO,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAAC+N,OAAO,GAAG,IAAI/N,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACgO,WAAW,GAAG,IAAIhO,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACiO,MAAM,GAAG,IAAIjO,YAAY,CAAC,CAAC;IAChC;AACR;AACA;IACQ,IAAI,CAACmO,SAAS,GAAG,IAAInO,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAACoO,SAAS,GAAG,IAAIpO,YAAY,CAAC,CAAC;IACnC,IAAI,CAAC+V,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACvH,WAAW,GAAG,IAAI;IACvB,IAAI,CAACzK,OAAO,GAAG,KAAK;IACpB,IAAI,CAACwK,WAAW,GAAG,KAAK;IACxB,IAAI,CAACD,aAAa,GAAG,IAAI;IACzB,IAAI,CAACK,WAAW,GAAG,IAAI;IACvB,IAAI,CAACqH,wBAAwB,GAAG,IAAI;IACpC,IAAI,CAAC9R,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAAC+R,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACxH,eAAe,GAAG;MAAElK,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACrC,IAAI,CAACkK,QAAQ,GAAG;MAAEnK,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC9B,IAAI,CAAC0R,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACzH,SAAS,GAAG,MAAM,IAAI;IAC3B,IAAI,CAAC0H,aAAa,GAAG,MAAM,IAAI;IAC/B/V,eAAe,CAACsB,eAAe,CAAC;EACpC;EACA;AACJ;AACA;AACA;AACA;EACI,IAAI0U,gBAAgBA,CAACnO,KAAK,EAAE;IACxB,IAAI,CAACgO,iBAAiB,GAAGhO,KAAK;IAC9B,IAAI,CAAC,IAAI,CAACoO,YAAY,EAAE;MACpB,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAChC;EACJ;EACA,IAAIF,gBAAgBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACH,iBAAiB;EACjC;EACA;AACJ;AACA;AACA;EACI,IAAIlF,YAAYA,CAACpC,EAAE,EAAE;IACjB,IAAI7O,SAAS,IAAI,OAAO6O,EAAE,KAAK,UAAU,EAAE;MACvC,MAAM,IAAIC,KAAK,CAAE,iDAAgDC,IAAI,CAACC,SAAS,CAACH,EAAE,CAAE,GAAE,CAAC;IAC3F;IACA,IAAI,CAACwH,aAAa,GAAGxH,EAAE;EAC3B;EACA,IAAIoC,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACoF,aAAa;EAC7B;EACA;AACJ;AACA;AACA;EACI,IAAIzH,QAAQA,CAACC,EAAE,EAAE;IACb,IAAI7O,SAAS,IAAI,OAAO6O,EAAE,KAAK,UAAU,EAAE;MACvC,MAAM,IAAIC,KAAK,CAAE,6CAA4CC,IAAI,CAACC,SAAS,CAACH,EAAE,CAAE,GAAE,CAAC;IACvF;IACA,IAAI,CAACF,SAAS,GAAGE,EAAE;EACvB;EACA,IAAID,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACD,SAAS;EACzB;EACA;AACJ;AACA;AACA;AACA;EACI,IAAI4H,YAAYA,CAACpO,KAAK,EAAE;IACpB,IAAI,CAACiO,aAAa,GAAGjO,KAAK;IAC1B,IAAIA,KAAK,EAAE;MACP,IAAI,CAACsO,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAACC,WAAW,CAAC,CAAC;MAClB,IAAIxO,SAAS,CAAC,IAAI,CAACiH,QAAQ,CAAC,EAAE;QAC1B,IAAI,CAAC2C,WAAW,CAAC,CAAC;MACtB;IACJ,CAAC,MACI;MACD,IAAI5J,SAAS,CAAC,IAAI,CAAC0N,OAAO,CAAC,IAAI1N,SAAS,CAAC,IAAI,CAAC4N,iBAAiB,CAAC,EAAE;QAC9D,IAAI,CAACa,SAAS,CAAC,CAAC;MACpB;MACA,IAAI,CAACH,qBAAqB,CAAC,CAAC;IAChC;EACJ;EACA,IAAID,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACH,aAAa;EAC7B;EACA;AACJ;AACA;EACIQ,MAAMA,CAAA,EAAG;IACL,IAAI,CAACf,GAAG,CAAC3C,aAAa,CAAC,CAAC;IACxB,IAAI,CAACsD,qBAAqB,CAAC,CAAC;EAChC;EACA,IAAIK,cAAcA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,SAAS,CAAC,IAAI,CAACR,gBAAgB,CAAC;EAChD;EACA,IAAIhH,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACyH,qBAAqB,GAAG,IAAI,CAACD,SAAS,CAAC,IAAI,CAACE,UAAU,CAAC,GAAG,IAAI;EAC9E;EACA,IAAI/H,YAAYA,CAAA,EAAG;IACf,OAAO/G,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC,IAAI,OAAO,IAAI,CAACA,IAAI,KAAK,QAAQ,GAAG,IAAI,CAACA,IAAI,CAACuB,YAAY,GAAG,IAAI;EAChG;EACAgI,eAAeA,CAAA,EAAG;IACd,MAAMC,eAAe,GAAGhP,SAAS,CAAC,IAAI,CAAC0N,OAAO,CAAC,IAAI1N,SAAS,CAAC,IAAI,CAAC4N,iBAAiB,CAAC;IACpF,IAAI,CAAC,IAAI,CAACS,YAAY,IAAIW,eAAe,EAAE;MACvC,IAAI,CAACP,SAAS,CAAC,CAAC;IACpB;IACA,CAAC,IAAI,CAACJ,YAAY,IAAI,IAAI,CAACC,qBAAqB,CAAC,CAAC;EACtD;EACAnH,aAAaA,CAACvH,KAAK,EAAE;IACjB,IAAII,SAAS,CAAC,IAAI,CAACoH,WAAW,CAAC,IAAI,CAAC,IAAI,CAACE,YAAY,CAAC1H,KAAK,CAACyB,MAAM,CAAC,EAAE;MACjE;IACJ;IACA,MAAMnE,MAAM,GAAGyC,SAAS,CAACC,KAAK,EAAE,IAAI,CAACgO,iBAAiB,CAAC;IACvD,IAAI,CAACtI,OAAO,CAACrI,iBAAiB,CAACC,MAAM,CAAC;IACtC,IAAI,CAACuR,SAAS,CAAC,CAAC;EACpB;EACA7G,aAAaA,CAAChI,KAAK,EAAE;IACjBA,KAAK,CAAC2H,cAAc,CAAC,CAAC;IACtB,MAAMrK,MAAM,GAAGyC,SAAS,CAACC,KAAK,EAAE,IAAI,CAACgO,iBAAiB,CAAC;IACvD,IAAI,CAACtI,OAAO,CAACrI,iBAAiB,CAACC,MAAM,CAAC;EAC1C;EACA2K,WAAWA,CAACjI,KAAK,EAAE;IACfA,KAAK,CAAC2H,cAAc,CAAC,CAAC;IACtB,MAAMrK,MAAM,GAAGyC,SAAS,CAACC,KAAK,EAAE,IAAI,CAACgO,iBAAiB,CAAC;IACvD,IAAI,CAACtI,OAAO,CAACrI,iBAAiB,CAACC,MAAM,CAAC;IACtC,IAAI,CAACmI,MAAM,CAACwE,iBAAiB,CAAC,MAAM;MAChC,IAAI,CAAC4E,SAAS,CAAC,CAAC;IACpB,CAAC,CAAC;EACN;EACAtG,WAAWA,CAACvI,KAAK,EAAE;IACf,IAAI,IAAI,CAAC8F,SAAS,GAAG,CAAC,EAAE;MACpB,IAAI,CAACW,WAAW,GAAG5I,MAAM,CAAC2K,UAAU,CAAC,MAAM;QACvC,IAAI,CAACxM,OAAO,GAAG,IAAI;QACnB,IAAI,CAACyM,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC;MACjD,CAAC,EAAE,IAAI,CAAC8F,SAAS,CAAC;IACtB,CAAC,MACI;MACD,IAAI,CAAC9J,OAAO,GAAG,IAAI;IACvB;IACA,MAAMqT,WAAW,GAAGrP,KAAK,CAACsP,aAAa,CAAC7N,MAAM;IAC9C,IAAI,CAACwM,wBAAwB,GAAG1N,iBAAiB,CAAC8O,WAAW,EAAE,IAAI,CAACb,gBAAgB,CAAC;IACrF,IAAI,CAACR,iBAAiB,CAACzT,OAAO,GAAG,IAAI,CAAC0T,wBAAwB;IAC9D,IAAI,CAACvI,OAAO,CAAC1I,SAAS,GAAG,IAAI,CAACuS,YAAY,CAAC,CAAC;IAC5C,IAAI,CAACpT,gBAAgB,GAAG,IAAI,CAACgL,YAAY,GAAGxJ,QAAQ,CAACiN,IAAI,GAAG,IAAI,CAACqD,wBAAwB,GAAGvV,mBAAmB,CAAC,IAAI,CAACuV,wBAAwB,CAAC,GAAG,IAAI;IACrJ,IAAI,CAACxF,kBAAkB,CAAC,SAAS,EAAEzI,KAAK,CAAC;EAC7C;EACA0I,eAAeA,CAAC1I,KAAK,EAAE;IACnB,IAAI,CAAC,IAAI,CAAChE,OAAO,EAAE;MACf,IAAI,IAAI,CAACyK,WAAW,EAAE;QAClB5I,MAAM,CAAC8K,YAAY,CAAC,IAAI,CAAClC,WAAW,CAAC;QACrC,IAAI,CAACA,WAAW,GAAG,IAAI;MAC3B;MACA;IACJ;IACAkH,oBAAoB,GAAG,IAAI,CAAClF,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC,CAAC4I,kBAAkB,CAAC,CAAC;IACzF,IAAI+E,oBAAoB,EAAE;MACtB;IACJ;IACA,IAAI,CAAChH,QAAQ,GAAG,IAAI,CAACwH,YAAY,CAACqB,GAAG,CAAC,IAAI,CAACvB,wBAAwB,CAAC,GAAG,IAAI,CAACE,YAAY,CAACsB,GAAG,CAAC,IAAI,CAACxB,wBAAwB,CAAC,GAAG;MAAEzR,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC5I,IAAI,IAAI,CAACmJ,IAAI,EAAE;MACX,IAAI,CAACiD,UAAU,CAAC,CAAC;MACjB,IAAI,IAAI,CAAC9C,IAAI,KAAK,MAAM,EAAE;QACtB,IAAI,CAACnD,QAAQ,CAACO,QAAQ,CAAC,IAAI,CAAC8K,wBAAwB,EAAE,SAAS,EAAE,KAAK,CAAC;MAC3E;IACJ,CAAC,MACI;MACD,IAAI,CAACvH,eAAe,GAAG;QAAElK,CAAC,EAAEwD,KAAK,CAACgJ,OAAO,GAAG,IAAI,CAACrC,QAAQ,CAACnK,CAAC;QAAEC,CAAC,EAAEuD,KAAK,CAACiJ,OAAO,GAAG,IAAI,CAACtC,QAAQ,CAAClK;MAAE,CAAC;IACrG;IACA,IAAI,CAAC+J,WAAW,GAAG,IAAI,CAACX,SAAS,KAAK,CAAC;IACvC,IAAI,CAACH,OAAO,CAAC9J,UAAU,GAAG,IAAI,CAACoS,iBAAiB;IAChD,MAAM0B,YAAY,GAAG;MAAE9T,UAAU,EAAE,IAAI,CAACqS,wBAAwB;MAAE5E,eAAe,EAAE,IAAI,CAAC3D,OAAO,CAAC1I;IAAU,CAAC;IAC3G,IAAI,CAAC0I,OAAO,CAACyD,YAAY,GAAG,IAAI,CAACA,YAAY,CAACuG,YAAY,CAAC;IAC3D,MAAMC,cAAc,GAAG3M,MAAM,CAAC6B,MAAM,CAAC;MAAEsE,YAAY,EAAE,IAAI,CAACzD,OAAO,CAACyD;IAAa,CAAC,EAAEuG,YAAY,CAAC;IAC/F,IAAI,CAAChK,OAAO,CAACoB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC6I,cAAc,CAAC;EACzD;EACArG,UAAUA,CAACtJ,KAAK,EAAE;IACd,IAAI,CAAC,IAAI,CAAChE,OAAO,IAAI2R,oBAAoB,EAAE;MACvC;IACJ;IACA,MAAM9K,IAAI,GAAG,IAAI,CAAC+C,IAAI,GAAG,IAAI,CAACyB,QAAQ,GAAG,IAAI,CAAC4G,wBAAwB;IACtE,IAAI,CAACtH,QAAQ,GAAG,IAAI,CAAC4C,iBAAiB,CAAC1G,IAAI,EAAE7C,KAAK,CAAC;IACnD,MAAMwJ,mBAAmB,GAAG1H,IAAI,CAAC2H,GAAG,CAAC,IAAI,CAAC9C,QAAQ,CAACnK,CAAC,CAAC,GAAG,IAAI,CAACqJ,SAAS,IAAI/D,IAAI,CAAC2H,GAAG,CAAC,IAAI,CAAC9C,QAAQ,CAAClK,CAAC,CAAC,GAAG,IAAI,CAACoJ,SAAS;IACpH,IAAI,CAAC,IAAI,CAACW,WAAW,IAAIgD,mBAAmB,EAAE;MAC1C;IACJ;IACA,IAAI,CAAC,IAAI,CAAChD,WAAW,IAAI,IAAI,CAACX,SAAS,GAAG,CAAC,EAAE;MACzC,IAAI,CAACW,WAAW,GAAG,IAAI;IAC3B;IACAoH,eAAe,GAAG,IAAI,CAACnF,kBAAkB,CAAC,QAAQ,EAAEzI,KAAK,CAAC,CAAC4I,kBAAkB,CAAC,CAAC;IAC/E,IAAIgF,eAAe,EAAE;MACjB;IACJ;IACA,IAAI,IAAI,CAAC7H,IAAI,KAAK,MAAM,EAAE;MACtB,IAAI,CAAC2D,WAAW,CAAC,CAAC;IACtB,CAAC,MACI;MACD,IAAI,CAAClD,WAAW,GAAG,IAAI;IAC3B;EACJ;EACAmD,aAAaA,CAAC3J,KAAK,EAAE;IACjB,IAAI,IAAI,CAACwG,WAAW,EAAE;MAClB,IAAI,CAAC2H,YAAY,CAACyB,GAAG,CAAC,IAAI,CAAC3B,wBAAwB,EAAE,IAAI,CAACtH,QAAQ,CAAC;IACvE;IACA,IAAI,IAAI,CAACF,WAAW,EAAE;MAClBkC,YAAY,CAAC,IAAI,CAAClC,WAAW,CAAC;MAC9B,IAAI,CAACA,WAAW,GAAG,IAAI;MACvB,IAAI,CAACzK,OAAO,GAAG,KAAK;IACxB;IACA,IAAI,CAACyM,kBAAkB,CAAC,WAAW,EAAEzI,KAAK,CAAC;EAC/C;EACA4J,aAAaA,CAAC5J,KAAK,EAAE;IACjB,IAAI,CAAC,IAAI,CAACwG,WAAW,EAAE;MACnB;IACJ;IACA,IAAI,IAAI,CAACT,IAAI,KAAK,MAAM,EAAE;MACtB,MAAM8D,yBAAyB,GAAGzJ,SAAS,CAAC,IAAI,CAACsF,OAAO,CAAC7J,UAAU,CAAC,IAAI,CAAChD,QAAQ,CAAC,IAAI,CAAC6M,OAAO,CAAC7J,UAAU,EAAEtB,OAAO,EAAE,IAAI,CAACmL,OAAO,CAAC9J,UAAU,EAAErB,OAAO,EAAE,IAAI,CAAC;MAC3J,MAAMsI,IAAI,GAAG,IAAI,CAAC+C,IAAI,GAAG,IAAI,CAACyB,QAAQ,GAAG,IAAI,CAAC4G,wBAAwB;MACtE,IAAIpE,yBAAyB,IAAI,IAAI,CAACnE,OAAO,CAAC3J,WAAW,CAAC0L,MAAM,GAAG,CAAC,IAAIrH,SAAS,CAACyC,IAAI,CAAC,EAAE;QACrF,IAAI,CAACD,QAAQ,CAACkH,WAAW,CAACjH,IAAI,EAAE,WAAW,CAAC;QAC5CF,gBAAgB,CAAC,IAAI,CAACC,QAAQ,EAAEC,IAAI,EAAE;UAClCkH,UAAU,EAAE5J;QAChB,CAAC,CAAC;QACF,IAAI,CAACgO,YAAY,CAAC0B,MAAM,CAAC,IAAI,CAAC5B,wBAAwB,CAAC;MAC3D;IACJ;IACA,IAAI,IAAI,CAACrI,IAAI,IAAIxF,SAAS,CAAC,IAAI,CAACiH,QAAQ,CAAC,EAAE;MACvC,IAAI,CAAC2C,WAAW,CAAC,CAAC;MAClB,IAAI,IAAI,CAACjE,IAAI,KAAK,MAAM,EAAE;QACtB,IAAI,CAACnD,QAAQ,CAACkH,WAAW,CAAC,IAAI,CAACmE,wBAAwB,EAAE,SAAS,CAAC;MACvE;IACJ;IACA,IAAI,CAACvI,OAAO,CAAC9J,UAAU,GAAG,IAAI;IAC9B,IAAI,CAAC8J,OAAO,CAAC1I,SAAS,GAAG,IAAI;IAC7B,IAAI,CAACgR,iBAAiB,CAACzT,OAAO,GAAG,IAAI;IACrC,IAAI,CAACkO,kBAAkB,CAAC,WAAW,EAAEzI,KAAK,CAAC;IAC3C,IAAI2N,oBAAoB,IAAIC,eAAe,EAAE;MACzC;IACJ;IACA,IAAI,CAACpH,WAAW,GAAG,KAAK;EAC5B;EACA,IAAIY,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAC0G,OAAO,CAAC1G,aAAa;EACrC;EACA,IAAIC,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACF,YAAY,IAAI/G,SAAS,CAAC,IAAI,CAACmG,aAAa,CAAC,GAAG,IAAI,CAACA,aAAa,CAACe,QAAQ,CAAC/M,OAAO,CAAC6M,aAAa,GAAG,IAAI,CAACR,WAAW;EACpI;EACAgI,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAACkB,uBAAuB,EAAE;MAC9B,IAAI,CAACA,uBAAuB,CAAClB,WAAW,CAAC,CAAC;IAC9C;IACA,IAAI,IAAI,CAACmB,uBAAuB,EAAE;MAC9B,IAAI,CAACA,uBAAuB,CAACnB,WAAW,CAAC,CAAC;IAC9C;IACA,IAAI,IAAI,CAACoB,qBAAqB,EAAE;MAC5B,IAAI,CAACA,qBAAqB,CAACpB,WAAW,CAAC,CAAC;IAC5C;IACA,IAAI,IAAI,CAACqB,kBAAkB,EAAE;MACzB,IAAI,CAACA,kBAAkB,CAACrB,WAAW,CAAC,CAAC;IACzC;EACJ;EACAC,SAASA,CAAA,EAAG;IACR,IAAI,CAACpJ,MAAM,CAACwE,iBAAiB,CAAC,MAAM;MAChC,IAAI,CAAC2E,WAAW,CAAC,CAAC;MAClB,IAAI,EAAE9V,mBAAmB,CAAC,CAAC,IAAIsH,SAAS,CAAC,IAAI,CAAC0N,OAAO,CAAC,CAAC,EAAE;QACrD;MACJ;MACA,MAAMvT,OAAO,GAAG,IAAI,CAAC6M,aAAa;MAClC,IAAI,IAAI,CAAC1B,OAAO,CAAC1J,OAAO,EAAE;QACtB,MAAMkU,kBAAkB,GAAG7M,oBAAoB,CAAC8M,GAAG,CAAEC,EAAE,IAAKpX,SAAS,CAAC2E,QAAQ,EAAEyS,EAAE,CAAC,CAAC;QACpF,MAAMC,gBAAgB,GAAG/M,kBAAkB,CAAC6M,GAAG,CAAEC,EAAE,IAAKpX,SAAS,CAAC2E,QAAQ,EAAEyS,EAAE,CAAC,CAAC;QAChF,IAAI,CAACL,uBAAuB,GAAG9W,KAAK,CAAC,GAAGiX,kBAAkB,CAAC,CACtDI,IAAI,CAACpX,MAAM,CAAC,MAAM,IAAI,CAACsV,gBAAgB,KAAK,EAAE,CAAC,CAAC,CAChDK,SAAS,CAAC0B,CAAC,IAAI,IAAI,CAACvI,aAAa,CAACuI,CAAC,CAAC,CAAC;QAC1C,IAAI,CAACP,qBAAqB,GAAG/W,KAAK,CAAC,GAAGoX,gBAAgB,CAAC,CAClDxB,SAAS,CAAC0B,CAAC,IAAI,IAAI,CAACtI,WAAW,CAACsI,CAAC,CAAC,CAAC;QACxC,IAAInQ,SAAS,CAAC,IAAI,CAACjE,gBAAgB,CAAC,EAAE;UAClC,IAAI,CAAC8T,kBAAkB,GAAGjX,SAAS,CAAC,IAAI,CAACmD,gBAAgB,EAAE,QAAQ,CAAC,CAC/D0S,SAAS,CAAC0B,CAAC,IAAI,IAAI,CAACvI,aAAa,CAACuI,CAAC,CAAC,CAAC;QAC9C;MACJ,CAAC,MACI;QACD,MAAMC,kBAAkB,GAAGpN,oBAAoB,CAAC+M,GAAG,CAAEC,EAAE,IAAKpX,SAAS,CAACuB,OAAO,EAAE6V,EAAE,CAAC,CAAC;QACnF,IAAI,CAACN,uBAAuB,GAAG7W,KAAK,CAAC,GAAGuX,kBAAkB,CAAC,CACtDF,IAAI,CAACpX,MAAM,CAAC,MAAM,IAAI,CAACsV,gBAAgB,KAAK,EAAE,CAAC,CAAC,CAChDK,SAAS,CAAE0B,CAAC,IAAK;UAClB,MAAME,aAAa,GAAGlQ,iBAAiB,CAACgQ,CAAC,CAAC9O,MAAM,EAAE,IAAI,CAACwN,qBAAqB,GAAG,IAAI,CAACC,UAAU,GAAG,IAAI,CAACV,gBAAgB,CAAC;UACvH,IAAIiC,aAAa,EAAE;YACf,IAAI,CAAClJ,aAAa,CAACgJ,CAAC,CAAC;UACzB;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACA9H,kBAAkBA,CAACzI,KAAK,EAAE8E,eAAe,EAAE;IACvC,MAAM4K,YAAY,GAAG;MAAE9T,UAAU,EAAE,IAAI,CAACqS,wBAAwB;MAAE5E,eAAe,EAAE,IAAI,CAAC3D,OAAO,CAAC1I;IAAU,CAAC;IAC3G,MAAMuO,UAAU,GAAG;MACf3P,UAAU,EAAE,IAAI,CAACqS,wBAAwB;MACzClJ,SAAS,EAAED,eAAe;MAC1BuE,eAAe,EAAE,IAAI,CAAC3D,OAAO,CAAC1I,SAAS;MACvCmM,YAAY,EAAE,IAAI,CAACA,YAAY,CAACuG,YAAY;IAChD,CAAC;IACD,IAAI,IAAI,CAAC9J,IAAI,IAAIxF,SAAS,CAAC,IAAI,CAACiH,QAAQ,CAAC,EAAE;MACvCkE,UAAU,CAACC,WAAW,GAAG,IAAI,CAACnE,QAAQ;IAC1C;IACA,IAAIoE,SAAS;IACb,QAAQzL,KAAK;MACT,KAAK,aAAa;QACdyL,SAAS,GAAG,IAAIxG,wBAAwB,CAACsG,UAAU,CAAC;QACpD;MACJ,KAAK,SAAS;QACVE,SAAS,GAAG,IAAI7G,oBAAoB,CAAC2G,UAAU,CAAC;QAChD;MACJ,KAAK,aAAa;QACdE,SAAS,GAAG,IAAIvG,wBAAwB,CAACqG,UAAU,CAAC;QACpD;MACJ,KAAK,QAAQ;QACTE,SAAS,GAAG,IAAIrG,mBAAmB,CAACmG,UAAU,CAAC;QAC/C;MACJ,KAAK,WAAW;QACZE,SAAS,GAAG,IAAIpG,sBAAsB,CAACkG,UAAU,CAAC;QAClD;MACJ,KAAK,WAAW;QACZE,SAAS,GAAG,IAAItG,sBAAsB,CAACoG,UAAU,CAAC;QAClD;MACJ;QACI;IACR;IACA,IAAI,CAAC9F,MAAM,CAACiG,GAAG,CAAC,MAAM;MAClB,IAAI,CAAC1L,KAAK,CAAC,CAAC2L,IAAI,CAACF,SAAS,CAAC;IAC/B,CAAC,CAAC;IACF,OAAOA,SAAS;EACpB;EACA5C,UAAUA,CAAA,EAAG;IACT,IAAI,EAAE/P,mBAAmB,CAAC,CAAC,IAAIsH,SAAS,CAAC,IAAI,CAAC0N,OAAO,CAAC,CAAC,EAAE;MACrD;IACJ;IACA,IAAI1N,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC,IAAI,OAAO,IAAI,CAACA,IAAI,KAAK,QAAQ,EAAE;MACvD,IAAIxF,SAAS,CAAC,IAAI,CAACwF,IAAI,CAACuB,YAAY,CAAC,EAAE;QACnC,IAAI,CAACqD,gBAAgB,CAAC,CAAC;MAC3B,CAAC,MACI;QACD,IAAI,CAACC,iBAAiB,CAAC,CAAC;MAC5B;IACJ,CAAC,MACI;MACD,IAAI,CAACA,iBAAiB,CAAC,CAAC;IAC5B;IACA,IAAI,CAACuD,iBAAiB,CAACpI,IAAI,GAAG,IAAI,CAACyB,QAAQ;IAC3C,IAAI,OAAO,IAAI,CAACzB,IAAI,KAAK,QAAQ,IAAIxF,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC8E,QAAQ,CAAC,EAAE;MAChE,IAAI,CAAC9E,IAAI,CAAC8E,QAAQ,CAACnQ,OAAO,CAAC6M,aAAa,CAACuD,WAAW,CAAC,IAAI,CAACtD,QAAQ,CAAC;IACvE,CAAC,MACI;MACD1J,QAAQ,CAACiN,IAAI,CAACD,WAAW,CAAC,IAAI,CAACtD,QAAQ,CAAC;IAC5C;EACJ;EACAoD,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAAC7D,WAAW,GAAG,IAAI,CAACqH,wBAAwB,CAACpD,SAAS,CAAC,IAAI,CAAC;IAChE,IAAI,OAAO,IAAI,CAACjF,IAAI,KAAK,QAAQ,EAAE;MAC/B,IAAIxF,SAAS,CAAC,IAAI,CAACwF,IAAI,CAACkF,SAAS,CAAC,EAAE;QAChC,MAAMC,WAAW,GAAGhS,kBAAkB,CAAC,IAAI,CAAC6M,IAAI,CAACkF,SAAS,CAAC;QAC3DC,WAAW,CAAC1J,OAAO,CAAC2J,SAAS,IAAI,IAAI,CAACpI,QAAQ,CAACqI,QAAQ,CAAC,IAAI,CAACrE,WAAW,EAAEoE,SAAS,CAAC,CAAC;MACzF;IACJ;EACJ;EACAR,gBAAgBA,CAAA,EAAG;IACf,IAAIpK,SAAS,CAAC,IAAI,CAACwF,IAAI,CAAC8E,QAAQ,CAAC,EAAE;MAC/B,IAAI,CAACnE,aAAa,GAAG,IAAI,CAACX,IAAI,CAAC8E,QAAQ,CAACQ,eAAe,CAAC3H,aAAa,CAAC;IAC1E,CAAC,MACI;MACD,IAAI,CAACgD,aAAa,GAAG,IAAI,CAACZ,aAAa,CAACuF,eAAe,CAAC3H,aAAa,CAAC;IAC1E;IACA,IAAI,CAACgD,aAAa,CAACe,QAAQ,CAACxD,QAAQ,GAAG,IAAI,CAACqD,YAAY;IACxD,IAAI,CAACZ,aAAa,CAACe,QAAQ,CAACvD,SAAS,GAAG,IAAI;IAC5C,IAAI,CAACwC,aAAa,CAACe,QAAQ,CAACtD,WAAW,GAAG,IAAI,CAAC0B,OAAO,CAAC1I,SAAS;IAChE,MAAM2S,cAAc,GAAG;MAAE/T,UAAU,EAAE,IAAI,CAACqS,wBAAwB;MAAE9E,YAAY,EAAE,IAAI,CAACzD,OAAO,CAACyD,YAAY;MAAEE,eAAe,EAAE,IAAI,CAAC3D,OAAO,CAAC1I;IAAU,CAAC;IACtJ,IAAI,CAACuJ,aAAa,CAACe,QAAQ,CAACrD,WAAW,GAAG,IAAI,CAAC6C,QAAQ,CAAC6I,cAAc,CAAC;IACvE,IAAI,CAACpJ,aAAa,CAAC4E,iBAAiB,CAACC,aAAa,CAAC,CAAC;EACxD;EACApB,WAAWA,CAAA,EAAG;IACV,IAAI5J,SAAS,CAAC,IAAI,CAAC+G,YAAY,CAAC,EAAE;MAC9B,IAAI,CAACZ,aAAa,CAAC8E,OAAO,CAAC,CAAC;MAC5B,IAAI,CAAC9E,aAAa,CAAC4E,iBAAiB,CAACC,aAAa,CAAC,CAAC;MACpD,IAAI,CAAC7E,aAAa,GAAG,IAAI;IAC7B,CAAC,MACI;MACD5I,QAAQ,CAACiN,IAAI,CAACU,WAAW,CAAC,IAAI,CAAC1E,WAAW,CAAC;MAC3C,IAAI,CAACA,WAAW,GAAG,IAAI;IAC3B;IACA,IAAI,CAACoH,iBAAiB,CAACpI,IAAI,GAAG,IAAI;EACtC;EACA2J,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACR,cAAc,CAAC2B,OAAO,CAAC,IAAI,CAACzC,wBAAwB,CAAC;EACrE;EACAS,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAACtO,SAAS,CAAC,IAAI,CAAC2O,cAAc,CAAC,EAAE;MACjC,IAAI,IAAI,CAACb,mBAAmB,CAACzG,MAAM,GAAG,CAAC,EAAE;QACrC,IAAI,CAACkH,oBAAoB,CAAC,CAAC;MAC/B;MACA;IACJ;IACA,IAAI,CAACI,cAAc,CAAC1N,OAAO,CAACsP,YAAY,IAAI;MACxC,MAAMC,uBAAuB,GAAG,IAAI,CAAClL,OAAO,CAAC5J,WAAW,CAAC+U,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACvW,OAAO,KAAKoW,YAAY,CAAC;MAChG,IAAI,CAACC,uBAAuB,EAAE;QAC1B,IAAI,CAAClL,OAAO,CAAC5J,WAAW,CAACuM,IAAI,CAAC;UAC1B9N,OAAO,EAAEoW,YAAY;UACrB/K,IAAI,EAAE,IAAI;UACVI,OAAO,EAAE,IAAI,CAACuC,WAAW,CAAC3J,IAAI,CAAC,IAAI,CAAC;UACpCwH,SAAS,EAAE,IAAI,CAACuD,aAAa,CAAC/K,IAAI,CAAC,IAAI,CAAC;UACxCqH,WAAW,EAAE,IAAI,CAACyC,eAAe,CAAC9J,IAAI,CAAC,IAAI,CAAC;UAC5CsH,MAAM,EAAE,IAAI,CAACoD,UAAU,CAAC1K,IAAI,CAAC,IAAI,CAAC;UAClCyH,SAAS,EAAE,IAAI,CAACuD,aAAa,CAAChL,IAAI,CAAC,IAAI;QAC3C,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IACF,IAAI,IAAI,CAACsP,mBAAmB,CAACzG,MAAM,GAAG,CAAC,EAAE;MACrC,MAAMsJ,mBAAmB,GAAG,IAAI,CAAC7C,mBAAmB,CAAChV,MAAM,CAAC4X,EAAE,IAAI,CAAC,IAAI,CAAC/B,cAAc,CAACiC,QAAQ,CAACF,EAAE,CAAC,CAAC;MACpGC,mBAAmB,CAAC1P,OAAO,CAACzF,UAAU,IAAI;QACtC,MAAMqV,GAAG,GAAG,IAAI,CAACvL,OAAO,CAAC5J,WAAW,CAACoV,SAAS,CAACC,iBAAiB,IAAIA,iBAAiB,CAAC5W,OAAO,KAAKqB,UAAU,CAAC;QAC7G,IAAIqV,GAAG,GAAG,CAAC,CAAC,EAAE;UACV,IAAI,CAACvL,OAAO,CAAC5J,WAAW,CAACsV,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC;QAC3C;MACJ,CAAC,CAAC;IACN;IACA,IAAI,CAAC/C,mBAAmB,GAAG,IAAI,CAACa,cAAc;IAC9C,IAAI,CAACf,iBAAiB,GAAG;MACrBzT,OAAO,EAAE,IAAI;MACbqL,IAAI,EAAE,IAAI;MACVI,OAAO,EAAE,IAAI,CAACuC,WAAW,CAAC3J,IAAI,CAAC,IAAI,CAAC;MACpCwH,SAAS,EAAE,IAAI,CAACuD,aAAa,CAAC/K,IAAI,CAAC,IAAI,CAAC;MACxCqH,WAAW,EAAE,IAAI,CAACyC,eAAe,CAAC9J,IAAI,CAAC,IAAI,CAAC;MAC5CsH,MAAM,EAAE,IAAI,CAACoD,UAAU,CAAC1K,IAAI,CAAC,IAAI,CAAC;MAClCyH,SAAS,EAAE,IAAI,CAACuD,aAAa,CAAChL,IAAI,CAAC,IAAI;IAC3C,CAAC;IACD,IAAI,CAACyS,cAAc,CAAC,CAAC;EACzB;EACA3J,YAAYA,CAAC9G,EAAE,EAAE;IACb,OAAO,IAAI,CAAC4G,WAAW,CAAC6C,IAAI,CAACC,EAAE,IAAIzR,QAAQ,CAACyR,EAAE,EAAE1J,EAAE,EAAE,IAAI,CAAC,CAAC;EAC9D;EACA,IAAIqO,qBAAqBA,CAAA,EAAG;IACxB,OAAO7O,SAAS,CAAC,IAAI,CAAC8O,UAAU,CAAC,IAAI,IAAI,CAACA,UAAU,KAAK,EAAE;EAC/D;EACAmC,cAAcA,CAAA,EAAG;IACb,IAAI,CAACvY,mBAAmB,CAAC,CAAC,EAAE;MACxB;IACJ;IACA,IAAIsH,SAAS,CAAC,IAAI,CAAC8O,UAAU,CAAC,IAAI,IAAI,CAACA,UAAU,KAAK,EAAE,EAAE;MACtD,IAAI9O,SAAS,CAAC,IAAI,CAACoH,WAAW,CAAC,IAAI,IAAI,CAACA,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;QAC5D,IAAI,CAACD,WAAW,CAACnG,OAAO,CAACiQ,MAAM,IAAI;UAC/B,IAAI,CAAC1O,QAAQ,CAACO,QAAQ,CAACmO,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;QACpD,CAAC,CAAC;MACN;IACJ,CAAC,MACI;MACD,IAAI,CAACvC,cAAc,CAAC1N,OAAO,CAACI,MAAM,IAAI;QAClC,IAAI,CAACmB,QAAQ,CAACO,QAAQ,CAAC1B,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;MACpD,CAAC,CAAC;IACN;EACJ;EACAuN,SAASA,CAACtT,QAAQ,EAAE;IAChB,IAAI0E,SAAS,CAAC1E,QAAQ,CAAC,IAAIA,QAAQ,KAAK,EAAE,EAAE;MACxC,OAAO6V,KAAK,CAACC,IAAI,CAAC,IAAI,CAACpK,aAAa,CAACqK,gBAAgB,CAAC/V,QAAQ,CAAC,CAAC;IACpE;EACJ;EACAiT,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACT,mBAAmB,CAAC7M,OAAO,CAACzF,UAAU,IAAI;MAC3C,MAAMqV,GAAG,GAAG,IAAI,CAACvL,OAAO,CAAC5J,WAAW,CAACoV,SAAS,CAACC,iBAAiB,IAAIA,iBAAiB,CAAC5W,OAAO,KAAKqB,UAAU,CAAC;MAC7G,IAAIqV,GAAG,GAAG,CAAC,CAAC,EAAE;QACV,IAAI,CAACvL,OAAO,CAAC5J,WAAW,CAACsV,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC;IACF,IAAI,CAAC/C,mBAAmB,GAAG,EAAE;EACjC;EACAxE,WAAWA,CAAA,EAAG;IACV,MAAM7G,IAAI,GAAG,IAAI,CAAC+C,IAAI,GAAG,IAAI,CAACyB,QAAQ,GAAG,IAAI,CAAC4G,wBAAwB;IACtE,IAAIpL,IAAI,EAAE;MACN,MAAMC,MAAM,GAAG,IAAI,CAAC8I,mBAAmB,CAAC/I,IAAI,CAAC;MAC7CF,gBAAgB,CAAC,IAAI,CAACC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,CAAC;IACjD;EACJ;EACAyG,iBAAiBA,CAAChP,OAAO,EAAEyF,KAAK,EAAE;IAC9B,IAAI2G,QAAQ,GAAG,IAAI;IACnB,IAAIpM,OAAO,KAAK,IAAI,CAAC8M,QAAQ,EAAE;MAC3BV,QAAQ,GAAG;QAAEnK,CAAC,EAAEwD,KAAK,CAACgJ,OAAO;QAAEvM,CAAC,EAAEuD,KAAK,CAACiJ;MAAQ,CAAC;IACrD,CAAC,MACI;MACDtC,QAAQ,GAAG;QAAEnK,CAAC,EAAEwD,KAAK,CAACgJ,OAAO,GAAG,IAAI,CAACtC,eAAe,CAAClK,CAAC,GAAGwD,KAAK,CAAC6L,OAAO;QAAEpP,CAAC,EAAEuD,KAAK,CAACiJ,OAAO,GAAG,IAAI,CAACvC,eAAe,CAACjK,CAAC,GAAGuD,KAAK,CAAC8L;MAAQ,CAAC;IACvI;IACA,OAAOnF,QAAQ;EACnB;EACAiF,mBAAmBA,CAACrR,OAAO,EAAE;IACzB,IAAIA,OAAO,KAAK,IAAI,CAAC8M,QAAQ,EAAE;MAC3B,MAAM2E,eAAe,GAAG;QAAExP,CAAC,EAAE,IAAI,CAACmK,QAAQ,CAACnK,CAAC,GAAG,IAAI,CAACkK,eAAe,CAAClK,CAAC;QAAEC,CAAC,EAAE,IAAI,CAACkK,QAAQ,CAAClK,CAAC,GAAG,IAAI,CAACiK,eAAe,CAACjK;MAAE,CAAC;MACpH,OAAO;QACHoF,GAAG,EAAG,GAAEmK,eAAe,CAACvP,CAAE,IAAG;QAC7BsF,IAAI,EAAG,GAAEiK,eAAe,CAACxP,CAAE,IAAG;QAC9BuN,UAAU,EAAE,MAAM;QAClBpD,QAAQ,EAAE,UAAU;QACpBsF,MAAM,EAAE;MACZ,CAAC;IACL,CAAC,MACI;MACD,MAAMC,SAAS,GAAI,aAAY,IAAI,CAACvF,QAAQ,CAACnK,CAAE,OAAM,IAAI,CAACmK,QAAQ,CAAClK,CAAE,KAAI;MACzE,OAAO;QACHyP,SAAS,EAAEA,SAAS;QACpBnC,UAAU,EAAE;MAChB,CAAC;IACL;EACJ;AACJ;AACA8D,4BAA4B,CAACpT,IAAI,YAAAiX,qCAAA/W,CAAA;EAAA,YAAAA,CAAA,IAAyFkT,4BAA4B,EAtkD/ClW,EAAE,CAAAiD,iBAAA,CAskD+DjD,EAAE,CAACkD,UAAU,GAtkD9ElD,EAAE,CAAAiD,iBAAA,CAskDyFjD,EAAE,CAAC0U,MAAM,GAtkDpG1U,EAAE,CAAAiD,iBAAA,CAskD+GjD,EAAE,CAACyU,SAAS,GAtkD7HzU,EAAE,CAAAiD,iBAAA,CAskDwIe,gBAAgB,GAtkD1JhE,EAAE,CAAAiD,iBAAA,CAskDqKjD,EAAE,CAAC2U,gBAAgB,GAtkD1L3U,EAAE,CAAAiD,iBAAA,CAskDqMjD,EAAE,CAACga,iBAAiB;AAAA,CAA4C;AAC9W9D,4BAA4B,CAAC/S,IAAI,kBAvkDsEnD,EAAE,CAAAoD,iBAAA;EAAAC,IAAA,EAukDK6S,4BAA4B;EAAA5S,SAAA;EAAA4I,MAAA;IAAA+B,IAAA;IAAA4I,gBAAA;IAAAU,UAAA;IAAApJ,SAAA;IAAAD,SAAA;IAAAsD,YAAA;IAAArC,QAAA;IAAA2H,YAAA;IAAA1I,IAAA;EAAA;EAAA+G,OAAA;IAAA3G,WAAA;IAAAH,OAAA;IAAAC,WAAA;IAAAC,MAAA;IAAAE,SAAA;IAAAC,SAAA;EAAA;EAAA/K,QAAA;AAAA,EAAse;AAChnB;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAxkDuG5D,EAAE,CAAA6D,iBAAA,CAwkDbqS,4BAA4B,EAAc,CAAC;IAC3H7S,IAAI,EAAEpD,SAAS;IACf6D,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,4BAA4B;MACtCJ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEN,IAAI,EAAErD,EAAE,CAACkD;IAAW,CAAC,EAAE;MAAEG,IAAI,EAAErD,EAAE,CAAC0U;IAAO,CAAC,EAAE;MAAErR,IAAI,EAAErD,EAAE,CAACyU;IAAU,CAAC,EAAE;MAAEpR,IAAI,EAAEW;IAAiB,CAAC,EAAE;MAAEX,IAAI,EAAErD,EAAE,CAAC2U;IAAiB,CAAC,EAAE;MAAEtR,IAAI,EAAErD,EAAE,CAACga;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE/L,IAAI,EAAE,CAAC;MAChO5K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEwW,gBAAgB,EAAE,CAAC;MACnBxT,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEkX,UAAU,EAAE,CAAC;MACblU,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE8N,SAAS,EAAE,CAAC;MACZ9K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE6N,SAAS,EAAE,CAAC;MACZ7K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEmR,YAAY,EAAE,CAAC;MACfnO,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE8O,QAAQ,EAAE,CAAC;MACX9L,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEyW,YAAY,EAAE,CAAC;MACfzT,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE+N,IAAI,EAAE,CAAC;MACP/K,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEmO,WAAW,EAAE,CAAC;MACdnL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAE6N,OAAO,EAAE,CAAC;MACVhL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAE8N,WAAW,EAAE,CAAC;MACdjL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAE+N,MAAM,EAAE,CAAC;MACTlL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEiO,SAAS,EAAE,CAAC;MACZpL,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEkO,SAAS,EAAE,CAAC;MACZrL,IAAI,EAAE7C;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMyZ,4BAA4B,CAAC;EAC/BtX,WAAWA,CAACoL,OAAO,EAAEnL,OAAO,EAAEkL,MAAM,EAAEsI,GAAG,EAAE;IACvC,IAAI,CAACrI,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACnL,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACkL,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACsI,GAAG,GAAGA,GAAG;IACd;AACR;AACA;IACQ,IAAI,CAACd,WAAW,GAAG,IAAIhV,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACiV,UAAU,GAAG,IAAIjV,YAAY,CAAC,CAAC;IACpC;AACR;AACA;IACQ,IAAI,CAACkV,WAAW,GAAG,IAAIlV,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACmV,MAAM,GAAG,IAAInV,YAAY,CAAC,CAAC;IAChC,IAAI,CAAC4Z,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,wBAAwB,GAAG,IAAI;IACpC,IAAI,CAACC,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1BzZ,eAAe,CAACsB,eAAe,CAAC;EACpC;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIoY,gBAAgBA,CAAC7R,KAAK,EAAE;IACxB,IAAI,CAAC2R,iBAAiB,GAAG3R,KAAK;IAC9B,IAAI,CAAC,IAAI,CAAC8R,YAAY,EAAE;MACpB,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAChC;EACJ;EACA,IAAIF,gBAAgBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACF,iBAAiB;EACjC;EACA;AACJ;AACA;EACI,IAAIG,YAAYA,CAAC9R,KAAK,EAAE;IACpB,IAAI,CAAC4R,aAAa,GAAG5R,KAAK;IAC1B,IAAIA,KAAK,EAAE;MACP,IAAI,CAACsO,oBAAoB,CAAC,CAAC;IAC/B,CAAC,MACI;MACD,IAAI,CAACyD,qBAAqB,CAAC,CAAC;IAChC;EACJ;EACA,IAAID,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACF,aAAa;EAC7B;EACA;AACJ;AACA;EACInD,MAAMA,CAAA,EAAG;IACL,IAAI,CAACf,GAAG,CAAC3C,aAAa,CAAC,CAAC;IACxB,IAAI,CAACgH,qBAAqB,CAAC,CAAC;EAChC;EACA,IAAIhL,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAC7M,OAAO,CAAC6M,aAAa;EACrC;EACA+H,eAAeA,CAAA,EAAG;IACd,CAAC,IAAI,CAACgD,YAAY,IAAI,IAAI,CAACC,qBAAqB,CAAC,CAAC;EACtD;EACA,IAAIC,cAAcA,CAAA,EAAG;IACjB,IAAIjS,SAAS,CAAC,IAAI,CAAC8R,gBAAgB,CAAC,IAAI,IAAI,CAACA,gBAAgB,KAAK,EAAE,EAAE;MAClE,OAAOX,KAAK,CAACC,IAAI,CAAC,IAAI,CAACpK,aAAa,CAACqK,gBAAgB,CAAC,IAAI,CAACS,gBAAgB,CAAC,CAAC;IACjF;EACJ;EACA;AACJ;AACA;EACI5E,eAAeA,CAACtN,KAAK,EAAE;IACnB,IAAI,CAAC,IAAI,CAAC0F,OAAO,CAAC9J,UAAU,EAAE;MAC1B;IACJ;IACA,MAAMyT,WAAW,GAAGrP,KAAK,CAACsP,aAAa,CAAC7N,MAAM;IAC9C,IAAI,CAACqQ,wBAAwB,GAAG7Q,SAAS,CAACoO,WAAW,EAAE,IAAI,CAACgD,cAAc,CAAC;IAC3E,IAAI,CAACR,iBAAiB,GAAG,IAAI,CAACnM,OAAO,CAAC3J,WAAW,CAAC8U,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACvW,OAAO,KAAK,IAAI,CAACuX,wBAAwB,CAAC;IAC1G,IAAI,CAACpM,OAAO,CAAC7J,UAAU,GAAG,IAAI,CAACgW,iBAAiB;IAChD,IAAI,CAACnM,OAAO,CAACzI,SAAS,GAAG,IAAI,CAACqV,YAAY,CAAC,CAAC;IAC5C,IAAI,CAAC7J,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC;EACjD;EACA;AACJ;AACA;EACIuN,eAAeA,CAACvN,KAAK,EAAE;IACnB,MAAMuS,mBAAmB,GAAGnS,SAAS,CAAC,IAAI,CAACsF,OAAO,CAAC7J,UAAU,CAAC,IAAIhD,QAAQ,CAAC,IAAI,CAAC6M,OAAO,CAAC7J,UAAU,EAAEtB,OAAO,EAAEyF,KAAK,CAACsP,aAAa,CAAC7N,MAAM,EAAE,KAAK,CAAC;IAC/I,IAAI8Q,mBAAmB,EAAE;MACrB;IACJ;IACA,IAAI,CAAC7M,OAAO,CAAC7J,UAAU,GAAG,IAAI;IAC9B,IAAI,CAAC,IAAI,CAAC6J,OAAO,CAAC9J,UAAU,EAAE;MAC1B;IACJ;IACA,IAAI,CAAC6M,kBAAkB,CAAC,aAAa,EAAEzI,KAAK,CAAC;EACjD;EACA;AACJ;AACA;EACIwN,cAAcA,CAACxN,KAAK,EAAE;IAClB,IAAI,CAAC,IAAI,CAAC0F,OAAO,CAAC9J,UAAU,EAAE;MAC1B;IACJ;IACA,IAAI,CAAC6M,kBAAkB,CAAC,YAAY,EAAEzI,KAAK,CAAC;EAChD;EACA;AACJ;AACA;EACIyN,UAAUA,CAACzN,KAAK,EAAE;IACd,IAAI,CAAC,IAAI,CAAC0F,OAAO,CAAC9J,UAAU,EAAE;MAC1B;IACJ;IACA,IAAI,CAAC6M,kBAAkB,CAAC,QAAQ,EAAEzI,KAAK,CAAC;IACxC,IAAI,CAAC6R,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,wBAAwB,GAAG,IAAI;IACpC,IAAI,CAACpM,OAAO,CAACzI,SAAS,GAAG,IAAI;EACjC;EACAmV,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAAChS,SAAS,CAAC,IAAI,CAACiS,cAAc,CAAC,EAAE;MACjC,IAAI,IAAI,CAACN,mBAAmB,CAACtK,MAAM,GAAG,CAAC,EAAE;QACrC,IAAI,CAACkH,oBAAoB,CAAC,CAAC;MAC/B;MACA;IACJ;IACA,IAAI,CAAC0D,cAAc,CAAChR,OAAO,CAACmR,YAAY,IAAI;MACxC,MAAMC,uBAAuB,GAAG,IAAI,CAAC/M,OAAO,CAAC3J,WAAW,CAAC8U,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACvW,OAAO,KAAKiY,YAAY,CAAC;MAChG,IAAI,CAACC,uBAAuB,EAAE;QAC1B,IAAI,CAAC/M,OAAO,CAAC3J,WAAW,CAACsM,IAAI,CAAC;UAC1B9N,OAAO,EAAEiY,YAAY;UACrBvF,WAAW,EAAE,IAAI,CAACK,eAAe,CAAC1O,IAAI,CAAC,IAAI,CAAC;UAC5CuO,WAAW,EAAE,IAAI,CAACI,eAAe,CAAC3O,IAAI,CAAC,IAAI,CAAC;UAC5CsO,UAAU,EAAE,IAAI,CAACM,cAAc,CAAC5O,IAAI,CAAC,IAAI,CAAC;UAC1CwO,MAAM,EAAE,IAAI,CAACK,UAAU,CAAC7O,IAAI,CAAC,IAAI;QACrC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IACF,IAAI,IAAI,CAACmT,mBAAmB,CAACtK,MAAM,GAAG,CAAC,EAAE;MACrC,MAAMiL,mBAAmB,GAAG,IAAI,CAACX,mBAAmB,CAAC7Y,MAAM,CAAC4X,EAAE,IAAI,CAAC,IAAI,CAACuB,cAAc,CAACrB,QAAQ,CAACF,EAAE,CAAC,CAAC;MACpG4B,mBAAmB,CAACrR,OAAO,CAACxF,UAAU,IAAI;QACtC,MAAMoV,GAAG,GAAG,IAAI,CAACvL,OAAO,CAAC3J,WAAW,CAACmV,SAAS,CAACyB,iBAAiB,IAAIA,iBAAiB,CAACpY,OAAO,KAAKsB,UAAU,CAAC;QAC7G,IAAIoV,GAAG,GAAG,CAAC,CAAC,EAAE;UACV,IAAI,CAACvL,OAAO,CAAC3J,WAAW,CAACqV,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC;QAC3C;MACJ,CAAC,CAAC;IACN;IACA,IAAI,CAACc,mBAAmB,GAAG,IAAI,CAACM,cAAc;EAClD;EACA5J,kBAAkBA,CAACzI,KAAK,EAAE8E,eAAe,EAAE;IACvC,MAAMyG,UAAU,GAAG;MACf3P,UAAU,EAAE,IAAI,CAAC8J,OAAO,CAAC9J,UAAU,EAAErB,OAAO;MAC5CsB,UAAU,EAAE,IAAI,CAACiW,wBAAwB;MACzChL,QAAQ,EAAE,IAAI,CAACpB,OAAO,CAACoB,QAAQ;MAC/B/B,SAAS,EAAED,eAAe;MAC1B8N,eAAe,EAAE,IAAI,CAAClN,OAAO,CAACzI;IAClC,CAAC;IACD,IAAImD,SAAS,CAAC,IAAI,CAACsF,OAAO,CAAC9J,UAAU,EAAEgK,IAAI,CAAC,EAAE;MAC1C2F,UAAU,CAACC,WAAW,GAAG,IAAI,CAAC9F,OAAO,CAAC9J,UAAU,CAACgK,IAAI;IACzD;IACA,MAAM6F,SAAS,GAAG,IAAIsB,eAAe,CAACxB,UAAU,CAAC;IACjD,IAAI,CAAC9F,MAAM,CAACiG,GAAG,CAAC,MAAM;MAClB,IAAI,CAAC1L,KAAK,CAAC,CAAC2L,IAAI,CAACF,SAAS,CAAC;IAC/B,CAAC,CAAC;EACN;EACA6G,YAAYA,CAAA,EAAG;IACX,MAAMO,UAAU,GAAG,IAAI,CAACzL,aAAa,CAACqK,gBAAgB,CAAC,IAAI,CAACS,gBAAgB,CAAC;IAC7E,OAAOX,KAAK,CAACC,IAAI,CAACqB,UAAU,CAAC,CAACnC,OAAO,CAAC,IAAI,CAACoB,wBAAwB,CAAC;EACxE;EACAnD,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACoD,mBAAmB,CAAC1Q,OAAO,CAACxF,UAAU,IAAI;MAC3C,MAAMoV,GAAG,GAAG,IAAI,CAACvL,OAAO,CAAC3J,WAAW,CAACmV,SAAS,CAACyB,iBAAiB,IAAIA,iBAAiB,CAACpY,OAAO,KAAKsB,UAAU,CAAC;MAC7G,IAAIoV,GAAG,GAAG,CAAC,CAAC,EAAE;QACV,IAAI,CAACvL,OAAO,CAAC3J,WAAW,CAACqV,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC;IACF,IAAI,CAACc,mBAAmB,GAAG,EAAE;EACjC;AACJ;AACAH,4BAA4B,CAACnX,IAAI,YAAAqY,qCAAAnY,CAAA;EAAA,YAAAA,CAAA,IAAyFiX,4BAA4B,EAlzD/Cja,EAAE,CAAAiD,iBAAA,CAkzD+De,gBAAgB,GAlzDjFhE,EAAE,CAAAiD,iBAAA,CAkzD4FjD,EAAE,CAACkD,UAAU,GAlzD3GlD,EAAE,CAAAiD,iBAAA,CAkzDsHjD,EAAE,CAAC0U,MAAM,GAlzDjI1U,EAAE,CAAAiD,iBAAA,CAkzD4IjD,EAAE,CAACga,iBAAiB;AAAA,CAA4C;AACrTC,4BAA4B,CAAC9W,IAAI,kBAnzDsEnD,EAAE,CAAAoD,iBAAA;EAAAC,IAAA,EAmzDK4W,4BAA4B;EAAA3W,SAAA;EAAA4I,MAAA;IAAAqO,gBAAA;IAAAC,YAAA;EAAA;EAAArF,OAAA;IAAAG,WAAA;IAAAC,UAAA;IAAAC,WAAA;IAAAC,MAAA;EAAA;EAAA9R,QAAA;AAAA,EAAkS;AAC5a;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KApzDuG5D,EAAE,CAAA6D,iBAAA,CAozDboW,4BAA4B,EAAc,CAAC;IAC3H5W,IAAI,EAAEpD,SAAS;IACf6D,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,4BAA4B;MACtCJ,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEN,IAAI,EAAEW;IAAiB,CAAC,EAAE;MAAEX,IAAI,EAAErD,EAAE,CAACkD;IAAW,CAAC,EAAE;MAAEG,IAAI,EAAErD,EAAE,CAAC0U;IAAO,CAAC,EAAE;MAAErR,IAAI,EAAErD,EAAE,CAACga;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEO,gBAAgB,EAAE,CAAC;MACrLlX,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEma,YAAY,EAAE,CAAC;MACfnX,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEiV,WAAW,EAAE,CAAC;MACdjS,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAE+U,UAAU,EAAE,CAAC;MACblS,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEgV,WAAW,EAAE,CAAC;MACdnS,IAAI,EAAE7C;IACV,CAAC,CAAC;IAAEiV,MAAM,EAAE,CAAC;MACTpS,IAAI,EAAE7C;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM4a,OAAO,GAAG,CACZvN,mBAAmB,EACnBnL,mBAAmB,EACnB2S,mBAAmB,EACnBa,4BAA4B,EAC5B+D,4BAA4B,EAC5BrO,aAAa,CAChB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMyP,iBAAiB,CAAC;AAExBA,iBAAiB,CAACvY,IAAI,YAAAwY,0BAAAtY,CAAA;EAAA,YAAAA,CAAA,IAAyFqY,iBAAiB;AAAA,CAAkD;AAClLA,iBAAiB,CAACE,IAAI,kBAl3DiFvb,EAAE,CAAAwb,gBAAA;EAAAnY,IAAA,EAk3DOgY;AAAiB,EAUxG;AACzBA,iBAAiB,CAACI,IAAI,kBA73DiFzb,EAAE,CAAA0b,gBAAA;EAAAC,OAAA,GA63DoC,CAAC/a,YAAY,CAAC;AAAA,EAAI;AAC/J;EAAA,QAAAgD,SAAA,oBAAAA,SAAA,KA93DuG5D,EAAE,CAAA6D,iBAAA,CA83DbwX,iBAAiB,EAAc,CAAC;IAChHhY,IAAI,EAAE3C,QAAQ;IACdoD,IAAI,EAAE,CAAC;MACC8X,YAAY,EAAE,CAAC,GAAGR,OAAO,CAAC;MAC1BS,OAAO,EAAE,CAAC,GAAGT,OAAO,CAAC;MACrBO,OAAO,EAAE,CAAC/a,YAAY,CAAC;MACvBkb,eAAe,EAAE,CAAClQ,aAAa;IACnC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmQ,WAAW,CAAC;AAElBA,WAAW,CAACjZ,IAAI,YAAAkZ,oBAAAhZ,CAAA;EAAA,YAAAA,CAAA,IAAyF+Y,WAAW;AAAA,CAAkD;AACtKA,WAAW,CAACR,IAAI,kBA16DuFvb,EAAE,CAAAwb,gBAAA;EAAAnY,IAAA,EA06DC0Y;AAAW,EAAiC;AACtJA,WAAW,CAACN,IAAI,kBA36DuFzb,EAAE,CAAA0b,gBAAA;EAAAC,OAAA,GA26DwBN,iBAAiB;AAAA,EAAI;AACtJ;EAAA,QAAAzX,SAAA,oBAAAA,SAAA,KA56DuG5D,EAAE,CAAA6D,iBAAA,CA46DbkY,WAAW,EAAc,CAAC;IAC1G1Y,IAAI,EAAE3C,QAAQ;IACdoD,IAAI,EAAE,CAAC;MACC+X,OAAO,EAAE,CAACR,iBAAiB;IAC/B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASA,iBAAiB,EAAE3Y,mBAAmB,EAAEwT,4BAA4B,EAAErI,mBAAmB,EAAEL,sBAAsB,EAAEC,mBAAmB,EAAEH,wBAAwB,EAAEC,wBAAwB,EAAEN,oBAAoB,EAAES,sBAAsB,EAAEuM,4BAA4B,EAAE5E,mBAAmB,EAAED,eAAe,EAAExJ,aAAa,EAAEmQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}