{"ast":null,"code":"import BaseSurface from '../core/surface';\nimport RootNode from './root-node';\nimport Group from '../shapes/group';\nimport transform from '../geometry/transform';\nimport renderSVG from './utils/render-svg';\nimport { SVG_NS } from './constants';\nimport { bindEvents, unbindEvents, elementStyles } from '../util';\nimport ArcNode from './arc-node';\nimport CircleNode from './circle-node';\nimport GroupNode from './group-node';\nimport ImageNode from './image-node';\nimport MultiPathNode from './multi-path-node';\nimport PathNode from './path-node';\nimport RectNode from './rect-node';\nimport TextNode from './text-node';\nimport NODE_MAP from './node-map';\nNODE_MAP.Arc = ArcNode;\nNODE_MAP.Circle = CircleNode;\nNODE_MAP.Group = GroupNode;\nNODE_MAP.Image = ImageNode;\nNODE_MAP.MultiPath = MultiPathNode;\nNODE_MAP.Path = PathNode;\nNODE_MAP.Rect = RectNode;\nNODE_MAP.Text = TextNode;\nconst RTL = 'rtl';\nfunction alignToScreen(element) {\n  let ctm;\n  try {\n    ctm = element.getScreenCTM ? element.getScreenCTM() : null;\n  } catch (e) {} // eslint-disable-line no-empty\n\n  if (ctm) {\n    const left = -ctm.e % 1;\n    const top = -ctm.f % 1;\n    const style = element.style;\n    if (left !== 0 || top !== 0) {\n      style.left = left + \"px\";\n      style.top = top + \"px\";\n    }\n  }\n}\nclass Surface extends BaseSurface {\n  get type() {\n    return \"svg\";\n  }\n  constructor(element, options) {\n    super(element, options);\n    this._root = new RootNode(Object.assign({\n      rtl: elementStyles(element, 'direction').direction === RTL\n    }, this.options));\n    renderSVG(this.element, this._template(''));\n    this._rootElement = this.element.firstElementChild;\n    this._rootElement.style.width = '100%';\n    this._rootElement.style.height = '100%';\n    this._rootElement.style.overflow = 'hidden';\n    alignToScreen(this._rootElement);\n    this._root.attachTo(this._rootElement);\n    bindEvents(this.element, {\n      click: this._click,\n      mouseover: this._mouseenter,\n      mouseout: this._mouseleave,\n      mousemove: this._mousemove\n    });\n    this.resize();\n  }\n  destroy() {\n    if (this._root) {\n      this._root.destroy();\n      this._root = null;\n      this._rootElement = null;\n      unbindEvents(this.element, {\n        click: this._click,\n        mouseover: this._mouseenter,\n        mouseout: this._mouseleave,\n        mousemove: this._mousemove\n      });\n    }\n    super.destroy();\n  }\n  translate(offset) {\n    const viewBox = `${Math.round(offset.x)} ${Math.round(offset.y)} ${this._size.width} ${this._size.height}`;\n    this._offset = offset;\n    this._rootElement.setAttribute(\"viewBox\", viewBox);\n  }\n  draw(element) {\n    super.draw(element);\n    this._root.load([element]);\n  }\n  clear() {\n    super.clear();\n    this._root.clear();\n  }\n  svg() {\n    return \"<?xml version='1.0' ?>\" + this._template();\n  }\n  exportVisual() {\n    let {\n      _visual: visual,\n      _offset: offset\n    } = this;\n    if (offset) {\n      const wrap = new Group();\n      wrap.children.push(visual);\n      wrap.transform(transform().translate(-offset.x, -offset.y));\n      visual = wrap;\n    }\n    return visual;\n  }\n  _resize() {\n    if (this._offset) {\n      this.translate(this._offset);\n    }\n  }\n  _template(svgStyles) {\n    const styles = typeof svgStyles === 'string' ? svgStyles : \"style='width: 100%; height: 100%; overflow: hidden;' \";\n    return `<svg ${styles}xmlns='${SVG_NS}' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>${this._root.render()}</svg>`;\n  }\n}\nexport default Surface;","map":{"version":3,"names":["BaseSurface","RootNode","Group","transform","renderSVG","SVG_NS","bindEvents","unbindEvents","elementStyles","ArcNode","CircleNode","GroupNode","ImageNode","MultiPathNode","PathNode","RectNode","TextNode","NODE_MAP","Arc","Circle","Image","MultiPath","Path","Rect","Text","RTL","alignToScreen","element","ctm","getScreenCTM","e","left","top","f","style","Surface","type","constructor","options","_root","Object","assign","rtl","direction","_template","_rootElement","firstElementChild","width","height","overflow","attachTo","click","_click","mouseover","_mouseenter","mouseout","_mouseleave","mousemove","_mousemove","resize","destroy","translate","offset","viewBox","Math","round","x","y","_size","_offset","setAttribute","draw","load","clear","svg","exportVisual","_visual","visual","wrap","children","push","_resize","svgStyles","styles","render"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/svg/surface.js"],"sourcesContent":["import BaseSurface from '../core/surface';\nimport RootNode from './root-node';\nimport Group from '../shapes/group';\nimport transform from '../geometry/transform';\nimport renderSVG from './utils/render-svg';\nimport { SVG_NS } from './constants';\nimport { bindEvents, unbindEvents, elementStyles } from '../util';\n\nimport ArcNode from './arc-node';\nimport CircleNode from './circle-node';\nimport GroupNode from './group-node';\nimport ImageNode from './image-node';\nimport MultiPathNode from './multi-path-node';\nimport PathNode from './path-node';\nimport RectNode from './rect-node';\nimport TextNode from './text-node';\nimport NODE_MAP from './node-map';\n\nNODE_MAP.Arc = ArcNode;\nNODE_MAP.Circle = CircleNode;\nNODE_MAP.Group = GroupNode;\nNODE_MAP.Image = ImageNode;\nNODE_MAP.MultiPath = MultiPathNode;\nNODE_MAP.Path = PathNode;\nNODE_MAP.Rect = RectNode;\nNODE_MAP.Text = TextNode;\n\nconst RTL = 'rtl';\n\nfunction alignToScreen(element) {\n    let ctm;\n\n    try {\n        ctm = element.getScreenCTM ? element.getScreenCTM() : null;\n    } catch (e) { } // eslint-disable-line no-empty\n\n    if (ctm) {\n        const left = - ctm.e % 1;\n        const top = - ctm.f % 1;\n        const style = element.style;\n\n        if (left !== 0 || top !== 0) {\n            style.left = left + \"px\";\n            style.top = top + \"px\";\n        }\n    }\n}\n\nclass Surface extends BaseSurface {\n    get type() {\n        return \"svg\";\n    }\n\n    constructor(element, options) {\n        super(element, options);\n\n        this._root = new RootNode(Object.assign({\n            rtl: elementStyles(element, 'direction').direction === RTL\n        }, this.options));\n\n        renderSVG(this.element, this._template(''));\n\n        this._rootElement = this.element.firstElementChild;\n        this._rootElement.style.width = '100%';\n        this._rootElement.style.height = '100%';\n        this._rootElement.style.overflow = 'hidden';\n\n        alignToScreen(this._rootElement);\n\n        this._root.attachTo(this._rootElement);\n\n        bindEvents(this.element, {\n            click: this._click,\n            mouseover: this._mouseenter,\n            mouseout: this._mouseleave,\n            mousemove: this._mousemove\n        });\n\n        this.resize();\n    }\n\n    destroy() {\n        if (this._root) {\n            this._root.destroy();\n            this._root = null;\n            this._rootElement = null;\n            unbindEvents(this.element, {\n                click: this._click,\n                mouseover: this._mouseenter,\n                mouseout: this._mouseleave,\n                mousemove: this._mousemove\n            });\n        }\n\n        super.destroy();\n    }\n\n    translate(offset) {\n        const viewBox = `${ Math.round(offset.x) } ${ Math.round(offset.y) } ${ this._size.width } ${ this._size.height }`;\n\n        this._offset = offset;\n        this._rootElement.setAttribute(\"viewBox\", viewBox);\n    }\n\n    draw(element) {\n        super.draw(element);\n        this._root.load([ element ]);\n    }\n\n    clear() {\n        super.clear();\n        this._root.clear();\n    }\n\n    svg() {\n        return \"<?xml version='1.0' ?>\" + this._template();\n    }\n\n    exportVisual() {\n        let { _visual: visual, _offset: offset } = this;\n\n        if (offset) {\n            const wrap = new Group();\n            wrap.children.push(visual);\n\n            wrap.transform(\n                transform().translate(-offset.x, -offset.y)\n            );\n\n            visual = wrap;\n        }\n\n        return visual;\n    }\n\n    _resize() {\n        if (this._offset) {\n            this.translate(this._offset);\n        }\n    }\n\n    _template(svgStyles) {\n        const styles = typeof svgStyles === 'string' ? svgStyles :\n            \"style='width: 100%; height: 100%; overflow: hidden;' \";\n        return `<svg ${styles}xmlns='${ SVG_NS }' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>${ this._root.render() }</svg>`;\n    }\n}\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}