{"ast":null,"code":"import HasObservers from '../core/has-observers';\nconst push = [].push;\nconst pop = [].pop;\nconst splice = [].splice;\nconst shift = [].shift;\nconst slice = [].slice;\nconst unshift = [].unshift;\nclass ElementsArray extends HasObservers {\n  constructor(array = []) {\n    super();\n    this.length = 0;\n    this._splice(0, array.length, array);\n  }\n  elements(value) {\n    if (value) {\n      this._splice(0, this.length, value);\n      this._change();\n      return this;\n    }\n    return this.slice(0);\n  }\n  push() {\n    const elements = arguments;\n    const result = push.apply(this, elements);\n    this._add(elements);\n    return result;\n  }\n  slice() {\n    return slice.call(this);\n  }\n  pop() {\n    const length = this.length;\n    const result = pop.apply(this);\n    if (length) {\n      this._remove([result]);\n    }\n    return result;\n  }\n  splice(index, howMany) {\n    const elements = slice.call(arguments, 2);\n    const result = this._splice(index, howMany, elements);\n    this._change();\n    return result;\n  }\n  shift() {\n    const length = this.length;\n    const result = shift.apply(this);\n    if (length) {\n      this._remove([result]);\n    }\n    return result;\n  }\n  unshift() {\n    const elements = arguments;\n    const result = unshift.apply(this, elements);\n    this._add(elements);\n    return result;\n  }\n  indexOf(element) {\n    const length = this.length;\n    for (let idx = 0; idx < length; idx++) {\n      if (this[idx] === element) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n  _splice(index, howMany, elements) {\n    const result = splice.apply(this, [index, howMany].concat(elements));\n    this._clearObserver(result);\n    this._setObserver(elements);\n    return result;\n  }\n  _add(elements) {\n    this._setObserver(elements);\n    this._change();\n  }\n  _remove(elements) {\n    this._clearObserver(elements);\n    this._change();\n  }\n  _setObserver(elements) {\n    for (let idx = 0; idx < elements.length; idx++) {\n      elements[idx].addObserver(this);\n    }\n  }\n  _clearObserver(elements) {\n    for (let idx = 0; idx < elements.length; idx++) {\n      elements[idx].removeObserver(this);\n    }\n  }\n  _change() {}\n}\nexport default ElementsArray;","map":{"version":3,"names":["HasObservers","push","pop","splice","shift","slice","unshift","ElementsArray","constructor","array","length","_splice","elements","value","_change","arguments","result","apply","_add","call","_remove","index","howMany","indexOf","element","idx","concat","_clearObserver","_setObserver","addObserver","removeObserver"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/shapes/elements-array.js"],"sourcesContent":["import HasObservers from '../core/has-observers';\n\nconst push = [].push;\nconst pop = [].pop;\nconst splice = [].splice;\nconst shift = [].shift;\nconst slice = [].slice;\nconst unshift = [].unshift;\n\nclass ElementsArray extends HasObservers {\n    constructor(array = []) {\n        super();\n\n        this.length = 0;\n        this._splice(0, array.length, array);\n    }\n\n    elements(value) {\n        if (value) {\n            this._splice(0, this.length, value);\n\n            this._change();\n            return this;\n        }\n\n        return this.slice(0);\n    }\n\n    push() {\n        const elements = arguments;\n        const result = push.apply(this, elements);\n\n        this._add(elements);\n\n        return result;\n    }\n\n    slice() {\n        return slice.call(this);\n    }\n\n    pop() {\n        const length = this.length;\n        const result = pop.apply(this);\n\n        if (length) {\n            this._remove([ result ]);\n        }\n\n        return result;\n    }\n\n    splice(index, howMany) {\n        const elements = slice.call(arguments, 2);\n        const result = this._splice(index, howMany, elements);\n\n        this._change();\n\n        return result;\n    }\n\n    shift() {\n        const length = this.length;\n        const result = shift.apply(this);\n\n        if (length) {\n            this._remove([ result ]);\n        }\n\n        return result;\n    }\n\n    unshift() {\n        const elements = arguments;\n        const result = unshift.apply(this, elements);\n\n        this._add(elements);\n\n        return result;\n    }\n\n    indexOf(element) {\n        const length = this.length;\n\n        for (let idx = 0; idx < length; idx++) {\n            if (this[idx] === element) {\n                return idx;\n            }\n        }\n        return -1;\n    }\n\n    _splice(index, howMany, elements) {\n        const result = splice.apply(this, [ index, howMany ].concat(elements));\n\n        this._clearObserver(result);\n        this._setObserver(elements);\n\n        return result;\n    }\n\n    _add(elements) {\n        this._setObserver(elements);\n        this._change();\n    }\n\n    _remove(elements) {\n        this._clearObserver(elements);\n        this._change();\n    }\n\n    _setObserver(elements) {\n        for (let idx = 0; idx < elements.length; idx++) {\n            elements[idx].addObserver(this);\n        }\n    }\n\n    _clearObserver(elements) {\n        for (let idx = 0; idx < elements.length; idx++) {\n            elements[idx].removeObserver(this);\n        }\n    }\n\n    _change() {}\n}\n\nexport default ElementsArray;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}