{"ast":null,"code":"import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport { round, setDefaultOptions } from '../common';\nimport { CENTER, CIRCLE, COORD_PRECISION, CROSS, ROUNDED_RECT, TRIANGLE } from '../common/constants';\nimport { valueOrDefault } from '../drawing-utils';\nimport BoxElement from './box-element';\nclass ShapeElement extends BoxElement {\n  constructor(options, pointData) {\n    super(options);\n    this.pointData = pointData;\n  }\n  getElement() {\n    const {\n      options,\n      paddingBox: box\n    } = this;\n    const {\n      type,\n      rotation\n    } = options;\n    const center = box.center();\n    const halfWidth = box.width() / 2;\n    const halfHeight = box.height() / 2;\n    if (!options.visible || !this.hasBox()) {\n      return null;\n    }\n    const style = this.visualStyle();\n    let element;\n    if (type === CIRCLE) {\n      element = new draw.Circle(new geom.Circle([round(box.x1 + halfWidth, COORD_PRECISION), round(box.y1 + halfHeight, COORD_PRECISION)], Math.min(halfWidth, halfHeight)), style);\n    } else if (type === TRIANGLE) {\n      element = draw.Path.fromPoints([[box.x1 + halfWidth, box.y1], [box.x1, box.y2], [box.x2, box.y2]], style).close();\n    } else if (type === CROSS) {\n      element = new draw.MultiPath(style);\n      element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n      element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n    } else {\n      const rect = box.toRect();\n      if (type === ROUNDED_RECT) {\n        const borderRadius = valueOrDefault(options.borderRadius, rect.width() / 5);\n        rect.setCornerRadius(borderRadius);\n      }\n      element = draw.Path.fromRect(rect, style);\n    }\n    if (rotation) {\n      element.transform(geom.transform().rotate(-rotation, [center.x, center.y]));\n    }\n    element.options.zIndex = options.zIndex;\n    return element;\n  }\n  createElement() {\n    const customVisual = this.options.visual;\n    const pointData = this.pointData || {};\n    let visual;\n    if (customVisual) {\n      visual = customVisual({\n        value: pointData.value,\n        dataItem: pointData.dataItem,\n        sender: this.getSender(),\n        series: pointData.series,\n        category: pointData.category,\n        rect: this.paddingBox.toRect(),\n        options: this.visualOptions(),\n        createVisual: () => this.getElement()\n      });\n    } else {\n      visual = this.getElement();\n    }\n    return visual;\n  }\n  visualOptions() {\n    const options = this.options;\n    return {\n      background: options.background,\n      border: options.border,\n      margin: options.margin,\n      padding: options.padding,\n      type: options.type,\n      size: options.width,\n      visible: options.visible\n    };\n  }\n  createVisual() {\n    this.visual = this.createElement();\n  }\n}\nsetDefaultOptions(ShapeElement, {\n  type: CIRCLE,\n  align: CENTER,\n  vAlign: CENTER\n});\nexport default ShapeElement;","map":{"version":3,"names":["drawing","draw","geometry","geom","round","setDefaultOptions","CENTER","CIRCLE","COORD_PRECISION","CROSS","ROUNDED_RECT","TRIANGLE","valueOrDefault","BoxElement","ShapeElement","constructor","options","pointData","getElement","paddingBox","box","type","rotation","center","halfWidth","width","halfHeight","height","visible","hasBox","style","visualStyle","element","Circle","x1","y1","Math","min","Path","fromPoints","y2","x2","close","MultiPath","moveTo","lineTo","rect","toRect","borderRadius","setCornerRadius","fromRect","transform","rotate","x","y","zIndex","createElement","customVisual","visual","value","dataItem","sender","getSender","series","category","visualOptions","createVisual","background","border","margin","padding","size","align","vAlign"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/core/shape-element.js"],"sourcesContent":["import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport { round, setDefaultOptions } from '../common';\nimport { CENTER, CIRCLE, COORD_PRECISION, CROSS, ROUNDED_RECT, TRIANGLE } from '../common/constants';\nimport { valueOrDefault } from '../drawing-utils';\nimport BoxElement from './box-element';\n\nclass ShapeElement extends BoxElement {\n\n    constructor(options, pointData) {\n        super(options);\n\n        this.pointData = pointData;\n    }\n\n    getElement() {\n        const { options, paddingBox: box } = this;\n        const { type, rotation } = options;\n        const center = box.center();\n        const halfWidth = box.width() / 2;\n        const halfHeight = box.height() / 2;\n\n        if (!options.visible || !this.hasBox()) {\n            return null;\n        }\n\n        const style = this.visualStyle();\n        let element;\n\n        if (type === CIRCLE) {\n            element = new draw.Circle(\n                new geom.Circle([\n                    round(box.x1 + halfWidth, COORD_PRECISION),\n                    round(box.y1 + halfHeight, COORD_PRECISION)\n                ], Math.min(halfWidth, halfHeight)),\n                style\n            );\n        } else if (type === TRIANGLE) {\n            element = draw.Path.fromPoints([\n                [ box.x1 + halfWidth, box.y1 ],\n                [ box.x1, box.y2 ],\n                [ box.x2, box.y2 ]\n            ], style).close();\n        } else if (type === CROSS) {\n            element = new draw.MultiPath(style);\n\n            element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n            element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n        } else {\n            const rect = box.toRect();\n            if (type === ROUNDED_RECT) {\n                const borderRadius = valueOrDefault(options.borderRadius, rect.width() / 5);\n                rect.setCornerRadius(borderRadius);\n            }\n\n            element = draw.Path.fromRect(rect, style);\n        }\n\n        if (rotation) {\n            element.transform(geom.transform()\n                .rotate(-rotation, [ center.x, center.y ])\n            );\n        }\n\n        element.options.zIndex = options.zIndex;\n\n        return element;\n    }\n\n    createElement() {\n        const customVisual = this.options.visual;\n        const pointData = this.pointData || {};\n        let visual;\n\n        if (customVisual) {\n            visual = customVisual({\n                value: pointData.value,\n                dataItem: pointData.dataItem,\n                sender: this.getSender(),\n                series: pointData.series,\n                category: pointData.category,\n                rect: this.paddingBox.toRect(),\n                options: this.visualOptions(),\n                createVisual: () => this.getElement()\n            });\n        } else {\n            visual = this.getElement();\n        }\n\n        return visual;\n    }\n\n    visualOptions() {\n        const options = this.options;\n        return {\n            background: options.background,\n            border: options.border,\n            margin: options.margin,\n            padding: options.padding,\n            type: options.type,\n            size: options.width,\n            visible: options.visible\n        };\n    }\n\n    createVisual() {\n        this.visual = this.createElement();\n    }\n}\n\nsetDefaultOptions(ShapeElement, {\n    type: CIRCLE,\n    align: CENTER,\n    vAlign: CENTER\n});\n\nexport default ShapeElement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}