{"ast":null,"code":"import { exec, map, aggregatesCombinator, expandAggregates } from '../transducers';\nconst identity = map(x => x);\n// tslint:disable:max-line-length\n/**\n * Applies the specified [AggregateDescriptors]({% slug api_kendo-data-query_aggregatedescriptor %}) to the data. Returns an [AggregateResult]({% slug api_kendo-data-query_aggregateresult %}) instance.\n *\n * @example\n * ```ts\n * const data = [\n *    { unitPrice: 23, unitsInStock: 21 },\n *    { unitPrice: 10, unitsInStock: 12 },\n *    { unitPrice: 20, unitsInStock: 33 }\n * ];\n *\n * const result = aggregateBy(data, [\n *   { aggregate: \"sum\", field: \"unitPrice\" },\n *   { aggregate: \"sum\", field: \"unitsInStock\" }\n * ]);\n *\n * //output:\n * // {\n * //     \"unitPrice\": { \"sum\": 53 },\n * //     \"unitsInStock\": { \"sum\": 66 }\n * // }\n * ```\n * @param {T[]} data - The data on which the calculation will be executed.\n * @param {AggregateDescriptor[]} descriptors - The aggregate operations that will be executed.\n * @param {any} transformers - For internal use.\n * @returns {AggregateResult} - The aggregated result.\n * For more information, refer to the [aggregateresult](slug:api_kendo-data-query_aggregateresult) configuration.\n */\n// tslint:enable:max-line-length\nexport const aggregateBy = (data, descriptors = [], transformers = identity) => {\n  const initialValue = {};\n  if (!descriptors.length) {\n    return initialValue;\n  }\n  const result = exec(transformers(aggregatesCombinator(descriptors)), initialValue, data);\n  return expandAggregates(result);\n};","map":{"version":3,"names":["exec","map","aggregatesCombinator","expandAggregates","identity","x","aggregateBy","data","descriptors","transformers","initialValue","length","result"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-data-query/dist/es2015/grouping/aggregate.operators.js"],"sourcesContent":["import { exec, map, aggregatesCombinator, expandAggregates } from '../transducers';\nconst identity = map(x => x);\n// tslint:disable:max-line-length\n/**\n * Applies the specified [AggregateDescriptors]({% slug api_kendo-data-query_aggregatedescriptor %}) to the data. Returns an [AggregateResult]({% slug api_kendo-data-query_aggregateresult %}) instance.\n *\n * @example\n * ```ts\n * const data = [\n *    { unitPrice: 23, unitsInStock: 21 },\n *    { unitPrice: 10, unitsInStock: 12 },\n *    { unitPrice: 20, unitsInStock: 33 }\n * ];\n *\n * const result = aggregateBy(data, [\n *   { aggregate: \"sum\", field: \"unitPrice\" },\n *   { aggregate: \"sum\", field: \"unitsInStock\" }\n * ]);\n *\n * //output:\n * // {\n * //     \"unitPrice\": { \"sum\": 53 },\n * //     \"unitsInStock\": { \"sum\": 66 }\n * // }\n * ```\n * @param {T[]} data - The data on which the calculation will be executed.\n * @param {AggregateDescriptor[]} descriptors - The aggregate operations that will be executed.\n * @param {any} transformers - For internal use.\n * @returns {AggregateResult} - The aggregated result.\n * For more information, refer to the [aggregateresult](slug:api_kendo-data-query_aggregateresult) configuration.\n */\n// tslint:enable:max-line-length\nexport const aggregateBy = (data, descriptors = [], transformers = identity) => {\n    const initialValue = {};\n    if (!descriptors.length) {\n        return initialValue;\n    }\n    const result = exec(transformers(aggregatesCombinator(descriptors)), initialValue, data);\n    return expandAggregates(result);\n};\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,oBAAoB,EAAEC,gBAAgB,QAAQ,gBAAgB;AAClF,MAAMC,QAAQ,GAAGH,GAAG,CAACI,CAAC,IAAIA,CAAC,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,WAAW,GAAG,EAAE,EAAEC,YAAY,GAAGL,QAAQ,KAAK;EAC5E,MAAMM,YAAY,GAAG,CAAC,CAAC;EACvB,IAAI,CAACF,WAAW,CAACG,MAAM,EAAE;IACrB,OAAOD,YAAY;EACvB;EACA,MAAME,MAAM,GAAGZ,IAAI,CAACS,YAAY,CAACP,oBAAoB,CAACM,WAAW,CAAC,CAAC,EAAEE,YAAY,EAAEH,IAAI,CAAC;EACxF,OAAOJ,gBAAgB,CAACS,MAAM,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}