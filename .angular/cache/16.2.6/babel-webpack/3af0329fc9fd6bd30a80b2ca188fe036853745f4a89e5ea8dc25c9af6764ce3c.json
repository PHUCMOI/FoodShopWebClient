{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport { ChartElement, Box, Point } from '../../core';\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport { WHITE } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\nclass FunnelSegment extends ChartElement {\n  constructor(value, options, segmentOptions) {\n    super(options);\n    this.value = value;\n    this.options.index = segmentOptions.index;\n  }\n  reflow(chartBox) {\n    const points = this.points;\n    const label = this.children[0];\n    this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n    if (label) {\n      label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n    }\n  }\n  createVisual() {\n    const options = this.options;\n    let visual;\n    super.createVisual();\n    if (options.visual) {\n      visual = options.visual({\n        category: this.category,\n        dataItem: this.dataItem,\n        value: this.value,\n        series: this.series,\n        percentage: this.percentage,\n        points: this.points,\n        options: options,\n        sender: this.getSender(),\n        createVisual: () => this.createPath()\n      });\n    } else {\n      visual = this.createPath();\n    }\n    if (visual) {\n      this.visual.append(visual);\n    }\n  }\n  createPath() {\n    const options = this.options;\n    const border = options.border;\n    const path = draw.Path.fromPoints(this.points, {\n      fill: {\n        color: options.color,\n        opacity: options.opacity\n      },\n      stroke: {\n        color: border.color,\n        opacity: border.opacity,\n        width: border.width\n      }\n    }).close();\n    return path;\n  }\n  createHighlight(style) {\n    return draw.Path.fromPoints(this.points, style);\n  }\n  highlightVisual() {\n    return this.visual.children[0];\n  }\n  highlightVisualArgs() {\n    const path = draw.Path.fromPoints(this.points).close();\n    return {\n      options: this.options,\n      path: path\n    };\n  }\n  tooltipAnchor() {\n    const box = this.box;\n    return {\n      point: new Point(box.center().x, box.y1),\n      align: {\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    };\n  }\n  formatValue(format) {\n    const point = this;\n    return point.owner.formatPointValue(point, format);\n  }\n}\nsetDefaultOptions(FunnelSegment, {\n  color: WHITE,\n  border: {\n    width: 1\n  }\n});\ndeepExtend(FunnelSegment.prototype, PointEventsMixin);\nexport default FunnelSegment;","map":{"version":3,"names":["drawing","draw","ChartElement","Box","Point","PointEventsMixin","WHITE","deepExtend","setDefaultOptions","FunnelSegment","constructor","value","options","segmentOptions","index","reflow","chartBox","points","label","children","box","x","y","x1","x2","createVisual","visual","category","dataItem","series","percentage","sender","getSender","createPath","append","border","path","Path","fromPoints","fill","color","opacity","stroke","width","close","createHighlight","style","highlightVisual","highlightVisualArgs","tooltipAnchor","point","center","y1","align","horizontal","vertical","formatValue","format","owner","formatPointValue","prototype"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/funnel-chart/funnel-segment.js"],"sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement, Box, Point } from '../../core';\nimport PointEventsMixin from '../mixins/point-events-mixin';\n\nimport { WHITE } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\n\nclass FunnelSegment extends ChartElement {\n    constructor(value, options, segmentOptions) {\n        super(options);\n\n        this.value = value;\n        this.options.index = segmentOptions.index;\n    }\n\n    reflow(chartBox) {\n        const points = this.points;\n        const label = this.children[0];\n\n        this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n\n        if (label) {\n            label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n        }\n    }\n\n    createVisual() {\n        const options = this.options;\n        let visual;\n\n        super.createVisual();\n\n        if (options.visual) {\n            visual = options.visual({\n                category: this.category,\n                dataItem: this.dataItem,\n                value: this.value,\n                series: this.series,\n                percentage: this.percentage,\n                points: this.points,\n                options: options,\n                sender: this.getSender(),\n                createVisual: () => this.createPath()\n            });\n        } else {\n            visual = this.createPath();\n        }\n\n        if (visual) {\n            this.visual.append(visual);\n        }\n    }\n\n    createPath() {\n        const options = this.options;\n        const border = options.border;\n        const path = draw.Path.fromPoints(this.points, {\n            fill: {\n                color: options.color,\n                opacity: options.opacity\n            },\n            stroke: {\n                color: border.color,\n                opacity: border.opacity,\n                width: border.width\n            }\n        }).close();\n\n        return path;\n    }\n\n    createHighlight(style) {\n        return draw.Path.fromPoints(this.points, style);\n    }\n\n    highlightVisual() {\n        return this.visual.children[0];\n    }\n\n    highlightVisualArgs() {\n        const path = draw.Path.fromPoints(this.points).close();\n\n        return {\n            options: this.options,\n            path: path\n        };\n    }\n\n    tooltipAnchor() {\n        const box = this.box;\n        return {\n            point: new Point(box.center().x, box.y1),\n            align: {\n                horizontal: \"center\",\n                vertical: \"top\"\n            }\n        };\n    }\n\n    formatValue(format) {\n        const point = this;\n        return point.owner.formatPointValue(point, format);\n    }\n}\n\nsetDefaultOptions(FunnelSegment, {\n    color: WHITE,\n    border: {\n        width: 1\n    }\n});\n\ndeepExtend(FunnelSegment.prototype, PointEventsMixin);\n\nexport default FunnelSegment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}