{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { ARROW_POINTER } from '../constants';\nimport LinearPointer from './linear-pointer';\nimport ArrowLinearPointerAnimation from './arrow-linear-pointer-animation';\nconst Point = geo.Point;\nconst Path = drawing.Path;\nclass ArrowLinearPointer extends LinearPointer {\n  constructor(scale, options) {\n    super(scale, options);\n    if (!defined(this.options.size)) {\n      this.options.size = this.scale.options.majorTicks.size * 0.6;\n    }\n  }\n  pointerShape() {\n    const {\n      scale,\n      options: {\n        size\n      }\n    } = this;\n    const halfSize = size / 2;\n    const sign = scale.options.mirror ? -1 : 1;\n    let shape;\n    if (scale.options.vertical) {\n      shape = [new Point(0, 0 - halfSize), new Point(0 - sign * size, 0), new Point(0, 0 + halfSize)];\n    } else {\n      shape = [new Point(0 - halfSize, 0), new Point(0, 0 + sign * size), new Point(0 + halfSize, 0)];\n    }\n    return shape;\n  }\n  repaint() {\n    const {\n      scale,\n      options\n    } = this;\n    const animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n      vertical: scale.options.vertical,\n      mirror: scale.options.mirror,\n      margin: this._margin(options.margin),\n      from: scale.getSlot(options._oldValue),\n      to: scale.getSlot(options.value)\n    }));\n    if (options.animation.transitions === false) {\n      animation.options.duration = 0;\n    }\n    animation.setup();\n    animation.play();\n  }\n  render() {\n    const {\n      scale,\n      options\n    } = this;\n    const elementOptions = this.getElementOptions();\n    const shape = this.pointerShape(options.value);\n    options.animation.type = ARROW_POINTER;\n    const elements = new Path({\n      stroke: elementOptions.stroke,\n      fill: elementOptions.fill\n    }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n    const slot = scale.getSlot(options.value);\n    elements.transform(geo.transform().translate(slot.x1, slot.y1));\n    this.elements = elements;\n    return elements;\n  }\n}\nexport default ArrowLinearPointer;","map":{"version":3,"names":["geometry","geo","drawing","deepExtend","defined","ARROW_POINTER","LinearPointer","ArrowLinearPointerAnimation","Point","Path","ArrowLinearPointer","constructor","scale","options","size","majorTicks","pointerShape","halfSize","sign","mirror","shape","vertical","repaint","animation","elements","margin","_margin","from","getSlot","_oldValue","to","value","transitions","duration","setup","play","render","elementOptions","getElementOptions","type","stroke","fill","moveTo","lineTo","close","slot","transform","translate","x1","y1"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/gauges/linear/arrow-linear-pointer.js"],"sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { ARROW_POINTER } from '../constants';\nimport LinearPointer from './linear-pointer';\nimport ArrowLinearPointerAnimation from './arrow-linear-pointer-animation';\n\nconst Point = geo.Point;\nconst Path = drawing.Path;\n\nclass ArrowLinearPointer extends LinearPointer {\n    constructor(scale, options) {\n        super(scale, options);\n\n        if (!defined(this.options.size)) {\n            this.options.size = this.scale.options.majorTicks.size * 0.6;\n        }\n    }\n\n    pointerShape() {\n        const { scale, options: { size } } = this;\n        const halfSize = size / 2;\n        const sign = (scale.options.mirror ? -1 : 1);\n        let shape;\n\n        if (scale.options.vertical) {\n            shape = [\n                new Point(0, 0 - halfSize), new Point(0 - sign * size, 0), new Point(0, 0 + halfSize)\n            ];\n        } else {\n            shape = [\n                new Point(0 - halfSize, 0), new Point(0, 0 + sign * size), new Point(0 + halfSize, 0)\n            ];\n        }\n\n        return shape;\n    }\n\n    repaint() {\n        const { scale, options } = this;\n        const animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n            vertical: scale.options.vertical,\n            mirror: scale.options.mirror,\n            margin: this._margin(options.margin),\n            from: scale.getSlot(options._oldValue),\n            to: scale.getSlot(options.value)\n        }));\n\n        if (options.animation.transitions === false) {\n            animation.options.duration = 0;\n        }\n\n        animation.setup();\n        animation.play();\n    }\n\n    render() {\n        const { scale, options } = this;\n        const elementOptions = this.getElementOptions();\n        const shape = this.pointerShape(options.value);\n\n        options.animation.type = ARROW_POINTER;\n\n        const elements = new Path({\n            stroke: elementOptions.stroke,\n            fill: elementOptions.fill\n        }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n\n        const slot = scale.getSlot(options.value);\n        elements.transform(geo.transform().translate(slot.x1, slot.y1));\n\n        this.elements = elements;\n\n        return elements;\n    }\n}\n\nexport default ArrowLinearPointer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}