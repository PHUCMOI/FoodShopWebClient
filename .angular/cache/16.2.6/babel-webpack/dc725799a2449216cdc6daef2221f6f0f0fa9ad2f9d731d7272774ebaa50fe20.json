{"ast":null,"code":"import { zoneAndRule } from './zone-and-rule';\n/**\n * @hidden\n *\n * A function that calculates the time offset based on zone name.\n *\n * @param timezone - The timezone name. For example, `America/Chicago`, `Europe/Sofia`.\n * @param date - A date for which the zone rule will be located.\n *\n * @return - Returns the timezone offset in minutes at the specified time.\n */\nexport const offset = (timezone, date = new Date()) => {\n  if (timezone === 'Etc/UTC' || timezone === 'Etc/GMT') {\n    return 0;\n  }\n  if (timezone === '') {\n    return date.getTimezoneOffset();\n  }\n  const {\n    rule,\n    zone\n  } = zoneAndRule(timezone, date);\n  return parseFloat(rule ? zone[0] - rule[6] : zone[0]);\n};","map":{"version":3,"names":["zoneAndRule","offset","timezone","date","Date","getTimezoneOffset","rule","zone","parseFloat"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-date-math/dist/es2015/tz/offset.js"],"sourcesContent":["import { zoneAndRule } from './zone-and-rule';\n/**\n * @hidden\n *\n * A function that calculates the time offset based on zone name.\n *\n * @param timezone - The timezone name. For example, `America/Chicago`, `Europe/Sofia`.\n * @param date - A date for which the zone rule will be located.\n *\n * @return - Returns the timezone offset in minutes at the specified time.\n */\nexport const offset = (timezone, date = new Date()) => {\n    if (timezone === 'Etc/UTC' || timezone === 'Etc/GMT') {\n        return 0;\n    }\n    if (timezone === '') {\n        return date.getTimezoneOffset();\n    }\n    const { rule, zone } = zoneAndRule(timezone, date);\n    return parseFloat(rule ? zone[0] - rule[6] : zone[0]);\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAGA,CAACC,QAAQ,EAAEC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,KAAK;EACnD,IAAIF,QAAQ,KAAK,SAAS,IAAIA,QAAQ,KAAK,SAAS,EAAE;IAClD,OAAO,CAAC;EACZ;EACA,IAAIA,QAAQ,KAAK,EAAE,EAAE;IACjB,OAAOC,IAAI,CAACE,iBAAiB,CAAC,CAAC;EACnC;EACA,MAAM;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGP,WAAW,CAACE,QAAQ,EAAEC,IAAI,CAAC;EAClD,OAAOK,UAAU,CAACF,IAAI,GAAGC,IAAI,CAAC,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}