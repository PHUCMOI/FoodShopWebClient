{"ast":null,"code":"import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_POINTER } from '../constants';\nclass RadialPointerAnimation extends drawing.Animation {\n  constructor(element, options) {\n    super(element, options);\n    const animationOptions = this.options;\n    animationOptions.duration = Math.max(Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration * 1000, 1);\n  }\n  step(pos) {\n    const options = this.options;\n    const angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n    this.element.transform(geometry.transform().rotate(angle, options.center));\n  }\n}\nsetDefaultOptions(RadialPointerAnimation, {\n  easing: LINEAR,\n  duration: ANGULAR_SPEED\n});\ndrawing.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\nexport default RadialPointerAnimation;","map":{"version":3,"names":["geometry","drawing","interpolateValue","setDefaultOptions","ANGULAR_SPEED","LINEAR","RADIAL_POINTER","RadialPointerAnimation","Animation","constructor","element","options","animationOptions","duration","Math","max","abs","newAngle","oldAngle","step","pos","angle","transform","rotate","center","easing","AnimationFactory","current","register"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/gauges/radial/radial-pointer-animation.js"],"sourcesContent":["import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_POINTER } from '../constants';\n\nclass RadialPointerAnimation extends drawing.Animation {\n    constructor(element, options) {\n        super(element, options);\n\n        const animationOptions = this.options;\n\n        animationOptions.duration = Math.max((Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000, 1);\n    }\n\n    step(pos) {\n        const options = this.options;\n        const angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n\n        this.element.transform(geometry.transform().rotate(angle, options.center));\n    }\n}\n\nsetDefaultOptions(RadialPointerAnimation, {\n    easing: LINEAR,\n    duration: ANGULAR_SPEED\n});\n\ndrawing.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\n\nexport default RadialPointerAnimation;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,yBAAyB;AAC3D,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,cAAc;AAClE,SAASC,aAAa,EAAEC,MAAM,EAAEC,cAAc,QAAQ,cAAc;AAEpE,MAAMC,sBAAsB,SAASN,OAAO,CAACO,SAAS,CAAC;EACnDC,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC1B,KAAK,CAACD,OAAO,EAAEC,OAAO,CAAC;IAEvB,MAAMC,gBAAgB,GAAG,IAAI,CAACD,OAAO;IAErCC,gBAAgB,CAACC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAED,IAAI,CAACE,GAAG,CAACJ,gBAAgB,CAACK,QAAQ,GAAGL,gBAAgB,CAACM,QAAQ,CAAC,GAAGN,gBAAgB,CAACC,QAAQ,GAAI,IAAI,EAAE,CAAC,CAAC;EACjJ;EAEAM,IAAIA,CAACC,GAAG,EAAE;IACN,MAAMT,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMU,KAAK,GAAGnB,gBAAgB,CAACS,OAAO,CAACO,QAAQ,EAAEP,OAAO,CAACM,QAAQ,EAAEG,GAAG,CAAC;IAEvE,IAAI,CAACV,OAAO,CAACY,SAAS,CAACtB,QAAQ,CAACsB,SAAS,CAAC,CAAC,CAACC,MAAM,CAACF,KAAK,EAAEV,OAAO,CAACa,MAAM,CAAC,CAAC;EAC9E;AACJ;AAEArB,iBAAiB,CAACI,sBAAsB,EAAE;EACtCkB,MAAM,EAAEpB,MAAM;EACdQ,QAAQ,EAAET;AACd,CAAC,CAAC;AAEFH,OAAO,CAACyB,gBAAgB,CAACC,OAAO,CAACC,QAAQ,CAACtB,cAAc,EAAEC,sBAAsB,CAAC;AAEjF,eAAeA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}