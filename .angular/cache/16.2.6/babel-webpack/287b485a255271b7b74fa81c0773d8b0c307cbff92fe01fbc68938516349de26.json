{"ast":null,"code":"import HasObservers from '../core/has-observers';\nimport Point from './point';\nimport Size from './size';\nclass Rect extends HasObservers {\n  constructor(origin = new Point(), size = new Size(), cornerRadius = 0) {\n    super();\n    this.setOrigin(origin);\n    this.setSize(size);\n    this.setCornerRadius(cornerRadius);\n  }\n  clone() {\n    return new Rect(this.origin.clone(), this.size.clone());\n  }\n  equals(other) {\n    return other && other.origin.equals(this.origin) && other.size.equals(this.size);\n  }\n  setOrigin(value) {\n    this._observerField(\"origin\", Point.create(value));\n    this.geometryChange();\n    return this;\n  }\n  getOrigin() {\n    return this.origin;\n  }\n  setCornerRadius(radius) {\n    this.cornerRadius = Array.isArray(radius) ? radius : [radius, radius];\n    this.geometryChange();\n    return this;\n  }\n  getCornerRadius() {\n    return this.cornerRadius;\n  }\n  setSize(value) {\n    this._observerField(\"size\", Size.create(value));\n    this.geometryChange();\n    return this;\n  }\n  getSize() {\n    return this.size;\n  }\n  width() {\n    return this.size.width;\n  }\n  height() {\n    return this.size.height;\n  }\n  topLeft() {\n    return this.origin.clone();\n  }\n  bottomRight() {\n    return this.origin.clone().translate(this.width(), this.height());\n  }\n  topRight() {\n    return this.origin.clone().translate(this.width(), 0);\n  }\n  bottomLeft() {\n    return this.origin.clone().translate(0, this.height());\n  }\n  center() {\n    return this.origin.clone().translate(this.width() / 2, this.height() / 2);\n  }\n  bbox(matrix) {\n    const tl = this.topLeft().transformCopy(matrix);\n    const tr = this.topRight().transformCopy(matrix);\n    const br = this.bottomRight().transformCopy(matrix);\n    const bl = this.bottomLeft().transformCopy(matrix);\n    return Rect.fromPoints(tl, tr, br, bl);\n  }\n  transformCopy(m) {\n    return Rect.fromPoints(this.topLeft().transform(m), this.bottomRight().transform(m));\n  }\n  expand(x, y = x) {\n    this.size.width += 2 * x;\n    this.size.height += 2 * y;\n    this.origin.translate(-x, -y);\n    return this;\n  }\n  expandCopy(x, y) {\n    return this.clone().expand(x, y);\n  }\n  containsPoint(point) {\n    const origin = this.origin;\n    const bottomRight = this.bottomRight();\n    return !(point.x < origin.x || point.y < origin.y || bottomRight.x < point.x || bottomRight.y < point.y);\n  }\n  _isOnPath(point, width) {\n    const rectOuter = this.expandCopy(width, width);\n    const rectInner = this.expandCopy(-width, -width);\n    return rectOuter.containsPoint(point) && !rectInner.containsPoint(point);\n  }\n  static fromPoints() {\n    const topLeft = Point.min.apply(null, arguments);\n    const bottomRight = Point.max.apply(null, arguments);\n    const size = new Size(bottomRight.x - topLeft.x, bottomRight.y - topLeft.y);\n    return new Rect(topLeft, size);\n  }\n  static union(a, b) {\n    return Rect.fromPoints(Point.min(a.topLeft(), b.topLeft()), Point.max(a.bottomRight(), b.bottomRight()));\n  }\n  static intersect(a, b) {\n    const rect1 = {\n      left: a.topLeft().x,\n      top: a.topLeft().y,\n      right: a.bottomRight().x,\n      bottom: a.bottomRight().y\n    };\n    const rect2 = {\n      left: b.topLeft().x,\n      top: b.topLeft().y,\n      right: b.bottomRight().x,\n      bottom: b.bottomRight().y\n    };\n    if (rect1.left <= rect2.right && rect2.left <= rect1.right && rect1.top <= rect2.bottom && rect2.top <= rect1.bottom) {\n      return Rect.fromPoints(new Point(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)), new Point(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom)));\n    }\n  }\n}\nexport default Rect;","map":{"version":3,"names":["HasObservers","Point","Size","Rect","constructor","origin","size","cornerRadius","setOrigin","setSize","setCornerRadius","clone","equals","other","value","_observerField","create","geometryChange","getOrigin","radius","Array","isArray","getCornerRadius","getSize","width","height","topLeft","bottomRight","translate","topRight","bottomLeft","center","bbox","matrix","tl","transformCopy","tr","br","bl","fromPoints","m","transform","expand","x","y","expandCopy","containsPoint","point","_isOnPath","rectOuter","rectInner","min","apply","arguments","max","union","a","b","intersect","rect1","left","top","right","bottom","rect2","Math"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/geometry/rect.js"],"sourcesContent":["import HasObservers from '../core/has-observers';\nimport Point from './point';\nimport Size from './size';\n\nclass Rect extends HasObservers {\n    constructor(origin = new Point(), size = new Size(), cornerRadius = 0) {\n        super();\n\n        this.setOrigin(origin);\n        this.setSize(size);\n        this.setCornerRadius(cornerRadius);\n    }\n\n    clone() {\n        return new Rect(\n            this.origin.clone(),\n            this.size.clone()\n        );\n    }\n\n    equals(other) {\n        return other &&\n               other.origin.equals(this.origin) &&\n               other.size.equals(this.size);\n    }\n\n    setOrigin(value) {\n        this._observerField(\"origin\", Point.create(value));\n        this.geometryChange();\n        return this;\n    }\n\n    getOrigin() {\n        return this.origin;\n    }\n\n    setCornerRadius(radius) {\n        this.cornerRadius = Array.isArray(radius) ? radius : [ radius, radius ];\n\n        this.geometryChange();\n        return this;\n    }\n\n    getCornerRadius() {\n        return this.cornerRadius;\n    }\n\n    setSize(value) {\n        this._observerField(\"size\", Size.create(value));\n        this.geometryChange();\n        return this;\n    }\n\n    getSize() {\n        return this.size;\n    }\n\n    width() {\n        return this.size.width;\n    }\n\n    height() {\n        return this.size.height;\n    }\n\n    topLeft() {\n        return this.origin.clone();\n    }\n\n    bottomRight() {\n        return this.origin.clone().translate(this.width(), this.height());\n    }\n\n    topRight() {\n        return this.origin.clone().translate(this.width(), 0);\n    }\n\n    bottomLeft() {\n        return this.origin.clone().translate(0, this.height());\n    }\n\n    center() {\n        return this.origin.clone().translate(this.width() / 2, this.height() / 2);\n    }\n\n    bbox(matrix) {\n        const tl = this.topLeft().transformCopy(matrix);\n        const tr = this.topRight().transformCopy(matrix);\n        const br = this.bottomRight().transformCopy(matrix);\n        const bl = this.bottomLeft().transformCopy(matrix);\n\n        return Rect.fromPoints(tl, tr, br, bl);\n    }\n\n    transformCopy(m) {\n        return Rect.fromPoints(\n            this.topLeft().transform(m),\n            this.bottomRight().transform(m)\n        );\n    }\n\n    expand(x, y = x) {\n\n        this.size.width += 2 * x;\n        this.size.height += 2 * y;\n\n        this.origin.translate(-x, -y);\n\n        return this;\n    }\n\n    expandCopy(x, y) {\n        return this.clone().expand(x, y);\n    }\n\n    containsPoint(point) {\n        const origin = this.origin;\n        const bottomRight = this.bottomRight();\n        return !(point.x < origin.x || point.y < origin.y || bottomRight.x < point.x || bottomRight.y < point.y);\n    }\n\n    _isOnPath(point, width) {\n        const rectOuter = this.expandCopy(width, width);\n        const rectInner = this.expandCopy(-width, -width);\n\n        return rectOuter.containsPoint(point) && !rectInner.containsPoint(point);\n    }\n\n    static fromPoints() {\n        const topLeft = Point.min.apply(null, arguments);\n        const bottomRight = Point.max.apply(null, arguments);\n        const size = new Size(\n            bottomRight.x - topLeft.x,\n            bottomRight.y - topLeft.y\n        );\n\n        return new Rect(topLeft, size);\n    }\n\n    static union(a, b) {\n        return Rect.fromPoints(\n            Point.min(a.topLeft(), b.topLeft()),\n            Point.max(a.bottomRight(), b.bottomRight())\n        );\n    }\n\n    static intersect(a, b) {\n        const rect1 = {\n            left: a.topLeft().x,\n            top: a.topLeft().y,\n            right: a.bottomRight().x,\n            bottom: a.bottomRight().y\n        };\n\n        const rect2 = {\n            left: b.topLeft().x,\n            top: b.topLeft().y,\n            right: b.bottomRight().x,\n            bottom: b.bottomRight().y\n        };\n\n        if (rect1.left <= rect2.right &&\n            rect2.left <= rect1.right &&\n            rect1.top <= rect2.bottom &&\n            rect2.top <= rect1.bottom) {\n            return Rect.fromPoints(\n                new Point(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)),\n                new Point(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom))\n            );\n        }\n    }\n}\n\nexport default Rect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}