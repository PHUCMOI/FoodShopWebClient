{"ast":null,"code":"import { logToConsole } from '../drawing-utils';\nclass FontLoader {\n  static fetchFonts(options, fonts, state = {\n    depth: 0\n  }) {\n    const MAX_DEPTH = 5;\n    if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n      return;\n    }\n    Object.keys(options).forEach(function (key) {\n      const value = options[key];\n      if (key === \"dataSource\" || key[0] === \"$\" || !value) {\n        return;\n      }\n      if (key === \"font\") {\n        fonts.push(value);\n      } else if (typeof value === \"object\") {\n        state.depth++;\n        FontLoader.fetchFonts(value, fonts, state);\n        state.depth--;\n      }\n    });\n  }\n  static loadFonts(fonts, callback) {\n    let promises = [];\n    if (fonts.length > 0 && document.fonts) {\n      try {\n        promises = fonts.map(function (font) {\n          return document.fonts.load(font);\n        });\n      } catch (e) {\n        // Silence font-loading errors\n        logToConsole(e);\n      }\n      Promise.all(promises).then(callback, callback);\n    } else {\n      callback();\n    }\n  }\n  static preloadFonts(options, callback) {\n    const fonts = [];\n    FontLoader.fetchFonts(options, fonts);\n    FontLoader.loadFonts(fonts, callback);\n  }\n}\nexport default FontLoader;","map":{"version":3,"names":["logToConsole","FontLoader","fetchFonts","options","fonts","state","depth","MAX_DEPTH","document","Object","keys","forEach","key","value","push","loadFonts","callback","promises","length","map","font","load","e","Promise","all","then","preloadFonts"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/common/font-loader.js"],"sourcesContent":["import { logToConsole } from '../drawing-utils';\n\nclass FontLoader {\n    static fetchFonts(options, fonts, state = { depth: 0 }) {\n        const MAX_DEPTH = 5;\n\n        if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n            return;\n        }\n\n        Object.keys(options).forEach(function(key) {\n            const value = options[key];\n            if (key === \"dataSource\" || key[0] === \"$\" || !value) {\n                return;\n            }\n\n            if (key === \"font\") {\n                fonts.push(value);\n            } else if (typeof value === \"object\") {\n                state.depth++;\n                FontLoader.fetchFonts(value, fonts, state);\n                state.depth--;\n            }\n        });\n    }\n\n    static loadFonts(fonts, callback) {\n        let promises = [];\n\n        if (fonts.length > 0 && document.fonts) {\n            try {\n                promises = fonts.map(function(font) {\n                    return document.fonts.load(font);\n                });\n            } catch (e) {\n                // Silence font-loading errors\n                logToConsole(e);\n            }\n\n            Promise.all(promises).then(callback, callback);\n        } else {\n            callback();\n        }\n    }\n\n    static preloadFonts(options, callback) {\n        const fonts = [];\n        FontLoader.fetchFonts(options, fonts);\n\n        FontLoader.loadFonts(fonts, callback);\n    }\n}\n\nexport default FontLoader;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAE/C,MAAMC,UAAU,CAAC;EACb,OAAOC,UAAUA,CAACC,OAAO,EAAEC,KAAK,EAAEC,KAAK,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC,EAAE;IACpD,MAAMC,SAAS,GAAG,CAAC;IAEnB,IAAI,CAACJ,OAAO,IAAIE,KAAK,CAACC,KAAK,GAAGC,SAAS,IAAI,CAACC,QAAQ,CAACJ,KAAK,EAAE;MACxD;IACJ;IAEAK,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,OAAO,CAAC,UAASC,GAAG,EAAE;MACvC,MAAMC,KAAK,GAAGV,OAAO,CAACS,GAAG,CAAC;MAC1B,IAAIA,GAAG,KAAK,YAAY,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAACC,KAAK,EAAE;QAClD;MACJ;MAEA,IAAID,GAAG,KAAK,MAAM,EAAE;QAChBR,KAAK,CAACU,IAAI,CAACD,KAAK,CAAC;MACrB,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAClCR,KAAK,CAACC,KAAK,EAAE;QACbL,UAAU,CAACC,UAAU,CAACW,KAAK,EAAET,KAAK,EAAEC,KAAK,CAAC;QAC1CA,KAAK,CAACC,KAAK,EAAE;MACjB;IACJ,CAAC,CAAC;EACN;EAEA,OAAOS,SAASA,CAACX,KAAK,EAAEY,QAAQ,EAAE;IAC9B,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAIb,KAAK,CAACc,MAAM,GAAG,CAAC,IAAIV,QAAQ,CAACJ,KAAK,EAAE;MACpC,IAAI;QACAa,QAAQ,GAAGb,KAAK,CAACe,GAAG,CAAC,UAASC,IAAI,EAAE;UAChC,OAAOZ,QAAQ,CAACJ,KAAK,CAACiB,IAAI,CAACD,IAAI,CAAC;QACpC,CAAC,CAAC;MACN,CAAC,CAAC,OAAOE,CAAC,EAAE;QACR;QACAtB,YAAY,CAACsB,CAAC,CAAC;MACnB;MAEAC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC,CAACQ,IAAI,CAACT,QAAQ,EAAEA,QAAQ,CAAC;IAClD,CAAC,MAAM;MACHA,QAAQ,CAAC,CAAC;IACd;EACJ;EAEA,OAAOU,YAAYA,CAACvB,OAAO,EAAEa,QAAQ,EAAE;IACnC,MAAMZ,KAAK,GAAG,EAAE;IAChBH,UAAU,CAACC,UAAU,CAACC,OAAO,EAAEC,KAAK,CAAC;IAErCH,UAAU,CAACc,SAAS,CAACX,KAAK,EAAEY,QAAQ,CAAC;EACzC;AACJ;AAEA,eAAef,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}