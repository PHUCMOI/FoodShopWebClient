{"ast":null,"code":"import Node from './node';\nimport { parseColor } from '../common';\nimport { isTransparent, valueOrDefault } from '../util';\nimport LinearGradient from '../gradients/linear-gradient';\nimport RadialGradient from '../gradients/radial-gradient';\nimport { DASH_ARRAYS, SOLID, BUTT } from '../core/constants';\nimport renderPath from './utils/render-path';\nfunction addGradientStops(gradient, stops) {\n  for (let idx = 0; idx < stops.length; idx++) {\n    let stop = stops[idx];\n    let color = parseColor(stop.color());\n    color.a *= stop.opacity();\n    gradient.addColorStop(stop.offset(), color.toCssRgba());\n  }\n}\nclass PathNode extends Node {\n  renderTo(ctx) {\n    ctx.save();\n    this.setTransform(ctx);\n    this.setClip(ctx);\n    this.setOpacity(ctx);\n    ctx.beginPath();\n    this.renderPoints(ctx, this.srcElement);\n    this.setLineDash(ctx);\n    this.setLineCap(ctx);\n    this.setLineJoin(ctx);\n    this.setFill(ctx);\n    this.setStroke(ctx);\n    ctx.restore();\n  }\n  setFill(ctx) {\n    const fill = this.srcElement.options.fill;\n    let hasFill = false;\n    if (fill) {\n      if (fill.nodeType === \"Gradient\") {\n        this.setGradientFill(ctx, fill);\n        hasFill = true;\n      } else if (!isTransparent(fill.color)) {\n        ctx.fillStyle = fill.color;\n        ctx.save();\n        this.globalAlpha(ctx, fill.opacity);\n        ctx.fill();\n        ctx.restore();\n        hasFill = true;\n      }\n    }\n    return hasFill;\n  }\n  setGradientFill(ctx, fill) {\n    const bbox = this.srcElement.rawBBox();\n    let gradient;\n    if (fill instanceof LinearGradient) {\n      let start = fill.start();\n      let end = fill.end();\n      gradient = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n    } else if (fill instanceof RadialGradient) {\n      let center = fill.center();\n      gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());\n    }\n    addGradientStops(gradient, fill.stops);\n    ctx.save();\n    if (!fill.userSpace()) {\n      ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);\n    }\n    ctx.fillStyle = gradient;\n    ctx.fill();\n    ctx.restore();\n  }\n  setStroke(ctx) {\n    const stroke = this.srcElement.options.stroke;\n    if (stroke && !isTransparent(stroke.color) && stroke.width > 0) {\n      ctx.strokeStyle = stroke.color;\n      ctx.lineWidth = valueOrDefault(stroke.width, 1);\n      ctx.save();\n      this.globalAlpha(ctx, stroke.opacity);\n      ctx.stroke();\n      ctx.restore();\n      return true;\n    }\n  }\n  dashType() {\n    const stroke = this.srcElement.options.stroke;\n    if (stroke && stroke.dashType) {\n      return stroke.dashType.toLowerCase();\n    }\n  }\n  setLineDash(ctx) {\n    const dashType = this.dashType();\n    if (dashType && dashType !== SOLID) {\n      const dashArray = DASH_ARRAYS[dashType];\n      if (ctx.setLineDash) {\n        ctx.setLineDash(dashArray);\n      } else {\n        ctx.mozDash = dashArray;\n        ctx.webkitLineDash = dashArray;\n      }\n    }\n  }\n  setLineCap(ctx) {\n    const dashType = this.dashType();\n    const stroke = this.srcElement.options.stroke;\n    if (dashType && dashType !== SOLID) {\n      ctx.lineCap = BUTT;\n    } else if (stroke && stroke.lineCap) {\n      ctx.lineCap = stroke.lineCap;\n    }\n  }\n  setLineJoin(ctx) {\n    const stroke = this.srcElement.options.stroke;\n    if (stroke && stroke.lineJoin) {\n      ctx.lineJoin = stroke.lineJoin;\n    }\n  }\n  renderPoints(ctx, path) {\n    renderPath(ctx, path);\n  }\n}\nexport default PathNode;","map":{"version":3,"names":["Node","parseColor","isTransparent","valueOrDefault","LinearGradient","RadialGradient","DASH_ARRAYS","SOLID","BUTT","renderPath","addGradientStops","gradient","stops","idx","length","stop","color","a","opacity","addColorStop","offset","toCssRgba","PathNode","renderTo","ctx","save","setTransform","setClip","setOpacity","beginPath","renderPoints","srcElement","setLineDash","setLineCap","setLineJoin","setFill","setStroke","restore","fill","options","hasFill","nodeType","setGradientFill","fillStyle","globalAlpha","bbox","rawBBox","start","end","createLinearGradient","x","y","center","createRadialGradient","radius","userSpace","transform","width","height","origin","stroke","strokeStyle","lineWidth","dashType","toLowerCase","dashArray","mozDash","webkitLineDash","lineCap","lineJoin","path"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/canvas/path-node.js"],"sourcesContent":["import Node from './node';\nimport { parseColor } from '../common';\nimport { isTransparent, valueOrDefault } from '../util';\nimport LinearGradient from '../gradients/linear-gradient';\nimport RadialGradient from '../gradients/radial-gradient';\nimport { DASH_ARRAYS, SOLID, BUTT } from '../core/constants';\nimport renderPath from './utils/render-path';\n\nfunction addGradientStops(gradient, stops) {\n    for (let idx = 0; idx < stops.length; idx++) {\n        let stop = stops[idx];\n        let color = parseColor(stop.color());\n\n        color.a *= stop.opacity();\n\n        gradient.addColorStop(stop.offset(), color.toCssRgba());\n    }\n}\n\nclass PathNode extends Node {\n\n    renderTo(ctx) {\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        ctx.beginPath();\n\n        this.renderPoints(ctx, this.srcElement);\n\n        this.setLineDash(ctx);\n        this.setLineCap(ctx);\n        this.setLineJoin(ctx);\n\n        this.setFill(ctx);\n        this.setStroke(ctx);\n\n        ctx.restore();\n    }\n\n    setFill(ctx) {\n        const fill = this.srcElement.options.fill;\n        let hasFill = false;\n\n        if (fill) {\n            if (fill.nodeType === \"Gradient\") {\n                this.setGradientFill(ctx, fill);\n                hasFill = true;\n            } else if (!isTransparent(fill.color)) {\n                ctx.fillStyle = fill.color;\n\n                ctx.save();\n                this.globalAlpha(ctx, fill.opacity);\n                ctx.fill();\n                ctx.restore();\n\n                hasFill = true;\n            }\n        }\n\n        return hasFill;\n    }\n\n    setGradientFill(ctx, fill) {\n        const bbox = this.srcElement.rawBBox();\n        let gradient;\n\n        if (fill instanceof LinearGradient) {\n            let start = fill.start();\n            let end = fill.end();\n            gradient = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n        } else if (fill instanceof RadialGradient) {\n            let center = fill.center();\n            gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());\n        }\n\n        addGradientStops(gradient, fill.stops);\n\n        ctx.save();\n\n        if (!fill.userSpace()) {\n            ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);\n        }\n        ctx.fillStyle = gradient;\n        ctx.fill();\n\n        ctx.restore();\n    }\n\n    setStroke(ctx) {\n        const stroke = this.srcElement.options.stroke;\n        if (stroke && !isTransparent(stroke.color) && stroke.width > 0) {\n            ctx.strokeStyle = stroke.color;\n            ctx.lineWidth = valueOrDefault(stroke.width, 1);\n\n            ctx.save();\n            this.globalAlpha(ctx, stroke.opacity);\n            ctx.stroke();\n            ctx.restore();\n\n            return true;\n        }\n    }\n\n    dashType() {\n        const stroke = this.srcElement.options.stroke;\n        if (stroke && stroke.dashType) {\n            return stroke.dashType.toLowerCase();\n        }\n    }\n\n    setLineDash(ctx) {\n        const dashType = this.dashType();\n        if (dashType && dashType !== SOLID) {\n            const dashArray = DASH_ARRAYS[dashType];\n            if (ctx.setLineDash) {\n                ctx.setLineDash(dashArray);\n            } else {\n                ctx.mozDash = dashArray;\n                ctx.webkitLineDash = dashArray;\n            }\n        }\n    }\n\n    setLineCap(ctx) {\n        const dashType = this.dashType();\n        const stroke = this.srcElement.options.stroke;\n        if (dashType && dashType !== SOLID) {\n            ctx.lineCap = BUTT;\n        } else if (stroke && stroke.lineCap) {\n            ctx.lineCap = stroke.lineCap;\n        }\n    }\n\n    setLineJoin(ctx) {\n        const stroke = this.srcElement.options.stroke;\n        if (stroke && stroke.lineJoin) {\n            ctx.lineJoin = stroke.lineJoin;\n        }\n    }\n\n    renderPoints(ctx, path) {\n        renderPath(ctx, path);\n    }\n}\n\nexport default PathNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}