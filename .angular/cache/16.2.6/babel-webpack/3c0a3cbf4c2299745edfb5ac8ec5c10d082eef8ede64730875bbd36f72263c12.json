{"ast":null,"code":"import { geometry as g, drawing as d } from '@progress/kendo-drawing';\nimport { Class, defined, isFunction, getter, setDefaultOptions } from '../../common';\nimport { ShapeLayer } from './shape';\nimport { Location } from '../location';\nexport class BubbleLayer extends ShapeLayer {\n  _readData() {\n    const data = this.options.data || [];\n    return data;\n  }\n  _load(data) {\n    this._data = data;\n    this.surface.clear();\n    if (data.length === 0) {\n      return;\n    }\n    let options = this.options;\n    let getValue = getter(options.valueField);\n    let newData = data.slice(0);\n    newData.sort(function (a, b) {\n      return getValue(b) - getValue(a);\n    });\n    let scaleType = this._scaleType();\n    let scale;\n    let getLocation = getter(this.options.locationField);\n    for (let i = 0; i < newData.length; i++) {\n      let dataItem = newData[i];\n      let location = getLocation(dataItem);\n      let value = getValue(dataItem);\n      if (defined(location) && defined(value)) {\n        if (!scale) {\n          scale = new scaleType([0, value], [options.minSize, options.maxSize]);\n        }\n        location = Location.create(location);\n        let center = this.map.locationToView(location);\n        let size = scale.map(value);\n        let symbol = this._createSymbol({\n          center: center,\n          size: size,\n          style: options.style,\n          dataItem: dataItem,\n          location: location\n        });\n        symbol.dataItem = dataItem;\n        symbol.location = location;\n        symbol.value = value;\n        this._drawSymbol(symbol);\n      }\n    }\n  }\n  _scaleType() {\n    let scale = this.options.scale;\n    if (isFunction(scale)) {\n      return scale;\n    }\n    return Scales[scale];\n  }\n  _createSymbol(args) {\n    let symbol = this.options.symbol;\n    if (!isFunction(symbol)) {\n      symbol = Symbols[symbol];\n    }\n    return symbol(args);\n  }\n  _drawSymbol(shape) {\n    let args = {\n      layer: this,\n      shape: shape\n    };\n    let cancelled = this.map.trigger('shapeCreated', args);\n    if (!cancelled) {\n      this.surface.draw(shape);\n    }\n  }\n  _tooltipContext(shape) {\n    return {\n      type: 'bubble',\n      layerIndex: this._layerIndex(),\n      className: 'k-map-bubble-tooltip',\n      dataItem: shape.dataItem,\n      location: shape.location,\n      value: shape.value\n    };\n  }\n  _tooltipAnchor(e) {\n    const shape = e.element;\n    const center = shape.bbox().center();\n    return {\n      top: center.y,\n      left: center.x\n    };\n  }\n}\nsetDefaultOptions(BubbleLayer, {\n  // autoBind: true,\n  locationField: 'location',\n  valueField: 'value',\n  minSize: 0,\n  maxSize: 100,\n  scale: 'sqrt',\n  symbol: 'circle',\n  // ensure bubble layers are displayed over tile and shape layers\n  zIndex: 200\n});\nclass SqrtScale extends Class {\n  constructor(domain, range) {\n    super();\n    this._domain = domain;\n    this._range = range;\n    let domainRange = Math.sqrt(domain[1]) - Math.sqrt(domain[0]);\n    let outputRange = range[1] - range[0];\n    this._ratio = outputRange / domainRange;\n  }\n  map(value) {\n    let rel = (Math.sqrt(value) - Math.sqrt(this._domain[0])) * this._ratio;\n    return this._range[0] + rel;\n  }\n}\nlet Scales = {\n  sqrt: SqrtScale\n};\nlet Symbols = {\n  circle: function (args) {\n    let geo = new g.Circle(args.center, args.size / 2);\n    return new d.Circle(geo, args.style);\n  },\n  square: function (args) {\n    let path = new d.Path(args.style);\n    let halfSize = args.size / 2;\n    let center = args.center;\n    path.moveTo(center.x - halfSize, center.y - halfSize).lineTo(center.x + halfSize, center.y - halfSize).lineTo(center.x + halfSize, center.y + halfSize).lineTo(center.x - halfSize, center.y + halfSize).close();\n    return path;\n  }\n};","map":{"version":3,"names":["geometry","g","drawing","d","Class","defined","isFunction","getter","setDefaultOptions","ShapeLayer","Location","BubbleLayer","_readData","data","options","_load","_data","surface","clear","length","getValue","valueField","newData","slice","sort","a","b","scaleType","_scaleType","scale","getLocation","locationField","i","dataItem","location","value","minSize","maxSize","create","center","map","locationToView","size","symbol","_createSymbol","style","_drawSymbol","Scales","args","Symbols","shape","layer","cancelled","trigger","draw","_tooltipContext","type","layerIndex","_layerIndex","className","_tooltipAnchor","e","element","bbox","top","y","left","x","zIndex","SqrtScale","constructor","domain","range","_domain","_range","domainRange","Math","sqrt","outputRange","_ratio","rel","circle","geo","Circle","square","path","Path","halfSize","moveTo","lineTo","close"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/map/layers/bubble.js"],"sourcesContent":["import {\n    geometry as g,\n    drawing as d\n} from '@progress/kendo-drawing';\n\nimport {\n    Class,\n    defined,\n    isFunction,\n    getter,\n    setDefaultOptions\n} from '../../common';\n\nimport {\n    ShapeLayer\n} from './shape';\n\nimport {\n    Location\n} from '../location';\n\nexport class BubbleLayer extends ShapeLayer {\n    _readData() {\n        const data = this.options.data || [];\n        return data;\n    }\n\n    _load(data) {\n        this._data = data;\n        this.surface.clear();\n\n        if (data.length === 0) {\n            return;\n        }\n\n        let options = this.options;\n        let getValue = getter(options.valueField);\n\n        let newData = data.slice(0);\n        newData.sort(function(a, b) {\n            return getValue(b) - getValue(a);\n        });\n\n        let scaleType = this._scaleType();\n        let scale;\n        let getLocation = getter(this.options.locationField);\n\n        for (let i = 0; i < newData.length; i++) {\n            let dataItem = newData[i];\n            let location = getLocation(dataItem);\n            let value = getValue(dataItem);\n\n            if (defined(location) && defined(value)) {\n                if (!scale) {\n                    scale = new scaleType([\n                        0,\n                        value\n                    ], [\n                        options.minSize,\n                        options.maxSize\n                    ]);\n                }\n\n                location = Location.create(location);\n\n                let center = this.map.locationToView(location);\n                let size = scale.map(value);\n                let symbol = this._createSymbol({\n                    center: center,\n                    size: size,\n                    style: options.style,\n                    dataItem: dataItem,\n                    location: location\n                });\n\n                symbol.dataItem = dataItem;\n                symbol.location = location;\n                symbol.value = value;\n\n                this._drawSymbol(symbol);\n            }\n        }\n    }\n\n    _scaleType() {\n        let scale = this.options.scale;\n\n        if (isFunction(scale)) {\n            return scale;\n        }\n\n        return Scales[scale];\n    }\n\n    _createSymbol(args) {\n        let symbol = this.options.symbol;\n\n        if (!isFunction(symbol)) {\n            symbol = Symbols[symbol];\n        }\n\n        return symbol(args);\n    }\n\n    _drawSymbol(shape) {\n        let args = {\n            layer: this,\n            shape: shape\n        };\n\n        let cancelled = this.map.trigger('shapeCreated', args);\n\n        if (!cancelled) {\n            this.surface.draw(shape);\n        }\n    }\n\n    _tooltipContext(shape) {\n        return {\n            type: 'bubble',\n            layerIndex: this._layerIndex(),\n            className: 'k-map-bubble-tooltip',\n            dataItem: shape.dataItem,\n            location: shape.location,\n            value: shape.value\n        };\n    }\n\n    _tooltipAnchor(e) {\n        const shape = e.element;\n        const center = shape.bbox().center();\n\n        return {\n            top: center.y,\n            left: center.x\n        };\n    }\n}\n\nsetDefaultOptions(BubbleLayer, {\n    // autoBind: true,\n    locationField: 'location',\n    valueField: 'value',\n    minSize: 0,\n    maxSize: 100,\n    scale: 'sqrt',\n    symbol: 'circle',\n    // ensure bubble layers are displayed over tile and shape layers\n    zIndex: 200\n});\n\nclass SqrtScale extends Class {\n    constructor(domain, range) {\n        super();\n\n        this._domain = domain;\n        this._range = range;\n\n        let domainRange = Math.sqrt(domain[1]) - Math.sqrt(domain[0]);\n        let outputRange = range[1] - range[0];\n\n        this._ratio = outputRange / domainRange;\n    }\n\n    map(value) {\n        let rel = (Math.sqrt(value) - Math.sqrt(this._domain[0])) * this._ratio;\n        return this._range[0] + rel;\n    }\n}\n\nlet Scales = {\n    sqrt: SqrtScale\n};\n\nlet Symbols = {\n    circle: function(args) {\n        let geo = new g.Circle(args.center, args.size / 2);\n        return new d.Circle(geo, args.style);\n    },\n\n    square: function(args) {\n        let path = new d.Path(args.style);\n        let halfSize = args.size / 2;\n        let center = args.center;\n        path.moveTo(center.x - halfSize, center.y - halfSize).lineTo(center.x + halfSize, center.y - halfSize).lineTo(center.x + halfSize, center.y + halfSize).lineTo(center.x - halfSize, center.y + halfSize).close();\n        return path;\n    }\n};\n"],"mappings":"AAAA,SACIA,QAAQ,IAAIC,CAAC,EACbC,OAAO,IAAIC,CAAC,QACT,yBAAyB;AAEhC,SACIC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,iBAAiB,QACd,cAAc;AAErB,SACIC,UAAU,QACP,SAAS;AAEhB,SACIC,QAAQ,QACL,aAAa;AAEpB,OAAO,MAAMC,WAAW,SAASF,UAAU,CAAC;EACxCG,SAASA,CAAA,EAAG;IACR,MAAMC,IAAI,GAAG,IAAI,CAACC,OAAO,CAACD,IAAI,IAAI,EAAE;IACpC,OAAOA,IAAI;EACf;EAEAE,KAAKA,CAACF,IAAI,EAAE;IACR,IAAI,CAACG,KAAK,GAAGH,IAAI;IACjB,IAAI,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;IAEpB,IAAIL,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;MACnB;IACJ;IAEA,IAAIL,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1B,IAAIM,QAAQ,GAAGb,MAAM,CAACO,OAAO,CAACO,UAAU,CAAC;IAEzC,IAAIC,OAAO,GAAGT,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC;IAC3BD,OAAO,CAACE,IAAI,CAAC,UAASC,CAAC,EAAEC,CAAC,EAAE;MACxB,OAAON,QAAQ,CAACM,CAAC,CAAC,GAAGN,QAAQ,CAACK,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,IAAIE,SAAS,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IACjC,IAAIC,KAAK;IACT,IAAIC,WAAW,GAAGvB,MAAM,CAAC,IAAI,CAACO,OAAO,CAACiB,aAAa,CAAC;IAEpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,OAAO,CAACH,MAAM,EAAEa,CAAC,EAAE,EAAE;MACrC,IAAIC,QAAQ,GAAGX,OAAO,CAACU,CAAC,CAAC;MACzB,IAAIE,QAAQ,GAAGJ,WAAW,CAACG,QAAQ,CAAC;MACpC,IAAIE,KAAK,GAAGf,QAAQ,CAACa,QAAQ,CAAC;MAE9B,IAAI5B,OAAO,CAAC6B,QAAQ,CAAC,IAAI7B,OAAO,CAAC8B,KAAK,CAAC,EAAE;QACrC,IAAI,CAACN,KAAK,EAAE;UACRA,KAAK,GAAG,IAAIF,SAAS,CAAC,CAClB,CAAC,EACDQ,KAAK,CACR,EAAE,CACCrB,OAAO,CAACsB,OAAO,EACftB,OAAO,CAACuB,OAAO,CAClB,CAAC;QACN;QAEAH,QAAQ,GAAGxB,QAAQ,CAAC4B,MAAM,CAACJ,QAAQ,CAAC;QAEpC,IAAIK,MAAM,GAAG,IAAI,CAACC,GAAG,CAACC,cAAc,CAACP,QAAQ,CAAC;QAC9C,IAAIQ,IAAI,GAAGb,KAAK,CAACW,GAAG,CAACL,KAAK,CAAC;QAC3B,IAAIQ,MAAM,GAAG,IAAI,CAACC,aAAa,CAAC;UAC5BL,MAAM,EAAEA,MAAM;UACdG,IAAI,EAAEA,IAAI;UACVG,KAAK,EAAE/B,OAAO,CAAC+B,KAAK;UACpBZ,QAAQ,EAAEA,QAAQ;UAClBC,QAAQ,EAAEA;QACd,CAAC,CAAC;QAEFS,MAAM,CAACV,QAAQ,GAAGA,QAAQ;QAC1BU,MAAM,CAACT,QAAQ,GAAGA,QAAQ;QAC1BS,MAAM,CAACR,KAAK,GAAGA,KAAK;QAEpB,IAAI,CAACW,WAAW,CAACH,MAAM,CAAC;MAC5B;IACJ;EACJ;EAEAf,UAAUA,CAAA,EAAG;IACT,IAAIC,KAAK,GAAG,IAAI,CAACf,OAAO,CAACe,KAAK;IAE9B,IAAIvB,UAAU,CAACuB,KAAK,CAAC,EAAE;MACnB,OAAOA,KAAK;IAChB;IAEA,OAAOkB,MAAM,CAAClB,KAAK,CAAC;EACxB;EAEAe,aAAaA,CAACI,IAAI,EAAE;IAChB,IAAIL,MAAM,GAAG,IAAI,CAAC7B,OAAO,CAAC6B,MAAM;IAEhC,IAAI,CAACrC,UAAU,CAACqC,MAAM,CAAC,EAAE;MACrBA,MAAM,GAAGM,OAAO,CAACN,MAAM,CAAC;IAC5B;IAEA,OAAOA,MAAM,CAACK,IAAI,CAAC;EACvB;EAEAF,WAAWA,CAACI,KAAK,EAAE;IACf,IAAIF,IAAI,GAAG;MACPG,KAAK,EAAE,IAAI;MACXD,KAAK,EAAEA;IACX,CAAC;IAED,IAAIE,SAAS,GAAG,IAAI,CAACZ,GAAG,CAACa,OAAO,CAAC,cAAc,EAAEL,IAAI,CAAC;IAEtD,IAAI,CAACI,SAAS,EAAE;MACZ,IAAI,CAACnC,OAAO,CAACqC,IAAI,CAACJ,KAAK,CAAC;IAC5B;EACJ;EAEAK,eAAeA,CAACL,KAAK,EAAE;IACnB,OAAO;MACHM,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;MAC9BC,SAAS,EAAE,sBAAsB;MACjC1B,QAAQ,EAAEiB,KAAK,CAACjB,QAAQ;MACxBC,QAAQ,EAAEgB,KAAK,CAAChB,QAAQ;MACxBC,KAAK,EAAEe,KAAK,CAACf;IACjB,CAAC;EACL;EAEAyB,cAAcA,CAACC,CAAC,EAAE;IACd,MAAMX,KAAK,GAAGW,CAAC,CAACC,OAAO;IACvB,MAAMvB,MAAM,GAAGW,KAAK,CAACa,IAAI,CAAC,CAAC,CAACxB,MAAM,CAAC,CAAC;IAEpC,OAAO;MACHyB,GAAG,EAAEzB,MAAM,CAAC0B,CAAC;MACbC,IAAI,EAAE3B,MAAM,CAAC4B;IACjB,CAAC;EACL;AACJ;AAEA3D,iBAAiB,CAACG,WAAW,EAAE;EAC3B;EACAoB,aAAa,EAAE,UAAU;EACzBV,UAAU,EAAE,OAAO;EACnBe,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,GAAG;EACZR,KAAK,EAAE,MAAM;EACbc,MAAM,EAAE,QAAQ;EAChB;EACAyB,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,SAAS,SAASjE,KAAK,CAAC;EAC1BkE,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAE;IACvB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,OAAO,GAAGF,MAAM;IACrB,IAAI,CAACG,MAAM,GAAGF,KAAK;IAEnB,IAAIG,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGK,IAAI,CAACC,IAAI,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7D,IAAIO,WAAW,GAAGN,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;IAErC,IAAI,CAACO,MAAM,GAAGD,WAAW,GAAGH,WAAW;EAC3C;EAEAnC,GAAGA,CAACL,KAAK,EAAE;IACP,IAAI6C,GAAG,GAAG,CAACJ,IAAI,CAACC,IAAI,CAAC1C,KAAK,CAAC,GAAGyC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAACM,MAAM;IACvE,OAAO,IAAI,CAACL,MAAM,CAAC,CAAC,CAAC,GAAGM,GAAG;EAC/B;AACJ;AAEA,IAAIjC,MAAM,GAAG;EACT8B,IAAI,EAAER;AACV,CAAC;AAED,IAAIpB,OAAO,GAAG;EACVgC,MAAM,EAAE,SAAAA,CAASjC,IAAI,EAAE;IACnB,IAAIkC,GAAG,GAAG,IAAIjF,CAAC,CAACkF,MAAM,CAACnC,IAAI,CAACT,MAAM,EAAES,IAAI,CAACN,IAAI,GAAG,CAAC,CAAC;IAClD,OAAO,IAAIvC,CAAC,CAACgF,MAAM,CAACD,GAAG,EAAElC,IAAI,CAACH,KAAK,CAAC;EACxC,CAAC;EAEDuC,MAAM,EAAE,SAAAA,CAASpC,IAAI,EAAE;IACnB,IAAIqC,IAAI,GAAG,IAAIlF,CAAC,CAACmF,IAAI,CAACtC,IAAI,CAACH,KAAK,CAAC;IACjC,IAAI0C,QAAQ,GAAGvC,IAAI,CAACN,IAAI,GAAG,CAAC;IAC5B,IAAIH,MAAM,GAAGS,IAAI,CAACT,MAAM;IACxB8C,IAAI,CAACG,MAAM,CAACjD,MAAM,CAAC4B,CAAC,GAAGoB,QAAQ,EAAEhD,MAAM,CAAC0B,CAAC,GAAGsB,QAAQ,CAAC,CAACE,MAAM,CAAClD,MAAM,CAAC4B,CAAC,GAAGoB,QAAQ,EAAEhD,MAAM,CAAC0B,CAAC,GAAGsB,QAAQ,CAAC,CAACE,MAAM,CAAClD,MAAM,CAAC4B,CAAC,GAAGoB,QAAQ,EAAEhD,MAAM,CAAC0B,CAAC,GAAGsB,QAAQ,CAAC,CAACE,MAAM,CAAClD,MAAM,CAAC4B,CAAC,GAAGoB,QAAQ,EAAEhD,MAAM,CAAC0B,CAAC,GAAGsB,QAAQ,CAAC,CAACG,KAAK,CAAC,CAAC;IAChN,OAAOL,IAAI;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}