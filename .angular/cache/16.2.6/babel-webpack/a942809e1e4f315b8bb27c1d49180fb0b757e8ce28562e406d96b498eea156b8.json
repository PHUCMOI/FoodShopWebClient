{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"ng-angular-popup\";\nimport * as i3 from \"@angular/router\";\nexport class TokenInterceptor {\n  constructor(login, toast, router) {\n    this.login = login;\n    this.toast = toast;\n    this.router = router;\n  }\n  intercept(request, next) {\n    const myToken = this.login.getToken();\n    if (myToken) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${myToken}`\n        } // \"Bearer + Token\"\n      });\n    }\n\n    return next.handle(request).pipe(catchError(err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status == 401) {\n          this.toast.warning({\n            detail: \"Warning\",\n            summary: \"Token is expried, Login again!\"\n          });\n          this.router.navigate(['login']);\n        }\n      }\n      return throwError(() => new Error(\"Some other error occured\"));\n    }));\n  }\n  static #_ = this.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.NgToastService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["HttpErrorResponse","catchError","throwError","TokenInterceptor","constructor","login","toast","router","intercept","request","next","myToken","getToken","clone","setHeaders","Authorization","handle","pipe","err","status","warning","detail","summary","navigate","Error","_","i0","ɵɵinject","i1","LoginService","i2","NgToastService","i3","Router","_2","factory","ɵfac"],"sources":["C:\\Internship\\FoodShopUI\\src\\app\\services\\interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\nimport { NgToastService } from 'ng-angular-popup';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private login : LoginService, private toast: NgToastService, private router: Router) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const myToken = this.login.getToken();\r\n\r\n    if(myToken) {\r\n      request = request.clone({\r\n        setHeaders: {Authorization: `Bearer ${myToken}`} // \"Bearer + Token\"\r\n      })\r\n    }\r\n\r\n    return next.handle(request).pipe(\r\n      catchError((err : any) => {\r\n        if(err instanceof HttpErrorResponse) {\r\n          if(err.status == 401)\r\n          {\r\n            this.toast.warning({detail: \"Warning\", summary: \"Token is expried, Login again!\"})\r\n            this.router.navigate(['login'])\r\n          }\r\n        }\r\n        return throwError(() => new Error(\"Some other error occured\"))\r\n      })\r\n    );\r\n  }\r\n}"],"mappings":"AACA,SAKEA,iBAAiB,QACZ,sBAAsB;AAC7B,SAAqBC,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;;;AAMzD,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,KAAoB,EAAUC,KAAqB,EAAUC,MAAc;IAA3E,KAAAF,KAAK,GAALA,KAAK;IAAyB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAElGC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,OAAO,GAAG,IAAI,CAACN,KAAK,CAACO,QAAQ,EAAE;IAErC,IAAGD,OAAO,EAAE;MACVF,OAAO,GAAGA,OAAO,CAACI,KAAK,CAAC;QACtBC,UAAU,EAAE;UAACC,aAAa,EAAE,UAAUJ,OAAO;QAAE,CAAC,CAAC;OAClD,CAAC;;;IAGJ,OAAOD,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC,CAACQ,IAAI,CAC9BhB,UAAU,CAAEiB,GAAS,IAAI;MACvB,IAAGA,GAAG,YAAYlB,iBAAiB,EAAE;QACnC,IAAGkB,GAAG,CAACC,MAAM,IAAI,GAAG,EACpB;UACE,IAAI,CAACb,KAAK,CAACc,OAAO,CAAC;YAACC,MAAM,EAAE,SAAS;YAAEC,OAAO,EAAE;UAAgC,CAAC,CAAC;UAClF,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;;MAGnC,OAAOrB,UAAU,CAAC,MAAM,IAAIsB,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAChE,CAAC,CAAC,CACH;EACH;EAAC,QAAAC,CAAA,G;qBAzBUtB,gBAAgB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB/B,gBAAgB;IAAAgC,OAAA,EAAhBhC,gBAAgB,CAAAiC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}