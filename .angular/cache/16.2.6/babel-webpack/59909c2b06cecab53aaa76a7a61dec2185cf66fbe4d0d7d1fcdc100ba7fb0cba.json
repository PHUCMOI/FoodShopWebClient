{"ast":null,"code":"import Bar from '../bar-chart/bar';\nimport BarLabel from '../bar-chart/bar-label';\nimport { deepExtend, getTemplate } from '../../common';\nclass RangeBar extends Bar {\n  createLabel() {\n    const labels = this.options.labels;\n    const fromOptions = deepExtend({}, labels, labels.from);\n    const toOptions = deepExtend({}, labels, labels.to);\n    if (fromOptions.visible) {\n      this.labelFrom = this._createLabel(fromOptions);\n      this.append(this.labelFrom);\n    }\n    if (toOptions.visible) {\n      this.labelTo = this._createLabel(toOptions);\n      this.append(this.labelTo);\n    }\n  }\n  _createLabel(options) {\n    const labelTemplate = getTemplate(options);\n    const pointData = this.pointData();\n    let labelText;\n    if (labelTemplate) {\n      labelText = labelTemplate(pointData);\n    } else {\n      labelText = this.formatValue(options.format);\n    }\n    return new BarLabel(labelText, deepExtend({\n      vertical: this.options.vertical\n    }, options), pointData);\n  }\n  reflow(targetBox) {\n    this.render();\n    const {\n      labelFrom,\n      labelTo,\n      value\n    } = this;\n    this.box = targetBox;\n    if (labelFrom) {\n      labelFrom.options.aboveAxis = value.from > value.to;\n      labelFrom.reflow(targetBox);\n    }\n    if (labelTo) {\n      labelTo.options.aboveAxis = value.to > value.from;\n      labelTo.reflow(targetBox);\n    }\n    if (this.note) {\n      this.note.reflow(targetBox);\n    }\n  }\n}\nRangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n  labels: {\n    format: \"{0} - {1}\"\n  },\n  tooltip: {\n    format: \"{1}\"\n  }\n});\nexport default RangeBar;","map":{"version":3,"names":["Bar","BarLabel","deepExtend","getTemplate","RangeBar","createLabel","labels","options","fromOptions","from","toOptions","to","visible","labelFrom","_createLabel","append","labelTo","labelTemplate","pointData","labelText","formatValue","format","vertical","reflow","targetBox","render","value","box","aboveAxis","note","prototype","defaults","tooltip"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/range-bar-chart/range-bar.js"],"sourcesContent":["import Bar from '../bar-chart/bar';\nimport BarLabel from '../bar-chart/bar-label';\n\nimport { deepExtend, getTemplate } from '../../common';\n\nclass RangeBar extends Bar {\n    createLabel() {\n        const labels = this.options.labels;\n        const fromOptions = deepExtend({}, labels, labels.from);\n        const toOptions = deepExtend({}, labels, labels.to);\n\n        if (fromOptions.visible) {\n            this.labelFrom = this._createLabel(fromOptions);\n            this.append(this.labelFrom);\n        }\n\n        if (toOptions.visible) {\n            this.labelTo = this._createLabel(toOptions);\n            this.append(this.labelTo);\n        }\n    }\n\n    _createLabel(options) {\n        const labelTemplate = getTemplate(options);\n        const pointData = this.pointData();\n\n        let labelText;\n\n        if (labelTemplate) {\n            labelText = labelTemplate(pointData);\n        } else {\n            labelText = this.formatValue(options.format);\n        }\n\n        return new BarLabel(labelText,\n            deepExtend({\n                vertical: this.options.vertical\n            },\n            options\n        ), pointData);\n    }\n\n    reflow(targetBox) {\n        this.render();\n\n        const { labelFrom, labelTo, value } = this;\n\n        this.box = targetBox;\n\n        if (labelFrom) {\n            labelFrom.options.aboveAxis = value.from > value.to;\n            labelFrom.reflow(targetBox);\n        }\n\n        if (labelTo) {\n            labelTo.options.aboveAxis = value.to > value.from;\n            labelTo.reflow(targetBox);\n        }\n\n        if (this.note) {\n            this.note.reflow(targetBox);\n        }\n    }\n}\n\nRangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n    labels: {\n        format: \"{0} - {1}\"\n    },\n    tooltip: {\n        format: \"{1}\"\n    }\n});\n\nexport default RangeBar;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,SAASC,UAAU,EAAEC,WAAW,QAAQ,cAAc;AAEtD,MAAMC,QAAQ,SAASJ,GAAG,CAAC;EACvBK,WAAWA,CAAA,EAAG;IACV,MAAMC,MAAM,GAAG,IAAI,CAACC,OAAO,CAACD,MAAM;IAClC,MAAME,WAAW,GAAGN,UAAU,CAAC,CAAC,CAAC,EAAEI,MAAM,EAAEA,MAAM,CAACG,IAAI,CAAC;IACvD,MAAMC,SAAS,GAAGR,UAAU,CAAC,CAAC,CAAC,EAAEI,MAAM,EAAEA,MAAM,CAACK,EAAE,CAAC;IAEnD,IAAIH,WAAW,CAACI,OAAO,EAAE;MACrB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,YAAY,CAACN,WAAW,CAAC;MAC/C,IAAI,CAACO,MAAM,CAAC,IAAI,CAACF,SAAS,CAAC;IAC/B;IAEA,IAAIH,SAAS,CAACE,OAAO,EAAE;MACnB,IAAI,CAACI,OAAO,GAAG,IAAI,CAACF,YAAY,CAACJ,SAAS,CAAC;MAC3C,IAAI,CAACK,MAAM,CAAC,IAAI,CAACC,OAAO,CAAC;IAC7B;EACJ;EAEAF,YAAYA,CAACP,OAAO,EAAE;IAClB,MAAMU,aAAa,GAAGd,WAAW,CAACI,OAAO,CAAC;IAC1C,MAAMW,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC,CAAC;IAElC,IAAIC,SAAS;IAEb,IAAIF,aAAa,EAAE;MACfE,SAAS,GAAGF,aAAa,CAACC,SAAS,CAAC;IACxC,CAAC,MAAM;MACHC,SAAS,GAAG,IAAI,CAACC,WAAW,CAACb,OAAO,CAACc,MAAM,CAAC;IAChD;IAEA,OAAO,IAAIpB,QAAQ,CAACkB,SAAS,EACzBjB,UAAU,CAAC;MACPoB,QAAQ,EAAE,IAAI,CAACf,OAAO,CAACe;IAC3B,CAAC,EACDf,OACJ,CAAC,EAAEW,SAAS,CAAC;EACjB;EAEAK,MAAMA,CAACC,SAAS,EAAE;IACd,IAAI,CAACC,MAAM,CAAC,CAAC;IAEb,MAAM;MAAEZ,SAAS;MAAEG,OAAO;MAAEU;IAAM,CAAC,GAAG,IAAI;IAE1C,IAAI,CAACC,GAAG,GAAGH,SAAS;IAEpB,IAAIX,SAAS,EAAE;MACXA,SAAS,CAACN,OAAO,CAACqB,SAAS,GAAGF,KAAK,CAACjB,IAAI,GAAGiB,KAAK,CAACf,EAAE;MACnDE,SAAS,CAACU,MAAM,CAACC,SAAS,CAAC;IAC/B;IAEA,IAAIR,OAAO,EAAE;MACTA,OAAO,CAACT,OAAO,CAACqB,SAAS,GAAGF,KAAK,CAACf,EAAE,GAAGe,KAAK,CAACjB,IAAI;MACjDO,OAAO,CAACO,MAAM,CAACC,SAAS,CAAC;IAC7B;IAEA,IAAI,IAAI,CAACK,IAAI,EAAE;MACX,IAAI,CAACA,IAAI,CAACN,MAAM,CAACC,SAAS,CAAC;IAC/B;EACJ;AACJ;AAEApB,QAAQ,CAAC0B,SAAS,CAACC,QAAQ,GAAG7B,UAAU,CAAC,CAAC,CAAC,EAAEE,QAAQ,CAAC0B,SAAS,CAACC,QAAQ,EAAE;EACtEzB,MAAM,EAAE;IACJe,MAAM,EAAE;EACZ,CAAC;EACDW,OAAO,EAAE;IACLX,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC;AAEF,eAAejB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}