{"ast":null,"code":"import HasObservers from '../core/has-observers';\nimport withAccessors from '../mixins/with-accessors';\nimport { defined, round } from '../util';\nclass Size extends withAccessors(HasObservers, [\"width\", \"height\"]) {\n  constructor(width, height) {\n    super();\n    this.width = width || 0;\n    this.height = height || 0;\n  }\n  equals(other) {\n    return other && other.width === this.width && other.height === this.height;\n  }\n  clone() {\n    return new Size(this.width, this.height);\n  }\n  toArray(digits) {\n    const doRound = defined(digits);\n    const width = doRound ? round(this.width, digits) : this.width;\n    const height = doRound ? round(this.height, digits) : this.height;\n    return [width, height];\n  }\n  static create(arg0, arg1) {\n    if (defined(arg0)) {\n      if (arg0 instanceof Size) {\n        return arg0;\n      } else if (arguments.length === 1 && arg0.length === 2) {\n        return new Size(arg0[0], arg0[1]);\n      }\n      return new Size(arg0, arg1);\n    }\n  }\n  static get ZERO() {\n    return new Size(0, 0);\n  }\n}\nexport default Size;","map":{"version":3,"names":["HasObservers","withAccessors","defined","round","Size","constructor","width","height","equals","other","clone","toArray","digits","doRound","create","arg0","arg1","arguments","length","ZERO"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/geometry/size.js"],"sourcesContent":["import HasObservers from '../core/has-observers';\nimport withAccessors from '../mixins/with-accessors';\nimport { defined, round } from '../util';\n\n\nclass Size extends withAccessors(HasObservers, [ \"width\", \"height\" ]) {\n    constructor(width, height) {\n        super();\n\n        this.width = width || 0;\n        this.height = height || 0;\n    }\n\n    equals(other) {\n        return other && other.width === this.width && other.height === this.height;\n    }\n\n    clone() {\n        return new Size(this.width, this.height);\n    }\n\n    toArray(digits) {\n        const doRound = defined(digits);\n        const width = doRound ? round(this.width, digits) : this.width;\n        const height = doRound ? round(this.height, digits) : this.height;\n\n        return [ width, height ];\n    }\n\n    static create(arg0, arg1) {\n        if (defined(arg0)) {\n            if (arg0 instanceof Size) {\n                return arg0;\n            } else if (arguments.length === 1 && arg0.length === 2) {\n                return new Size(arg0[0], arg0[1]);\n            }\n\n            return new Size(arg0, arg1);\n        }\n    }\n\n    static get ZERO() {\n        return new Size(0, 0);\n    }\n}\n\nexport default Size;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,uBAAuB;AAChD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,OAAO,EAAEC,KAAK,QAAQ,SAAS;AAGxC,MAAMC,IAAI,SAASH,aAAa,CAACD,YAAY,EAAE,CAAE,OAAO,EAAE,QAAQ,CAAE,CAAC,CAAC;EAClEK,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACvB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACD,KAAK,GAAGA,KAAK,IAAI,CAAC;IACvB,IAAI,CAACC,MAAM,GAAGA,MAAM,IAAI,CAAC;EAC7B;EAEAC,MAAMA,CAACC,KAAK,EAAE;IACV,OAAOA,KAAK,IAAIA,KAAK,CAACH,KAAK,KAAK,IAAI,CAACA,KAAK,IAAIG,KAAK,CAACF,MAAM,KAAK,IAAI,CAACA,MAAM;EAC9E;EAEAG,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAIN,IAAI,CAAC,IAAI,CAACE,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;EAC5C;EAEAI,OAAOA,CAACC,MAAM,EAAE;IACZ,MAAMC,OAAO,GAAGX,OAAO,CAACU,MAAM,CAAC;IAC/B,MAAMN,KAAK,GAAGO,OAAO,GAAGV,KAAK,CAAC,IAAI,CAACG,KAAK,EAAEM,MAAM,CAAC,GAAG,IAAI,CAACN,KAAK;IAC9D,MAAMC,MAAM,GAAGM,OAAO,GAAGV,KAAK,CAAC,IAAI,CAACI,MAAM,EAAEK,MAAM,CAAC,GAAG,IAAI,CAACL,MAAM;IAEjE,OAAO,CAAED,KAAK,EAAEC,MAAM,CAAE;EAC5B;EAEA,OAAOO,MAAMA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACtB,IAAId,OAAO,CAACa,IAAI,CAAC,EAAE;MACf,IAAIA,IAAI,YAAYX,IAAI,EAAE;QACtB,OAAOW,IAAI;MACf,CAAC,MAAM,IAAIE,SAAS,CAACC,MAAM,KAAK,CAAC,IAAIH,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;QACpD,OAAO,IAAId,IAAI,CAACW,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;MACrC;MAEA,OAAO,IAAIX,IAAI,CAACW,IAAI,EAAEC,IAAI,CAAC;IAC/B;EACJ;EAEA,WAAWG,IAAIA,CAAA,EAAG;IACd,OAAO,IAAIf,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB;AACJ;AAEA,eAAeA,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}