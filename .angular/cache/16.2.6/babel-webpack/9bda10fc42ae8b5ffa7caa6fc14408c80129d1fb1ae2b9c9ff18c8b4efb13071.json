{"ast":null,"code":"import PathNode from './path-node';\nimport renderStyle from './utils/render-style';\nimport renderAttr from './utils/render-attribute';\nimport { htmlEncode, support } from '../common';\nimport { normalizeText } from '../text-metrics';\nconst ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\nfunction decodeEntities(text) {\n  if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n    return text;\n  }\n  const element = decodeEntities._element;\n  ENTITY_REGEX.lastIndex = 0;\n  return text.replace(ENTITY_REGEX, match => {\n    element.innerHTML = match;\n    return element.textContent || element.innerText;\n  });\n}\nif (typeof document !== \"undefined\") {\n  decodeEntities._element = document.createElement(\"span\");\n}\nclass TextNode extends PathNode {\n  geometryChange() {\n    const pos = this.pos();\n    this.attr(\"x\", pos.x);\n    this.attr(\"y\", pos.y);\n    this.invalidate();\n  }\n  optionsChange(e) {\n    if (e.field === \"font\") {\n      this.attr(\"style\", renderStyle(this.mapStyle()));\n      this.geometryChange();\n    } else if (e.field === \"content\") {\n      super.content(this.srcElement.content());\n    }\n    super.optionsChange(e);\n  }\n  mapStyle(encode) {\n    const style = super.mapStyle(encode);\n    let font = this.srcElement.options.font;\n    if (encode) {\n      font = htmlEncode(font);\n    }\n    style.push([\"font\", font], [\"white-space\", \"pre\"]);\n    return style;\n  }\n  pos() {\n    const pos = this.srcElement.position();\n    const size = this.srcElement.measure();\n    return pos.clone().setY(pos.y + size.baseline);\n  }\n  renderContent() {\n    let content = this.srcElement.content();\n    content = decodeEntities(content);\n    content = htmlEncode(content);\n    return normalizeText(content);\n  }\n  renderTextAnchor() {\n    let anchor;\n    if ((this.options || {}).rtl && !(support.browser.msie || support.browser.edge)) {\n      anchor = 'end';\n    }\n    return renderAttr(\"text-anchor\", anchor);\n  }\n  template() {\n    return `<text ${this.renderId()} ${this.renderTextAnchor()} ${this.renderStyle()} ${this.renderOpacity()}` + `x='${this.pos().x}' y='${this.pos().y}' ${this.renderStroke()} ${this.renderTransform()} ${this.renderDefinitions()}` + `${this.renderFill()}` + `${this.renderClassName()} ${this.renderRole()}` + `${this.renderAriaLabel()} ${this.renderAriaRoleDescription()}` + `>${this.renderContent()}</text>`;\n  }\n}\nexport default TextNode;","map":{"version":3,"names":["PathNode","renderStyle","renderAttr","htmlEncode","support","normalizeText","ENTITY_REGEX","decodeEntities","text","test","element","_element","lastIndex","replace","match","innerHTML","textContent","innerText","document","createElement","TextNode","geometryChange","pos","attr","x","y","invalidate","optionsChange","e","field","mapStyle","content","srcElement","encode","style","font","options","push","position","size","measure","clone","setY","baseline","renderContent","renderTextAnchor","anchor","rtl","browser","msie","edge","template","renderId","renderOpacity","renderStroke","renderTransform","renderDefinitions","renderFill","renderClassName","renderRole","renderAriaLabel","renderAriaRoleDescription"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/svg/text-node.js"],"sourcesContent":["import PathNode from './path-node';\nimport renderStyle from './utils/render-style';\nimport renderAttr from './utils/render-attribute';\nimport { htmlEncode, support } from '../common';\nimport { normalizeText } from '../text-metrics';\n\nconst ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\n\nfunction decodeEntities(text) {\n    if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n        return text;\n    }\n\n    const element = decodeEntities._element;\n    ENTITY_REGEX.lastIndex = 0;\n\n    return text.replace(ENTITY_REGEX, (match) => {\n        element.innerHTML = match;\n\n        return element.textContent || element.innerText;\n    });\n}\n\nif (typeof document !== \"undefined\") {\n    decodeEntities._element = document.createElement(\"span\");\n}\n\nclass TextNode extends PathNode {\n\n    geometryChange() {\n        const pos = this.pos();\n        this.attr(\"x\", pos.x);\n        this.attr(\"y\", pos.y);\n        this.invalidate();\n    }\n\n    optionsChange(e) {\n        if (e.field === \"font\") {\n            this.attr(\"style\", renderStyle(this.mapStyle()));\n            this.geometryChange();\n        } else if (e.field === \"content\") {\n            super.content(this.srcElement.content());\n        }\n\n        super.optionsChange(e);\n    }\n\n    mapStyle(encode) {\n        const style = super.mapStyle(encode);\n        let font = this.srcElement.options.font;\n\n        if (encode) {\n            font = htmlEncode(font);\n        }\n\n        style.push([ \"font\", font ], [ \"white-space\", \"pre\" ]);\n\n        return style;\n    }\n\n    pos() {\n        const pos = this.srcElement.position();\n        const size = this.srcElement.measure();\n        return pos.clone().setY(pos.y + size.baseline);\n    }\n\n    renderContent() {\n        let content = this.srcElement.content();\n        content = decodeEntities(content);\n        content = htmlEncode(content);\n\n        return normalizeText(content);\n    }\n\n    renderTextAnchor() {\n        let anchor;\n\n        if ((this.options || {}).rtl && !(support.browser.msie || support.browser.edge)) {\n            anchor = 'end';\n        }\n\n        return renderAttr(\"text-anchor\", anchor);\n    }\n\n    template() {\n        return `<text ${ this.renderId() } ${ this.renderTextAnchor() } ${ this.renderStyle() } ${ this.renderOpacity() }` +\n                    `x='${ this.pos().x }' y='${ this.pos().y }' ${ this.renderStroke() } ${ this.renderTransform() } ${ this.renderDefinitions() }` +\n                    `${ this.renderFill() }` +\n                    `${ this.renderClassName() } ${ this.renderRole() }` +\n                    `${ this.renderAriaLabel() } ${ this.renderAriaRoleDescription() }` +\n                    `>${ this.renderContent() }</text>`;\n    }\n}\n\nexport default TextNode;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,aAAa;AAClC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,UAAU,EAAEC,OAAO,QAAQ,WAAW;AAC/C,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC1B,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACF,YAAY,CAACG,IAAI,CAACD,IAAI,CAAC,EAAE;IAC/D,OAAOA,IAAI;EACf;EAEA,MAAME,OAAO,GAAGH,cAAc,CAACI,QAAQ;EACvCL,YAAY,CAACM,SAAS,GAAG,CAAC;EAE1B,OAAOJ,IAAI,CAACK,OAAO,CAACP,YAAY,EAAGQ,KAAK,IAAK;IACzCJ,OAAO,CAACK,SAAS,GAAGD,KAAK;IAEzB,OAAOJ,OAAO,CAACM,WAAW,IAAIN,OAAO,CAACO,SAAS;EACnD,CAAC,CAAC;AACN;AAEA,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;EACjCX,cAAc,CAACI,QAAQ,GAAGO,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;AAC5D;AAEA,MAAMC,QAAQ,SAASpB,QAAQ,CAAC;EAE5BqB,cAAcA,CAAA,EAAG;IACb,MAAMC,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC,CAAC;IACtB,IAAI,CAACC,IAAI,CAAC,GAAG,EAAED,GAAG,CAACE,CAAC,CAAC;IACrB,IAAI,CAACD,IAAI,CAAC,GAAG,EAAED,GAAG,CAACG,CAAC,CAAC;IACrB,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB;EAEAC,aAAaA,CAACC,CAAC,EAAE;IACb,IAAIA,CAAC,CAACC,KAAK,KAAK,MAAM,EAAE;MACpB,IAAI,CAACN,IAAI,CAAC,OAAO,EAAEtB,WAAW,CAAC,IAAI,CAAC6B,QAAQ,CAAC,CAAC,CAAC,CAAC;MAChD,IAAI,CAACT,cAAc,CAAC,CAAC;IACzB,CAAC,MAAM,IAAIO,CAAC,CAACC,KAAK,KAAK,SAAS,EAAE;MAC9B,KAAK,CAACE,OAAO,CAAC,IAAI,CAACC,UAAU,CAACD,OAAO,CAAC,CAAC,CAAC;IAC5C;IAEA,KAAK,CAACJ,aAAa,CAACC,CAAC,CAAC;EAC1B;EAEAE,QAAQA,CAACG,MAAM,EAAE;IACb,MAAMC,KAAK,GAAG,KAAK,CAACJ,QAAQ,CAACG,MAAM,CAAC;IACpC,IAAIE,IAAI,GAAG,IAAI,CAACH,UAAU,CAACI,OAAO,CAACD,IAAI;IAEvC,IAAIF,MAAM,EAAE;MACRE,IAAI,GAAGhC,UAAU,CAACgC,IAAI,CAAC;IAC3B;IAEAD,KAAK,CAACG,IAAI,CAAC,CAAE,MAAM,EAAEF,IAAI,CAAE,EAAE,CAAE,aAAa,EAAE,KAAK,CAAE,CAAC;IAEtD,OAAOD,KAAK;EAChB;EAEAZ,GAAGA,CAAA,EAAG;IACF,MAAMA,GAAG,GAAG,IAAI,CAACU,UAAU,CAACM,QAAQ,CAAC,CAAC;IACtC,MAAMC,IAAI,GAAG,IAAI,CAACP,UAAU,CAACQ,OAAO,CAAC,CAAC;IACtC,OAAOlB,GAAG,CAACmB,KAAK,CAAC,CAAC,CAACC,IAAI,CAACpB,GAAG,CAACG,CAAC,GAAGc,IAAI,CAACI,QAAQ,CAAC;EAClD;EAEAC,aAAaA,CAAA,EAAG;IACZ,IAAIb,OAAO,GAAG,IAAI,CAACC,UAAU,CAACD,OAAO,CAAC,CAAC;IACvCA,OAAO,GAAGxB,cAAc,CAACwB,OAAO,CAAC;IACjCA,OAAO,GAAG5B,UAAU,CAAC4B,OAAO,CAAC;IAE7B,OAAO1B,aAAa,CAAC0B,OAAO,CAAC;EACjC;EAEAc,gBAAgBA,CAAA,EAAG;IACf,IAAIC,MAAM;IAEV,IAAI,CAAC,IAAI,CAACV,OAAO,IAAI,CAAC,CAAC,EAAEW,GAAG,IAAI,EAAE3C,OAAO,CAAC4C,OAAO,CAACC,IAAI,IAAI7C,OAAO,CAAC4C,OAAO,CAACE,IAAI,CAAC,EAAE;MAC7EJ,MAAM,GAAG,KAAK;IAClB;IAEA,OAAO5C,UAAU,CAAC,aAAa,EAAE4C,MAAM,CAAC;EAC5C;EAEAK,QAAQA,CAAA,EAAG;IACP,OAAQ,SAAS,IAAI,CAACC,QAAQ,CAAC,CAAG,IAAI,IAAI,CAACP,gBAAgB,CAAC,CAAG,IAAI,IAAI,CAAC5C,WAAW,CAAC,CAAG,IAAI,IAAI,CAACoD,aAAa,CAAC,CAAG,EAAC,GACrG,MAAM,IAAI,CAAC/B,GAAG,CAAC,CAAC,CAACE,CAAG,QAAQ,IAAI,CAACF,GAAG,CAAC,CAAC,CAACG,CAAG,KAAK,IAAI,CAAC6B,YAAY,CAAC,CAAG,IAAI,IAAI,CAACC,eAAe,CAAC,CAAG,IAAI,IAAI,CAACC,iBAAiB,CAAC,CAAG,EAAC,GAC/H,GAAG,IAAI,CAACC,UAAU,CAAC,CAAG,EAAC,GACvB,GAAG,IAAI,CAACC,eAAe,CAAC,CAAG,IAAI,IAAI,CAACC,UAAU,CAAC,CAAG,EAAC,GACnD,GAAG,IAAI,CAACC,eAAe,CAAC,CAAG,IAAI,IAAI,CAACC,yBAAyB,CAAC,CAAG,EAAC,GAClE,IAAI,IAAI,CAACjB,aAAa,CAAC,CAAG,SAAQ;EACnD;AACJ;AAEA,eAAexB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}