{"ast":null,"code":"import calculateSlope from './calculate-slope';\nfunction linearTrendline(context) {\n  const {\n    options,\n    categoryAxis,\n    seriesValues\n  } = context;\n  const {\n    data\n  } = getData({\n    seriesValues,\n    categoryAxis,\n    options\n  });\n  if (data) {\n    return Object.assign({}, options, {\n      type: 'line',\n      data,\n      categoryField: 'category',\n      field: 'value'\n    });\n  }\n  return null;\n}\nconst valueGetter = fieldName => ({\n  categoryIx,\n  valueFields\n}) => ({\n  xValue: categoryIx + 1,\n  yValue: valueFields[fieldName]\n});\nfunction getData({\n  seriesValues,\n  categoryAxis,\n  options\n}) {\n  const {\n    slope,\n    intercept,\n    count\n  } = calculateSlope(seriesValues(), valueGetter(options.field));\n  if (count > 0) {\n    const data = [];\n    const totalRange = categoryAxis.totalRangeIndices();\n    const currentRange = categoryAxis.currentRangeIndices();\n    const range = {\n      min: Math.floor(Math.max(currentRange.min - 1, totalRange.min)),\n      max: Math.ceil(Math.min(currentRange.max + 2, totalRange.max))\n    };\n    for (let i = range.min; i < range.max; i++) {\n      data[i] = {\n        category: categoryAxis.categoryAt(i, true),\n        value: slope * (i + 1) + intercept\n      };\n    }\n    return {\n      data\n    };\n  }\n  return {\n    data: null\n  };\n}\nexport default linearTrendline;","map":{"version":3,"names":["calculateSlope","linearTrendline","context","options","categoryAxis","seriesValues","data","getData","Object","assign","type","categoryField","field","valueGetter","fieldName","categoryIx","valueFields","xValue","yValue","slope","intercept","count","totalRange","totalRangeIndices","currentRange","currentRangeIndices","range","min","Math","floor","max","ceil","i","category","categoryAt","value"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/trendlines/linear-trendline.js"],"sourcesContent":["import calculateSlope from './calculate-slope';\n\nfunction linearTrendline(context) {\n    const {\n        options,\n        categoryAxis,\n        seriesValues\n    } = context;\n\n    const { data } = getData({ seriesValues, categoryAxis, options });\n    if (data) {\n        return Object.assign({}, options,\n\n            {type: 'line',\n            data,\n            categoryField: 'category',\n            field: 'value'});\n    }\n\n    return null;\n}\n\nconst valueGetter = fieldName => ({ categoryIx, valueFields }) =>\n    ({ xValue: categoryIx + 1, yValue: valueFields[fieldName] });\n\nfunction getData({ seriesValues, categoryAxis, options }) {\n    const { slope, intercept, count } = calculateSlope(seriesValues(), valueGetter(options.field));\n\n    if (count > 0) {\n        const data = [];\n        const totalRange = categoryAxis.totalRangeIndices();\n        const currentRange = categoryAxis.currentRangeIndices();\n        const range = {\n            min: Math.floor(Math.max(currentRange.min - 1, totalRange.min)),\n            max: Math.ceil(Math.min(currentRange.max + 2, totalRange.max))\n        };\n\n        for (let i = range.min; i < range.max; i++) {\n            data[i] = {\n                category: categoryAxis.categoryAt(i, true),\n                value: slope * (i + 1) + intercept\n            };\n        }\n\n        return { data };\n    }\n\n    return { data: null };\n}\n\nexport default linearTrendline;\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,mBAAmB;AAE9C,SAASC,eAAeA,CAACC,OAAO,EAAE;EAC9B,MAAM;IACFC,OAAO;IACPC,YAAY;IACZC;EACJ,CAAC,GAAGH,OAAO;EAEX,MAAM;IAAEI;EAAK,CAAC,GAAGC,OAAO,CAAC;IAAEF,YAAY;IAAED,YAAY;IAAED;EAAQ,CAAC,CAAC;EACjE,IAAIG,IAAI,EAAE;IACN,OAAOE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,OAAO,EAE5B;MAACO,IAAI,EAAE,MAAM;MACbJ,IAAI;MACJK,aAAa,EAAE,UAAU;MACzBC,KAAK,EAAE;IAAO,CAAC,CAAC;EACxB;EAEA,OAAO,IAAI;AACf;AAEA,MAAMC,WAAW,GAAGC,SAAS,IAAI,CAAC;EAAEC,UAAU;EAAEC;AAAY,CAAC,MACxD;EAAEC,MAAM,EAAEF,UAAU,GAAG,CAAC;EAAEG,MAAM,EAAEF,WAAW,CAACF,SAAS;AAAE,CAAC,CAAC;AAEhE,SAASP,OAAOA,CAAC;EAAEF,YAAY;EAAED,YAAY;EAAED;AAAQ,CAAC,EAAE;EACtD,MAAM;IAAEgB,KAAK;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGrB,cAAc,CAACK,YAAY,CAAC,CAAC,EAAEQ,WAAW,CAACV,OAAO,CAACS,KAAK,CAAC,CAAC;EAE9F,IAAIS,KAAK,GAAG,CAAC,EAAE;IACX,MAAMf,IAAI,GAAG,EAAE;IACf,MAAMgB,UAAU,GAAGlB,YAAY,CAACmB,iBAAiB,CAAC,CAAC;IACnD,MAAMC,YAAY,GAAGpB,YAAY,CAACqB,mBAAmB,CAAC,CAAC;IACvD,MAAMC,KAAK,GAAG;MACVC,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,YAAY,CAACG,GAAG,GAAG,CAAC,EAAEL,UAAU,CAACK,GAAG,CAAC,CAAC;MAC/DG,GAAG,EAAEF,IAAI,CAACG,IAAI,CAACH,IAAI,CAACD,GAAG,CAACH,YAAY,CAACM,GAAG,GAAG,CAAC,EAAER,UAAU,CAACQ,GAAG,CAAC;IACjE,CAAC;IAED,KAAK,IAAIE,CAAC,GAAGN,KAAK,CAACC,GAAG,EAAEK,CAAC,GAAGN,KAAK,CAACI,GAAG,EAAEE,CAAC,EAAE,EAAE;MACxC1B,IAAI,CAAC0B,CAAC,CAAC,GAAG;QACNC,QAAQ,EAAE7B,YAAY,CAAC8B,UAAU,CAACF,CAAC,EAAE,IAAI,CAAC;QAC1CG,KAAK,EAAEhB,KAAK,IAAIa,CAAC,GAAG,CAAC,CAAC,GAAGZ;MAC7B,CAAC;IACL;IAEA,OAAO;MAAEd;IAAK,CAAC;EACnB;EAEA,OAAO;IAAEA,IAAI,EAAE;EAAK,CAAC;AACzB;AAEA,eAAeL,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}