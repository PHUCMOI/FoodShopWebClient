{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@progress/kendo-angular-intl\";\nimport * as i2 from \"src/app/services/dashboard.service\";\nimport * as i3 from \"src/app/services/login.service\";\nfunction DashboardComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", product_r2.productName, \" : \", product_r2.quantity, \" \");\n  }\n}\nfunction DashboardComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const customer_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", customer_r3.userName, \" : \", customer_r3.totalOrderAmount, \" vnd \");\n  }\n}\nconst _c0 = function (a1) {\n  return {\n    visible: true,\n    content: a1\n  };\n};\nexport class DashboardComponent {\n  constructor(intl, dashboardService, login) {\n    this.intl = intl;\n    this.dashboardService = dashboardService;\n    this.login = login;\n    this.categories = [];\n    this.counts = [];\n    this.labelContent = this.labelContent.bind(this);\n  }\n  ngOnInit() {\n    this.dashboardService.getPieChartData().subscribe({\n      next: data => {\n        this.pieData = data;\n        this.login.isLoged.next(true);\n        let token = this.login.getinfo();\n        if (token.role === \"Admin\") {\n          this.isAdmin = true;\n          this.login.isAdmin.next(true);\n        }\n      }\n    });\n    this.dashboardService.getBarChartCategoryData().subscribe({\n      next: data => {\n        this.barDataCategory = data;\n        this.barDataCategory.forEach(item => {\n          this.categories.push(item.category);\n          this.counts.push(item.totalQuantity);\n        });\n      }\n    });\n    this.dashboardService.getDashboardData().subscribe({\n      next: data => {\n        this.dashboardData = data;\n        console.log(this.dashboardData.topCustomer);\n      }\n    });\n  }\n  labelContent(args) {\n    const percentage = Math.round(args.dataItem.value * 1000); // Convert to a whole number\n    return `${args.dataItem.category} : ${this.intl.formatNumber(percentage, 'n0')}%`;\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.IntlService), i0.ɵɵdirectiveInject(i2.DashboardService), i0.ɵɵdirectiveInject(i3.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 32,\n    vars: 9,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"card\", \"mb-3\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"list-group\"], [\"class\", \"list-group-item text-dark\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"list-group-item\"], [1, \"col-md-9\"], [\"title\", \"Category in store\"], [\"position\", \"bottom\"], [\"type\", \"pie\", \"field\", \"value\", \"categoryField\", \"category\", 3, \"data\", \"labels\"], [\"title\", \"Number of products sold\"], [3, \"categories\"], [\"type\", \"column\", 3, \"data\"], [1, \"list-group-item\", \"text-dark\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Top Product Sellers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ul\", 6);\n        i0.ɵɵtemplate(8, DashboardComponent_li_8_Template, 2, 2, \"li\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4)(11, \"h5\", 5);\n        i0.ɵɵtext(12, \"Top Customers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ul\", 6);\n        i0.ɵɵtemplate(14, DashboardComponent_li_14_Template, 2, 2, \"li\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 4)(17, \"h5\", 5);\n        i0.ɵɵtext(18, \"Total Income\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ul\", 6)(20, \"li\", 10);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(22, \"div\", 11)(23, \"kendo-chart\", 12);\n        i0.ɵɵelement(24, \"kendo-chart-legend\", 13);\n        i0.ɵɵelementStart(25, \"kendo-chart-series\");\n        i0.ɵɵelement(26, \"kendo-chart-series-item\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"kendo-chart\", 15)(28, \"kendo-chart-category-axis\");\n        i0.ɵɵelement(29, \"kendo-chart-category-axis-item\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"kendo-chart-series\");\n        i0.ɵɵelement(31, \"kendo-chart-series-item\", 17);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dashboardData.topProductSellers);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dashboardData.topCustomer);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.dashboardData.totalIncome, \" vnd \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"data\", ctx.pieData)(\"labels\", i0.ɵɵpureFunction1(7, _c0, ctx.labelContent));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"categories\", ctx.categories);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"data\", ctx.counts);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","product_r2","productName","quantity","customer_r3","userName","totalOrderAmount","DashboardComponent","constructor","intl","dashboardService","login","categories","counts","labelContent","bind","ngOnInit","getPieChartData","subscribe","next","data","pieData","isLoged","token","getinfo","role","isAdmin","getBarChartCategoryData","barDataCategory","forEach","item","push","category","totalQuantity","getDashboardData","dashboardData","console","log","topCustomer","args","percentage","Math","round","dataItem","value","formatNumber","_","ɵɵdirectiveInject","i1","IntlService","i2","DashboardService","i3","LoginService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_li_8_Template","DashboardComponent_li_14_Template","ɵɵelement","ɵɵproperty","topProductSellers","ɵɵtextInterpolate1","totalIncome","ɵɵpureFunction1","_c0"],"sources":["C:\\Internship\\FoodShopUI\\src\\app\\components\\dashboard\\dashboard.component.ts","C:\\Internship\\FoodShopUI\\src\\app\\components\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SeriesLabelsContentArgs } from '@progress/kendo-angular-charts';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { BarChartCategory } from 'src/app/models/Chart';\nimport { Dashboard } from 'src/app/models/Dashboard';\nimport { DashboardService } from 'src/app/services/dashboard.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  isAdmin !: any;\n  pieData !: any;\n  barDataCategory !: any;\n  dashboardData !: any;\n  categories: string[] = [];\n  counts: number[] = [];\n  constructor(private intl: IntlService,\n    private dashboardService: DashboardService,\n    private login: LoginService) {\n    this.labelContent = this.labelContent.bind(this);\n  }\n\n  ngOnInit(): void {\n    this.dashboardService.getPieChartData().subscribe({\n      next: data => {\n        this.pieData = data;\n        this.login.isLoged.next(true);\n        let token = this.login.getinfo();\n        if (token.role === \"Admin\") {\n          this.isAdmin = true;\n          this.login.isAdmin.next(true);\n        }\n      }\n    })\n    this.dashboardService.getBarChartCategoryData().subscribe({\n      next: data => {\n        this.barDataCategory = data;\n        this.barDataCategory.forEach((item: BarChartCategory) => {\n          this.categories.push(item.category);\n          this.counts.push(item.totalQuantity);\n        });\n      }\n    })\n    this.dashboardService.getDashboardData().subscribe({\n      next : data => {\n        this.dashboardData = data;\n        console.log(this.dashboardData.topCustomer)\n      }\n    })\n  }\n\n  public labelContent(args: SeriesLabelsContentArgs): string {\n    const percentage = Math.round(args.dataItem.value * 1000); // Convert to a whole number\n    return `${args.dataItem.category} : ${this.intl.formatNumber(percentage, 'n0')}%`;\n  }\n\n}","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Top Product Sellers</h5>\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item text-dark\" *ngFor=\"let product of dashboardData.topProductSellers\">\r\n                {{ product.productName }} : {{ product.quantity }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Top Customers</h5>\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item\" *ngFor=\"let customer of dashboardData.topCustomer\">\r\n                {{ customer.userName }} : {{ customer.totalOrderAmount }} vnd\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Total Income</h5>\r\n            <ul class=\"list-group\">\r\n              <li class=\"list-group-item\">\r\n                {{ dashboardData.totalIncome }} vnd\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-9\">\r\n        <kendo-chart title=\"Category in store\">\r\n          <kendo-chart-legend position=\"bottom\"></kendo-chart-legend>\r\n          <kendo-chart-series>\r\n            <kendo-chart-series-item type=\"pie\" [data]=\"pieData\" field=\"value\" categoryField=\"category\"\r\n                [labels]=\"{ visible: true, content: labelContent }\">\r\n            </kendo-chart-series-item>\r\n          </kendo-chart-series>\r\n        </kendo-chart>\r\n  \r\n        <kendo-chart title=\"Number of products sold\">\r\n          <kendo-chart-category-axis>\r\n            <kendo-chart-category-axis-item [categories]=\"categories\">\r\n            </kendo-chart-category-axis-item>\r\n          </kendo-chart-category-axis>\r\n          <kendo-chart-series>\r\n            <kendo-chart-series-item type=\"column\" [data]=\"counts\">\r\n            </kendo-chart-series-item>\r\n          </kendo-chart-series>\r\n        </kendo-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}