{"ast":null,"code":"import { SVG_NS } from '../constants';\nconst applyStyle = (styleString, element) => styleString.split(';').filter(s => s !== '').forEach(s => {\n  const parts = s.split(':');\n  element.style[parts[0].trim()] = parts[1].trim();\n});\nconst styleAttr = 'data-style';\nconst replaceStyleAttr = html => html.replace(/\\sstyle=/g, ' ' + styleAttr + '=');\nconst restoreStyleAttr = container => {\n  Array.from(container.querySelectorAll('[' + styleAttr + ']')).forEach(element => {\n    const styleString = element.getAttribute(styleAttr);\n    element.removeAttribute(styleAttr);\n    applyStyle(styleString, element);\n  });\n};\nlet renderSVG = function (container, svg) {\n  container.innerHTML = replaceStyleAttr(svg);\n  restoreStyleAttr(container);\n};\nif (typeof document !== \"undefined\") {\n  const testFragment = \"<svg xmlns='\" + SVG_NS + \"'></svg>\";\n  const testContainer = document.createElement(\"div\");\n  const hasParser = typeof DOMParser !== \"undefined\";\n  testContainer.innerHTML = testFragment;\n  if (hasParser && testContainer.firstChild.namespaceURI !== SVG_NS) {\n    renderSVG = function (container, svg) {\n      const parser = new DOMParser();\n      const chartDoc = parser.parseFromString(replaceStyleAttr(svg), \"text/xml\");\n      restoreStyleAttr(chartDoc);\n      const importedDoc = document.adoptNode(chartDoc.documentElement);\n      container.innerHTML = \"\";\n      container.appendChild(importedDoc);\n    };\n  }\n}\nexport default renderSVG;","map":{"version":3,"names":["SVG_NS","applyStyle","styleString","element","split","filter","s","forEach","parts","style","trim","styleAttr","replaceStyleAttr","html","replace","restoreStyleAttr","container","Array","from","querySelectorAll","getAttribute","removeAttribute","renderSVG","svg","innerHTML","document","testFragment","testContainer","createElement","hasParser","DOMParser","firstChild","namespaceURI","parser","chartDoc","parseFromString","importedDoc","adoptNode","documentElement","appendChild"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/svg/utils/render-svg.js"],"sourcesContent":["import { SVG_NS } from '../constants';\n\nconst applyStyle = (styleString, element) =>\n    styleString.split(';').filter(s => s !== '').forEach(s => {\n        const parts = s.split(':');\n        element.style[parts[0].trim()] = parts[1].trim();\n    });\n\nconst styleAttr = 'data-style';\nconst replaceStyleAttr = (html) => html.replace(/\\sstyle=/g, ' ' + styleAttr + '=');\nconst restoreStyleAttr = (container) => {\n    Array.from(container.querySelectorAll('[' + styleAttr +']')).forEach((element) => {\n        const styleString = element.getAttribute(styleAttr);\n        element.removeAttribute(styleAttr);\n        applyStyle(styleString, element);\n    });\n};\n\nlet renderSVG = function(container, svg) {\n    container.innerHTML = replaceStyleAttr(svg);\n    restoreStyleAttr(container);\n};\n\nif (typeof document !== \"undefined\") {\n    const testFragment = \"<svg xmlns='\" + SVG_NS + \"'></svg>\";\n    const testContainer = document.createElement(\"div\");\n    const hasParser = typeof DOMParser !== \"undefined\";\n\n    testContainer.innerHTML = testFragment;\n\n    if (hasParser && testContainer.firstChild.namespaceURI !== SVG_NS) {\n        renderSVG = function(container, svg) {\n            const parser = new DOMParser();\n            const chartDoc = parser.parseFromString(replaceStyleAttr(svg), \"text/xml\");\n            restoreStyleAttr(chartDoc);\n            const importedDoc = document.adoptNode(chartDoc.documentElement);\n\n            container.innerHTML = \"\";\n            container.appendChild(importedDoc);\n        };\n    }\n}\n\nexport default renderSVG;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AAErC,MAAMC,UAAU,GAAGA,CAACC,WAAW,EAAEC,OAAO,KACpCD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,EAAE,CAAC,CAACC,OAAO,CAACD,CAAC,IAAI;EACtD,MAAME,KAAK,GAAGF,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC;EAC1BD,OAAO,CAACM,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;AACpD,CAAC,CAAC;AAEN,MAAMC,SAAS,GAAG,YAAY;AAC9B,MAAMC,gBAAgB,GAAIC,IAAI,IAAKA,IAAI,CAACC,OAAO,CAAC,WAAW,EAAE,GAAG,GAAGH,SAAS,GAAG,GAAG,CAAC;AACnF,MAAMI,gBAAgB,GAAIC,SAAS,IAAK;EACpCC,KAAK,CAACC,IAAI,CAACF,SAAS,CAACG,gBAAgB,CAAC,GAAG,GAAGR,SAAS,GAAE,GAAG,CAAC,CAAC,CAACJ,OAAO,CAAEJ,OAAO,IAAK;IAC9E,MAAMD,WAAW,GAAGC,OAAO,CAACiB,YAAY,CAACT,SAAS,CAAC;IACnDR,OAAO,CAACkB,eAAe,CAACV,SAAS,CAAC;IAClCV,UAAU,CAACC,WAAW,EAAEC,OAAO,CAAC;EACpC,CAAC,CAAC;AACN,CAAC;AAED,IAAImB,SAAS,GAAG,SAAAA,CAASN,SAAS,EAAEO,GAAG,EAAE;EACrCP,SAAS,CAACQ,SAAS,GAAGZ,gBAAgB,CAACW,GAAG,CAAC;EAC3CR,gBAAgB,CAACC,SAAS,CAAC;AAC/B,CAAC;AAED,IAAI,OAAOS,QAAQ,KAAK,WAAW,EAAE;EACjC,MAAMC,YAAY,GAAG,cAAc,GAAG1B,MAAM,GAAG,UAAU;EACzD,MAAM2B,aAAa,GAAGF,QAAQ,CAACG,aAAa,CAAC,KAAK,CAAC;EACnD,MAAMC,SAAS,GAAG,OAAOC,SAAS,KAAK,WAAW;EAElDH,aAAa,CAACH,SAAS,GAAGE,YAAY;EAEtC,IAAIG,SAAS,IAAIF,aAAa,CAACI,UAAU,CAACC,YAAY,KAAKhC,MAAM,EAAE;IAC/DsB,SAAS,GAAG,SAAAA,CAASN,SAAS,EAAEO,GAAG,EAAE;MACjC,MAAMU,MAAM,GAAG,IAAIH,SAAS,CAAC,CAAC;MAC9B,MAAMI,QAAQ,GAAGD,MAAM,CAACE,eAAe,CAACvB,gBAAgB,CAACW,GAAG,CAAC,EAAE,UAAU,CAAC;MAC1ER,gBAAgB,CAACmB,QAAQ,CAAC;MAC1B,MAAME,WAAW,GAAGX,QAAQ,CAACY,SAAS,CAACH,QAAQ,CAACI,eAAe,CAAC;MAEhEtB,SAAS,CAACQ,SAAS,GAAG,EAAE;MACxBR,SAAS,CAACuB,WAAW,CAACH,WAAW,CAAC;IACtC,CAAC;EACL;AACJ;AAEA,eAAed,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}