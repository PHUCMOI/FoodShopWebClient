{"ast":null,"code":"import { Class } from '../../../common';\nimport { extend } from '../../utils';\nimport { toBitsString } from '../../utils';\nexport class QRDataMode extends Class {\n  constructor() {\n    super();\n    this.initProperties();\n  }\n  initProperties() {\n    extend(this, {\n      modeIndicator: \"\",\n      bitsInCharacterCount: []\n    });\n  }\n  getVersionIndex(version) {\n    if (version < 10) {\n      return 0;\n    } else if (version > 26) {\n      return 2;\n    }\n    return 1;\n  }\n  getBitsCharacterCount(version) {\n    return this.bitsInCharacterCount[this.getVersionIndex(version || 40)];\n  }\n  getModeCountString(length, version) {\n    return this.modeIndicator + toBitsString(length, this.getBitsCharacterCount(version));\n  }\n  encode() {}\n  getStringBitsLength() {}\n  getValue() {}\n}","map":{"version":3,"names":["Class","extend","toBitsString","QRDataMode","constructor","initProperties","modeIndicator","bitsInCharacterCount","getVersionIndex","version","getBitsCharacterCount","getModeCountString","length","encode","getStringBitsLength","getValue"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/qrcode/encodings/data-modes/qr-data-mode.js"],"sourcesContent":["import { Class } from '../../../common';\nimport { extend } from '../../utils';\nimport {\n    toBitsString\n} from '../../utils';\n\nexport class QRDataMode extends Class {\n    constructor() {\n        super();\n\n        this.initProperties();\n    }\n\n    initProperties() {\n        extend(this, {\n            modeIndicator: \"\",\n            bitsInCharacterCount: []\n        });\n    }\n\n    getVersionIndex(version) {\n        if (version < 10) {\n            return 0;\n        } else if (version > 26) {\n            return 2;\n        }\n\n        return 1;\n    }\n\n    getBitsCharacterCount(version) {\n        return this.bitsInCharacterCount[this.getVersionIndex(version || 40)];\n    }\n\n    getModeCountString(length, version) {\n        return this.modeIndicator + toBitsString(length, this.getBitsCharacterCount(version));\n    }\n\n    encode() { }\n\n    getStringBitsLength() { }\n\n    getValue() { }\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,SAASC,MAAM,QAAQ,aAAa;AACpC,SACIC,YAAY,QACT,aAAa;AAEpB,OAAO,MAAMC,UAAU,SAASH,KAAK,CAAC;EAClCI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,cAAc,CAAC,CAAC;EACzB;EAEAA,cAAcA,CAAA,EAAG;IACbJ,MAAM,CAAC,IAAI,EAAE;MACTK,aAAa,EAAE,EAAE;MACjBC,oBAAoB,EAAE;IAC1B,CAAC,CAAC;EACN;EAEAC,eAAeA,CAACC,OAAO,EAAE;IACrB,IAAIA,OAAO,GAAG,EAAE,EAAE;MACd,OAAO,CAAC;IACZ,CAAC,MAAM,IAAIA,OAAO,GAAG,EAAE,EAAE;MACrB,OAAO,CAAC;IACZ;IAEA,OAAO,CAAC;EACZ;EAEAC,qBAAqBA,CAACD,OAAO,EAAE;IAC3B,OAAO,IAAI,CAACF,oBAAoB,CAAC,IAAI,CAACC,eAAe,CAACC,OAAO,IAAI,EAAE,CAAC,CAAC;EACzE;EAEAE,kBAAkBA,CAACC,MAAM,EAAEH,OAAO,EAAE;IAChC,OAAO,IAAI,CAACH,aAAa,GAAGJ,YAAY,CAACU,MAAM,EAAE,IAAI,CAACF,qBAAqB,CAACD,OAAO,CAAC,CAAC;EACzF;EAEAI,MAAMA,CAAA,EAAG,CAAE;EAEXC,mBAAmBA,CAAA,EAAG,CAAE;EAExBC,QAAQA,CAAA,EAAG,CAAE;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}