{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2023 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Component, Input, ContentChildren, QueryList, Directive, Optional, forwardRef, SkipSelf, Host, ContentChild, NgModule } from '@angular/core';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { IntlService, ExcelExporter, Workbook } from '@progress/kendo-ooxml';\nexport * from '@progress/kendo-ooxml';\nimport { toString } from '@progress/kendo-intl';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\nconst compileTemplate = (templateRef, context, updateContext) => {\n  let embeddedView = templateRef.createEmbeddedView(context);\n  const result = data => {\n    updateContext(context, data);\n    embeddedView.detectChanges();\n    return embeddedView.rootNodes.reduce((content, rootNode) => {\n      return content + rootNode.textContent;\n    }, '').trim();\n  };\n  result.destroy = () => {\n    embeddedView.destroy();\n    embeddedView = null;\n  };\n  return result;\n};\nconst updateGroupHeaderContext = (context, data) => {\n  context.$implicit = context.group = data;\n  context.field = data.field;\n  context.value = data.value;\n  context.aggregates = data.aggregates;\n};\nconst updateGroupFooterContext = (context, data) => {\n  context.group = data.group;\n  context.$implicit = context.aggregates = data;\n};\nconst updateFooterContext = (context, data) => {\n  context.aggregates = data.aggregates;\n};\n/**\n * @hidden\n */\nconst toExporterColumns = sourceColumns => {\n  const exporterColumns = [];\n  let columnIndex = 0;\n  const addColumns = (columns, result, level) => {\n    columns.forEach(column => {\n      if (column.level === level) {\n        const exporterColumn = new ExporterColumn(column, columnIndex);\n        result.push(exporterColumn);\n        if (column.children && column.children.some(c => c !== column)) {\n          const children = exporterColumn.columns = [];\n          addColumns(column.children, children, level + 1);\n        } else {\n          columnIndex++;\n        }\n      }\n    });\n  };\n  addColumns(sourceColumns, exporterColumns, 0);\n  return exporterColumns;\n};\n/**\n * @hidden\n */\nconst destroyColumns = columns => {\n  if (columns) {\n    columns.forEach(column => {\n      column.destroy();\n    });\n  }\n};\n/**\n * @hidden\n */\nclass ExporterColumn {\n  constructor(column, columnIndex) {\n    this.title = column.title;\n    this.field = column.field;\n    this.hidden = column.hidden;\n    this.locked = column.locked;\n    this.width = column.width;\n    this.headerCellOptions = column.headerCellOptions;\n    this.cellOptions = column.cellOptions;\n    this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n    this.groupFooterCellOptions = column.groupFooterCellOptions;\n    this.footerCellOptions = column.footerCellOptions;\n    if (column.footerTemplate) {\n      this.footerTemplate = compileTemplate(column.footerTemplate.templateRef, {\n        $implicit: column,\n        column: column,\n        columnIndex: columnIndex\n      }, updateFooterContext);\n    }\n    if (column.groupFooterTemplate) {\n      this.groupFooterTemplate = compileTemplate(column.groupFooterTemplate.templateRef, {\n        column: column,\n        field: column.field\n      }, updateGroupFooterContext);\n    }\n    if (column.groupHeaderTemplate) {\n      this.groupHeaderTemplate = compileTemplate(column.groupHeaderTemplate.templateRef, {}, updateGroupHeaderContext);\n    }\n    if (column.groupHeaderColumnTemplate) {\n      this.groupHeaderColumnTemplate = compileTemplate(column.groupHeaderColumnTemplate.templateRef, {}, updateGroupHeaderContext);\n    }\n  }\n  destroy() {\n    if (this.footerTemplate) {\n      this.footerTemplate.destroy();\n    }\n    if (this.groupFooterTemplate) {\n      this.groupFooterTemplate.destroy();\n    }\n    if (this.groupHeaderTemplate) {\n      this.groupHeaderTemplate.destroy();\n    }\n    if (this.groupHeaderColumnTemplate) {\n      this.groupHeaderColumnTemplate.destroy();\n    }\n    destroyColumns(this.columns);\n  }\n}\nIntlService.register({\n  toString\n});\n/**\n *\n * @hidden\n */\nconst workbookOptions = options => {\n  const columns = toExporterColumns(options.columns);\n  const exporter = new ExcelExporter({\n    columns: columns,\n    data: options.data,\n    filterable: options.filterable,\n    groups: options.group,\n    paddingCellOptions: options.paddingCellOptions,\n    headerPaddingCellOptions: options.headerPaddingCellOptions,\n    collapsible: options.collapsible,\n    hierarchy: options.hierarchy,\n    aggregates: options.aggregates\n  });\n  const result = exporter.workbook();\n  result.creator = options.creator;\n  result.date = options.date;\n  result.rtl = options.rtl;\n  destroyColumns(columns);\n  return result;\n};\n/**\n * @hidden\n */\nconst toDataURL = options => {\n  const workbook = new Workbook(options);\n  return workbook.toDataURL();\n};\n/**\n * @hidden\n */\nconst isWorkbookOptions = value => {\n  return value && value.sheets;\n};\n\n/**\n * @hidden\n */\nclass ColumnBase {\n  constructor(parent) {\n    this.parent = parent;\n  }\n  /**\n   * @hidden\n   */\n  get level() {\n    return this.parent ? this.parent.level + 1 : 0;\n  }\n}\nColumnBase.ɵfac = function ColumnBase_Factory(t) {\n  return new (t || ColumnBase)(i0.ɵɵdirectiveInject(ColumnBase));\n};\nColumnBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnBase,\n  selectors: [[\"ng-component\"]],\n  contentQueries: function ColumnBase_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    width: \"width\",\n    locked: \"locked\",\n    hidden: \"hidden\",\n    headerCellOptions: \"headerCellOptions\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ColumnBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnBase, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    locked: [{\n      type: Input\n    }],\n    hidden: [{\n      type: Input\n    }],\n    headerCellOptions: [{\n      type: Input\n    }],\n    children: [{\n      type: ContentChildren,\n      args: [ColumnBase]\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n  name: '@progress/kendo-angular-excel-export',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1697530139,\n  version: '14.0.1',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n// eslint-disable max-line-length\n/**\n * Represents the [Kendo UI Excel Export component for Angular]({% slug overview_excelexport %}).\n * Configures the settings for the Excel export of the Kendo UI Grid.\n */\nclass ExcelExportComponent {\n  constructor(localization, zone) {\n    this.localization = localization;\n    this.zone = zone;\n    /**\n     * Specifies the name of the file that is exported to Excel.\n     * @default \"Export.xlsx\"\n     */\n    this.fileName = 'Export.xlsx';\n    /**\n     * @hidden\n     */\n    this.columns = new QueryList();\n    validatePackage(packageMetadata);\n    this.saveFile = this.saveFile.bind(this);\n  }\n  /**\n   * Saves the data to Excel.\n   *\n   * @param exportData - An optional parameter. Can be the data that will be exported or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}).\n   */\n  save(exportData) {\n    this.toDataURL(exportData).then(this.saveFile);\n  }\n  /**\n   * Based on the specified columns and data, returns\n   * [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %})\n   * ([see example]({% slug customrowsandcells_excelexport %})).\n   *\n   * @param exportData - The optional data to be exported.\n   * @returns {WorkbookOptions} - The workbook options.\n   */\n  workbookOptions(exportData) {\n    const currentData = this.getExportData(exportData);\n    const options = workbookOptions({\n      columns: this.columns,\n      data: currentData.data,\n      group: currentData.group,\n      filterable: this.filterable,\n      creator: this.creator,\n      date: this.date,\n      rtl: this.localization.rtl,\n      paddingCellOptions: this.paddingCellOptions,\n      headerPaddingCellOptions: this.headerPaddingCellOptions,\n      collapsible: this.collapsible\n    });\n    return options;\n  }\n  /**\n   * Returns a promise which will be resolved with the file data URI\n   * ([see example]({% slug filesaving_excelexport %})).\n   *\n   * @param exportData - The optional data or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}) that will be used to generate the data URI.\n   * @returns {Promise<string>} - The promise that will be resolved by the file data URI.\n   */\n  toDataURL(exportData) {\n    const options = isWorkbookOptions(exportData) ? exportData : this.workbookOptions(exportData);\n    return this.zone.runOutsideAngular(() => toDataURL(options));\n  }\n  getExportData(exportData) {\n    let result;\n    if (exportData) {\n      if (Array.isArray(exportData)) {\n        result = {\n          data: exportData\n        };\n      } else {\n        result = exportData;\n      }\n    } else {\n      result = {\n        data: this.data,\n        group: this.group\n      };\n    }\n    return result;\n  }\n  saveFile(dataURL) {\n    saveAs(dataURL, this.fileName, {\n      forceProxy: this.forceProxy,\n      proxyURL: this.proxyURL\n    });\n  }\n}\nExcelExportComponent.ɵfac = function ExcelExportComponent_Factory(t) {\n  return new (t || ExcelExportComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nExcelExportComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ExcelExportComponent,\n  selectors: [[\"kendo-excelexport\"]],\n  contentQueries: function ExcelExportComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ColumnBase, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n    }\n  },\n  inputs: {\n    fileName: \"fileName\",\n    filterable: \"filterable\",\n    collapsible: \"collapsible\",\n    creator: \"creator\",\n    date: \"date\",\n    forceProxy: \"forceProxy\",\n    proxyURL: \"proxyURL\",\n    data: \"data\",\n    group: \"group\",\n    paddingCellOptions: \"paddingCellOptions\",\n    headerPaddingCellOptions: \"headerPaddingCellOptions\"\n  },\n  exportAs: [\"kendoExcelExport\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.excelexport'\n  }])],\n  decls: 0,\n  vars: 0,\n  template: function ExcelExportComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelExportComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoExcelExport',\n      selector: 'kendo-excelexport',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.excelexport'\n      }],\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    fileName: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    collapsible: [{\n      type: Input\n    }],\n    creator: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    forceProxy: [{\n      type: Input\n    }],\n    proxyURL: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    paddingCellOptions: [{\n      type: Input\n    }],\n    headerPaddingCellOptions: [{\n      type: Input\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Represents the group header cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-template)).\n * Enables you to customize the content of the group header item.\n */\nclass GroupHeaderTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nGroupHeaderTemplateDirective.ɵfac = function GroupHeaderTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\nGroupHeaderTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupHeaderTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportGroupHeaderTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupHeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportGroupHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Represents the group header column template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-column-template)).\n */\nclass GroupHeaderColumnTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nGroupHeaderColumnTemplateDirective.ɵfac = function GroupHeaderColumnTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderColumnTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\nGroupHeaderColumnTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupHeaderColumnTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportGroupHeaderColumnTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupHeaderColumnTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportGroupHeaderColumnTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Represents the group footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-footer-template)).\n * Enables you to customize the group footer cell of the column.\n */\nclass GroupFooterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nGroupFooterTemplateDirective.ɵfac = function GroupFooterTemplateDirective_Factory(t) {\n  return new (t || GroupFooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\nGroupFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GroupFooterTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportGroupFooterTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GroupFooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportGroupFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Represents the footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-footer-template)).\n * Enables you to customize the footer cell of the column.\n */\nclass FooterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nFooterTemplateDirective.ɵfac = function FooterTemplateDirective_Factory(t) {\n  return new (t || FooterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 8));\n};\nFooterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FooterTemplateDirective,\n  selectors: [[\"\", \"kendoExcelExportFooterTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoExcelExportFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Represents the columns of the Kendo UI Excel Export component for Angular.\n */\nclass ColumnComponent extends ColumnBase {\n  constructor(parent) {\n    super(parent);\n  }\n}\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) {\n  return new (t || ColumnComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13));\n};\nColumnComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnComponent,\n  selectors: [[\"kendo-excelexport-column\"]],\n  contentQueries: function ColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, GroupHeaderTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupHeaderColumnTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, GroupFooterTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeaderTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupHeaderColumnTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.groupFooterTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n    }\n  },\n  inputs: {\n    field: \"field\",\n    cellOptions: \"cellOptions\",\n    groupHeaderCellOptions: \"groupHeaderCellOptions\",\n    groupFooterCellOptions: \"groupFooterCellOptions\",\n    footerCellOptions: \"footerCellOptions\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => ColumnComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => ColumnComponent)\n      }],\n      selector: 'kendo-excelexport-column',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    field: [{\n      type: Input\n    }],\n    cellOptions: [{\n      type: Input\n    }],\n    groupHeaderCellOptions: [{\n      type: Input\n    }],\n    groupFooterCellOptions: [{\n      type: Input\n    }],\n    footerCellOptions: [{\n      type: Input\n    }],\n    groupHeaderTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupHeaderColumnTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderColumnTemplateDirective, {\n        static: false\n      }]\n    }],\n    groupFooterTemplate: [{\n      type: ContentChild,\n      args: [GroupFooterTemplateDirective, {\n        static: false\n      }]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Represents the column group component of the Kendo UI Excel Export component.\n */\nclass ColumnGroupComponent extends ColumnBase {\n  constructor(parent) {\n    super(parent);\n    this.parent = parent;\n  }\n}\nColumnGroupComponent.ɵfac = function ColumnGroupComponent_Factory(t) {\n  return new (t || ColumnGroupComponent)(i0.ɵɵdirectiveInject(ColumnBase, 13));\n};\nColumnGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnGroupComponent,\n  selectors: [[\"kendo-excelexport-column-group\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ColumnBase,\n    useExisting: forwardRef(() => ColumnGroupComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnGroupComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnGroupComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase,\n        useExisting: forwardRef(() => ColumnGroupComponent)\n      }],\n      selector: 'kendo-excelexport-column-group',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nconst declarations = [ExcelExportComponent, ColumnComponent, ColumnGroupComponent, FooterTemplateDirective, GroupFooterTemplateDirective, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Excel Export component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the ExcelExportModule module\n * import { ExcelExportModule } from '@progress/kendo-angular-excel-export';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ExcelExportModule], // import ExcelExportModule module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ExcelExportModule {}\nExcelExportModule.ɵfac = function ExcelExportModule_Factory(t) {\n  return new (t || ExcelExportModule)();\n};\nExcelExportModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ExcelExportModule\n});\nExcelExportModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExcelExportModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations],\n      exports: [declarations]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ColumnBase, ColumnComponent, ColumnGroupComponent, ExcelExportComponent, ExcelExportModule, FooterTemplateDirective, GroupFooterTemplateDirective, GroupHeaderColumnTemplateDirective, GroupHeaderTemplateDirective, isWorkbookOptions, toDataURL, workbookOptions };","map":{"version":3,"names":["i0","Component","Input","ContentChildren","QueryList","Directive","Optional","forwardRef","SkipSelf","Host","ContentChild","NgModule","saveAs","IntlService","ExcelExporter","Workbook","toString","i1","LocalizationService","L10N_PREFIX","validatePackage","compileTemplate","templateRef","context","updateContext","embeddedView","createEmbeddedView","result","data","detectChanges","rootNodes","reduce","content","rootNode","textContent","trim","destroy","updateGroupHeaderContext","$implicit","group","field","value","aggregates","updateGroupFooterContext","updateFooterContext","toExporterColumns","sourceColumns","exporterColumns","columnIndex","addColumns","columns","level","forEach","column","exporterColumn","ExporterColumn","push","children","some","c","destroyColumns","constructor","title","hidden","locked","width","headerCellOptions","cellOptions","groupHeaderCellOptions","groupFooterCellOptions","footerCellOptions","footerTemplate","groupFooterTemplate","groupHeaderTemplate","groupHeaderColumnTemplate","register","workbookOptions","options","exporter","filterable","groups","paddingCellOptions","headerPaddingCellOptions","collapsible","hierarchy","workbook","creator","date","rtl","toDataURL","isWorkbookOptions","sheets","ColumnBase","parent","ɵfac","ColumnBase_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","ColumnBase_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","inputs","decls","vars","template","ColumnBase_Template","encapsulation","ngDevMode","ɵsetClassMetadata","args","packageMetadata","name","productName","productCodes","publishDate","version","licensingDocsUrl","ExcelExportComponent","localization","zone","fileName","saveFile","bind","save","exportData","then","currentData","getExportData","runOutsideAngular","Array","isArray","dataURL","forceProxy","proxyURL","ExcelExportComponent_Factory","NgZone","ExcelExportComponent_ContentQueries","exportAs","features","ɵɵProvidersFeature","provide","useValue","ExcelExportComponent_Template","selector","providers","descendants","GroupHeaderTemplateDirective","GroupHeaderTemplateDirective_Factory","TemplateRef","ɵdir","ɵɵdefineDirective","decorators","GroupHeaderColumnTemplateDirective","GroupHeaderColumnTemplateDirective_Factory","GroupFooterTemplateDirective","GroupFooterTemplateDirective_Factory","FooterTemplateDirective","FooterTemplateDirective_Factory","ColumnComponent","ColumnComponent_Factory","ColumnComponent_ContentQueries","first","useExisting","ɵɵInheritDefinitionFeature","ColumnComponent_Template","static","ColumnGroupComponent","ColumnGroupComponent_Factory","ColumnGroupComponent_Template","declarations","ExcelExportModule","ExcelExportModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-angular-excel-export/fesm2020/progress-kendo-angular-excel-export.mjs"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2023 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Component, Input, ContentChildren, QueryList, Directive, Optional, forwardRef, SkipSelf, Host, ContentChild, NgModule } from '@angular/core';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { IntlService, ExcelExporter, Workbook } from '@progress/kendo-ooxml';\nexport * from '@progress/kendo-ooxml';\nimport { toString } from '@progress/kendo-intl';\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport { validatePackage } from '@progress/kendo-licensing';\n\nconst compileTemplate = (templateRef, context, updateContext) => {\n    let embeddedView = templateRef.createEmbeddedView(context);\n    const result = (data) => {\n        updateContext(context, data);\n        embeddedView.detectChanges();\n        return embeddedView.rootNodes.reduce((content, rootNode) => {\n            return content + rootNode.textContent;\n        }, '').trim();\n    };\n    result.destroy = () => {\n        embeddedView.destroy();\n        embeddedView = null;\n    };\n    return result;\n};\nconst updateGroupHeaderContext = (context, data) => {\n    context.$implicit = context.group = data;\n    context.field = data.field;\n    context.value = data.value;\n    context.aggregates = data.aggregates;\n};\nconst updateGroupFooterContext = (context, data) => {\n    context.group = data.group;\n    context.$implicit = context.aggregates = data;\n};\nconst updateFooterContext = (context, data) => {\n    context.aggregates = data.aggregates;\n};\n/**\n * @hidden\n */\nconst toExporterColumns = (sourceColumns) => {\n    const exporterColumns = [];\n    let columnIndex = 0;\n    const addColumns = (columns, result, level) => {\n        columns.forEach((column) => {\n            if (column.level === level) {\n                const exporterColumn = new ExporterColumn(column, columnIndex);\n                result.push(exporterColumn);\n                if (column.children && column.children.some(c => c !== column)) {\n                    const children = exporterColumn.columns = [];\n                    addColumns(column.children, children, level + 1);\n                }\n                else {\n                    columnIndex++;\n                }\n            }\n        });\n    };\n    addColumns(sourceColumns, exporterColumns, 0);\n    return exporterColumns;\n};\n/**\n * @hidden\n */\nconst destroyColumns = (columns) => {\n    if (columns) {\n        columns.forEach(column => {\n            column.destroy();\n        });\n    }\n};\n/**\n * @hidden\n */\nclass ExporterColumn {\n    constructor(column, columnIndex) {\n        this.title = column.title;\n        this.field = column.field;\n        this.hidden = column.hidden;\n        this.locked = column.locked;\n        this.width = column.width;\n        this.headerCellOptions = column.headerCellOptions;\n        this.cellOptions = column.cellOptions;\n        this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n        this.groupFooterCellOptions = column.groupFooterCellOptions;\n        this.footerCellOptions = column.footerCellOptions;\n        if (column.footerTemplate) {\n            this.footerTemplate = compileTemplate(column.footerTemplate.templateRef, {\n                $implicit: column,\n                column: column,\n                columnIndex: columnIndex\n            }, updateFooterContext);\n        }\n        if (column.groupFooterTemplate) {\n            this.groupFooterTemplate = compileTemplate(column.groupFooterTemplate.templateRef, {\n                column: column,\n                field: column.field\n            }, updateGroupFooterContext);\n        }\n        if (column.groupHeaderTemplate) {\n            this.groupHeaderTemplate = compileTemplate(column.groupHeaderTemplate.templateRef, {}, updateGroupHeaderContext);\n        }\n        if (column.groupHeaderColumnTemplate) {\n            this.groupHeaderColumnTemplate = compileTemplate(column.groupHeaderColumnTemplate.templateRef, {}, updateGroupHeaderContext);\n        }\n    }\n    destroy() {\n        if (this.footerTemplate) {\n            this.footerTemplate.destroy();\n        }\n        if (this.groupFooterTemplate) {\n            this.groupFooterTemplate.destroy();\n        }\n        if (this.groupHeaderTemplate) {\n            this.groupHeaderTemplate.destroy();\n        }\n        if (this.groupHeaderColumnTemplate) {\n            this.groupHeaderColumnTemplate.destroy();\n        }\n        destroyColumns(this.columns);\n    }\n}\n\nIntlService.register({ toString });\n/**\n *\n * @hidden\n */\nconst workbookOptions = (options) => {\n    const columns = toExporterColumns(options.columns);\n    const exporter = new ExcelExporter({\n        columns: columns,\n        data: options.data,\n        filterable: options.filterable,\n        groups: options.group,\n        paddingCellOptions: options.paddingCellOptions,\n        headerPaddingCellOptions: options.headerPaddingCellOptions,\n        collapsible: options.collapsible,\n        hierarchy: options.hierarchy,\n        aggregates: options.aggregates\n    });\n    const result = exporter.workbook();\n    result.creator = options.creator;\n    result.date = options.date;\n    result.rtl = options.rtl;\n    destroyColumns(columns);\n    return result;\n};\n/**\n * @hidden\n */\nconst toDataURL = (options) => {\n    const workbook = new Workbook(options);\n    return workbook.toDataURL();\n};\n/**\n * @hidden\n */\nconst isWorkbookOptions = (value) => {\n    return value && value.sheets;\n};\n\n/**\n * @hidden\n */\nclass ColumnBase {\n    constructor(parent) {\n        this.parent = parent;\n    }\n    /**\n     * @hidden\n     */\n    get level() {\n        return this.parent ? this.parent.level + 1 : 0;\n    }\n}\nColumnBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnBase, deps: [{ token: ColumnBase }], target: i0.ɵɵFactoryTarget.Component });\nColumnBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ColumnBase, selector: \"ng-component\", inputs: { title: \"title\", width: \"width\", locked: \"locked\", hidden: \"hidden\", headerCellOptions: \"headerCellOptions\" }, queries: [{ propertyName: \"children\", predicate: ColumnBase }], ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnBase, decorators: [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase }]; }, propDecorators: { title: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], locked: [{\n                type: Input\n            }], hidden: [{\n                type: Input\n            }], headerCellOptions: [{\n                type: Input\n            }], children: [{\n                type: ContentChildren,\n                args: [ColumnBase]\n            }] } });\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-excel-export',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1697530139,\n    version: '14.0.1',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n// eslint-disable max-line-length\n/**\n * Represents the [Kendo UI Excel Export component for Angular]({% slug overview_excelexport %}).\n * Configures the settings for the Excel export of the Kendo UI Grid.\n */\nclass ExcelExportComponent {\n    constructor(localization, zone) {\n        this.localization = localization;\n        this.zone = zone;\n        /**\n         * Specifies the name of the file that is exported to Excel.\n         * @default \"Export.xlsx\"\n         */\n        this.fileName = 'Export.xlsx';\n        /**\n         * @hidden\n         */\n        this.columns = new QueryList();\n        validatePackage(packageMetadata);\n        this.saveFile = this.saveFile.bind(this);\n    }\n    /**\n     * Saves the data to Excel.\n     *\n     * @param exportData - An optional parameter. Can be the data that will be exported or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}).\n     */\n    save(exportData) {\n        this.toDataURL(exportData).then(this.saveFile);\n    }\n    /**\n     * Based on the specified columns and data, returns\n     * [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %})\n     * ([see example]({% slug customrowsandcells_excelexport %})).\n     *\n     * @param exportData - The optional data to be exported.\n     * @returns {WorkbookOptions} - The workbook options.\n     */\n    workbookOptions(exportData) {\n        const currentData = this.getExportData(exportData);\n        const options = workbookOptions({\n            columns: this.columns,\n            data: currentData.data,\n            group: currentData.group,\n            filterable: this.filterable,\n            creator: this.creator,\n            date: this.date,\n            rtl: this.localization.rtl,\n            paddingCellOptions: this.paddingCellOptions,\n            headerPaddingCellOptions: this.headerPaddingCellOptions,\n            collapsible: this.collapsible\n        });\n        return options;\n    }\n    /**\n     * Returns a promise which will be resolved with the file data URI\n     * ([see example]({% slug filesaving_excelexport %})).\n     *\n     * @param exportData - The optional data or [`WorkbookOptions`]({% slug api_excel-export_workbookoptions %}) that will be used to generate the data URI.\n     * @returns {Promise<string>} - The promise that will be resolved by the file data URI.\n     */\n    toDataURL(exportData) {\n        const options = isWorkbookOptions(exportData) ?\n            exportData :\n            this.workbookOptions(exportData);\n        return this.zone.runOutsideAngular(() => toDataURL(options));\n    }\n    getExportData(exportData) {\n        let result;\n        if (exportData) {\n            if (Array.isArray(exportData)) {\n                result = {\n                    data: exportData\n                };\n            }\n            else {\n                result = exportData;\n            }\n        }\n        else {\n            result = {\n                data: this.data,\n                group: this.group\n            };\n        }\n        return result;\n    }\n    saveFile(dataURL) {\n        saveAs(dataURL, this.fileName, {\n            forceProxy: this.forceProxy,\n            proxyURL: this.proxyURL\n        });\n    }\n}\nExcelExportComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ExcelExportComponent, deps: [{ token: i1.LocalizationService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nExcelExportComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ExcelExportComponent, selector: \"kendo-excelexport\", inputs: { fileName: \"fileName\", filterable: \"filterable\", collapsible: \"collapsible\", creator: \"creator\", date: \"date\", forceProxy: \"forceProxy\", proxyURL: \"proxyURL\", data: \"data\", group: \"group\", paddingCellOptions: \"paddingCellOptions\", headerPaddingCellOptions: \"headerPaddingCellOptions\" }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.excelexport'\n        }\n    ], queries: [{ propertyName: \"columns\", predicate: ColumnBase, descendants: true }], exportAs: [\"kendoExcelExport\"], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ExcelExportComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoExcelExport',\n                    selector: 'kendo-excelexport',\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.excelexport'\n                        }\n                    ],\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.NgZone }]; }, propDecorators: { fileName: [{\n                type: Input\n            }], filterable: [{\n                type: Input\n            }], collapsible: [{\n                type: Input\n            }], creator: [{\n                type: Input\n            }], date: [{\n                type: Input\n            }], forceProxy: [{\n                type: Input\n            }], proxyURL: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], paddingCellOptions: [{\n                type: Input\n            }], headerPaddingCellOptions: [{\n                type: Input\n            }], columns: [{\n                type: ContentChildren,\n                args: [ColumnBase, { descendants: true }]\n            }] } });\n\n/**\n * Represents the group header cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-template)).\n * Enables you to customize the content of the group header item.\n */\nclass GroupHeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: GroupHeaderTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupHeaderTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: GroupHeaderTemplateDirective, selector: \"[kendoExcelExportGroupHeaderTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: GroupHeaderTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportGroupHeaderTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the group header column template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-header-column-template)).\n */\nclass GroupHeaderColumnTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderColumnTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: GroupHeaderColumnTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupHeaderColumnTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: GroupHeaderColumnTemplateDirective, selector: \"[kendoExcelExportGroupHeaderColumnTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: GroupHeaderColumnTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportGroupHeaderColumnTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the group footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-group-footer-template)).\n * Enables you to customize the group footer cell of the column.\n */\nclass GroupFooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: GroupFooterTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nGroupFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: GroupFooterTemplateDirective, selector: \"[kendoExcelExportGroupFooterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: GroupFooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportGroupFooterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the footer cell template of the Excel Export column component\n * ([see example]({% slug columns_excel-export %}#toc-footer-template)).\n * Enables you to customize the footer cell of the column.\n */\nclass FooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFooterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FooterTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFooterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FooterTemplateDirective, selector: \"[kendoExcelExportFooterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FooterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoExcelExportFooterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Represents the columns of the Kendo UI Excel Export component for Angular.\n */\nclass ColumnComponent extends ColumnBase {\n    constructor(parent) {\n        super(parent);\n    }\n}\nColumnComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nColumnComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ColumnComponent, selector: \"kendo-excelexport-column\", inputs: { field: \"field\", cellOptions: \"cellOptions\", groupHeaderCellOptions: \"groupHeaderCellOptions\", groupFooterCellOptions: \"groupFooterCellOptions\", footerCellOptions: \"footerCellOptions\" }, providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => ColumnComponent)\n        }\n    ], queries: [{ propertyName: \"groupHeaderTemplate\", first: true, predicate: GroupHeaderTemplateDirective, descendants: true }, { propertyName: \"groupHeaderColumnTemplate\", first: true, predicate: GroupHeaderColumnTemplateDirective, descendants: true }, { propertyName: \"groupFooterTemplate\", first: true, predicate: GroupFooterTemplateDirective, descendants: true }, { propertyName: \"footerTemplate\", first: true, predicate: FooterTemplateDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => ColumnComponent)\n                        }\n                    ],\n                    selector: 'kendo-excelexport-column',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { field: [{\n                type: Input\n            }], cellOptions: [{\n                type: Input\n            }], groupHeaderCellOptions: [{\n                type: Input\n            }], groupFooterCellOptions: [{\n                type: Input\n            }], footerCellOptions: [{\n                type: Input\n            }], groupHeaderTemplate: [{\n                type: ContentChild,\n                args: [GroupHeaderTemplateDirective, { static: false }]\n            }], groupHeaderColumnTemplate: [{\n                type: ContentChild,\n                args: [GroupHeaderColumnTemplateDirective, { static: false }]\n            }], groupFooterTemplate: [{\n                type: ContentChild,\n                args: [GroupFooterTemplateDirective, { static: false }]\n            }], footerTemplate: [{\n                type: ContentChild,\n                args: [FooterTemplateDirective, { static: false }]\n            }] } });\n\n/**\n * Represents the column group component of the Kendo UI Excel Export component.\n */\nclass ColumnGroupComponent extends ColumnBase {\n    constructor(parent) {\n        super(parent);\n        this.parent = parent;\n    }\n}\nColumnGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnGroupComponent, deps: [{ token: ColumnBase, host: true, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nColumnGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: ColumnGroupComponent, selector: \"kendo-excelexport-column-group\", providers: [\n        {\n            provide: ColumnBase,\n            useExisting: forwardRef(() => ColumnGroupComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ColumnGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ColumnBase,\n                            useExisting: forwardRef(() => ColumnGroupComponent)\n                        }\n                    ],\n                    selector: 'kendo-excelexport-column-group',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: ColumnBase, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Host\n                }, {\n                    type: Optional\n                }] }]; } });\n\nconst declarations = [\n    ExcelExportComponent,\n    ColumnComponent,\n    ColumnGroupComponent,\n    FooterTemplateDirective,\n    GroupFooterTemplateDirective,\n    GroupHeaderTemplateDirective,\n    GroupHeaderColumnTemplateDirective\n];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Excel Export component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the ExcelExportModule module\n * import { ExcelExportModule } from '@progress/kendo-angular-excel-export';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ExcelExportModule], // import ExcelExportModule module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ExcelExportModule {\n}\nExcelExportModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ExcelExportModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExcelExportModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ExcelExportModule, declarations: [ExcelExportComponent,\n        ColumnComponent,\n        ColumnGroupComponent,\n        FooterTemplateDirective,\n        GroupFooterTemplateDirective,\n        GroupHeaderTemplateDirective,\n        GroupHeaderColumnTemplateDirective], exports: [ExcelExportComponent,\n        ColumnComponent,\n        ColumnGroupComponent,\n        FooterTemplateDirective,\n        GroupFooterTemplateDirective,\n        GroupHeaderTemplateDirective,\n        GroupHeaderColumnTemplateDirective] });\nExcelExportModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ExcelExportModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: ExcelExportModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [declarations],\n                    exports: [declarations]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ColumnBase, ColumnComponent, ColumnGroupComponent, ExcelExportComponent, ExcelExportModule, FooterTemplateDirective, GroupFooterTemplateDirective, GroupHeaderColumnTemplateDirective, GroupHeaderTemplateDirective, isWorkbookOptions, toDataURL, workbookOptions };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}