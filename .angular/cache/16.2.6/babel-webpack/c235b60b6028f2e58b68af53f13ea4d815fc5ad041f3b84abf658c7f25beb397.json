{"ast":null,"code":"import BaseTooltip from './base-tooltip';\nimport { Point } from '../../core';\nimport { grep, setDefaultOptions } from '../../common';\nclass SharedTooltip extends BaseTooltip {\n  constructor(plotArea, options) {\n    super(plotArea.chartService, options);\n    this.plotArea = plotArea;\n    this.formatService = plotArea.chartService.format;\n  }\n  showAt(points, coords) {\n    const tooltipPoints = grep(points, function (point) {\n      const tooltip = point.series.tooltip;\n      const excluded = tooltip && tooltip.visible === false;\n      return !excluded;\n    });\n    if (tooltipPoints.length > 0) {\n      const point = tooltipPoints[0];\n      const slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n      const anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n      this.show({\n        anchor: anchor,\n        shared: true,\n        points: points,\n        category: point.category,\n        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n        series: this.plotArea.series\n      }, this.options);\n    }\n  }\n  _slotAnchor(point, slot) {\n    const axis = this.plotArea.categoryAxis;\n    const align = {\n      horizontal: \"left\",\n      vertical: \"center\"\n    };\n    if (!axis.options.vertical) {\n      point.x = slot.center().x;\n    }\n    return {\n      point: point,\n      align: align\n    };\n  }\n  _defaultAnchor(point, slot) {\n    const box = point.owner.pane.chartsBox();\n    const vertical = this.plotArea.categoryAxis.options.vertical;\n    const center = box.center();\n    const slotCenter = slot.center();\n    const align = {\n      horizontal: \"center\",\n      vertical: \"center\"\n    };\n    let centerPoint;\n    if (vertical) {\n      centerPoint = new Point(center.x, slotCenter.y);\n    } else {\n      centerPoint = new Point(slotCenter.x, center.y);\n    }\n    return {\n      point: centerPoint,\n      align: align\n    };\n  }\n}\nsetDefaultOptions(SharedTooltip, {\n  categoryFormat: '{0:d}'\n});\nexport default SharedTooltip;","map":{"version":3,"names":["BaseTooltip","Point","grep","setDefaultOptions","SharedTooltip","constructor","plotArea","options","chartService","formatService","format","showAt","points","coords","tooltipPoints","point","tooltip","series","excluded","visible","length","slot","categoryAxis","getSlot","categoryIx","anchor","_slotAnchor","_defaultAnchor","show","shared","category","categoryText","auto","categoryFormat","axis","align","horizontal","vertical","x","center","box","owner","pane","chartsBox","slotCenter","centerPoint","y"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/tooltip/shared-tooltip.js"],"sourcesContent":["import BaseTooltip from './base-tooltip';\nimport { Point } from '../../core';\n\nimport { grep, setDefaultOptions } from '../../common';\n\nclass SharedTooltip extends BaseTooltip {\n    constructor(plotArea, options) {\n        super(plotArea.chartService, options);\n\n        this.plotArea = plotArea;\n        this.formatService = plotArea.chartService.format;\n    }\n\n    showAt(points, coords) {\n        const tooltipPoints = grep(points, function(point) {\n            const tooltip = point.series.tooltip;\n            const excluded = tooltip && tooltip.visible === false;\n\n            return !excluded;\n        });\n\n        if (tooltipPoints.length > 0) {\n            const point = tooltipPoints[0];\n            const slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n\n            const anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n\n            this.show({\n                anchor: anchor,\n                shared: true,\n                points: points,\n                category: point.category,\n                categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                series: this.plotArea.series\n            }, this.options);\n        }\n    }\n\n    _slotAnchor(point, slot) {\n        const axis = this.plotArea.categoryAxis;\n        const align = {\n            horizontal: \"left\",\n            vertical: \"center\"\n        };\n\n        if (!axis.options.vertical) {\n            point.x = slot.center().x;\n        }\n\n        return {\n            point: point,\n            align: align\n        };\n    }\n\n    _defaultAnchor(point, slot) {\n        const box = point.owner.pane.chartsBox();\n        const vertical = this.plotArea.categoryAxis.options.vertical;\n        const center = box.center();\n        const slotCenter = slot.center();\n        const align = {\n            horizontal: \"center\",\n            vertical: \"center\"\n        };\n\n        let centerPoint;\n        if (vertical) {\n            centerPoint = new Point(center.x, slotCenter.y);\n        } else {\n            centerPoint = new Point(slotCenter.x, center.y);\n        }\n\n        return {\n            point: centerPoint,\n            align: align\n        };\n    }\n}\n\nsetDefaultOptions(SharedTooltip, {\n    categoryFormat: '{0:d}'\n});\n\nexport default SharedTooltip;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}