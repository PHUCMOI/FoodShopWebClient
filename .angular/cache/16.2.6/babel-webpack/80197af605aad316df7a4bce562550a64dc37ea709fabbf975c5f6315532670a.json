{"ast":null,"code":"import { Class, logToConsole } from './common';\nimport SVGSurface from './svg/surface';\nimport CanvasSurface from './canvas/surface';\nlet instance;\nlet support;\nconst hasDocument = () => typeof document !== \"undefined\";\nconst supportsCanvas = () => hasDocument() && document.createElement(\"canvas\").getContext;\nconst supportsSVG = () => hasDocument() && document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\nclass SurfaceFactory extends Class {\n  static get support() {\n    if (!support) {\n      support = {\n        canvas: supportsCanvas(),\n        svg: supportsSVG()\n      };\n    }\n    return support;\n  }\n  static get current() {\n    if (!instance) {\n      instance = new SurfaceFactory();\n    }\n    return instance;\n  }\n  constructor() {\n    super();\n    this._items = [{\n      name: \"svg\",\n      type: SVGSurface\n    }, {\n      name: \"canvas\",\n      type: CanvasSurface\n    }];\n  }\n  create(element, options) {\n    const items = this._items;\n    let match = items[0];\n    if (options && options.type) {\n      const preferred = options.type.toLowerCase();\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].name === preferred) {\n          match = items[i];\n          break;\n        }\n      }\n    }\n    if (match) {\n      return new match.type(element, options);\n    }\n    logToConsole(\"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" + `- The browser does not support SVG and Canvas. User agent: ${navigator.userAgent}`);\n  }\n}\nexport default SurfaceFactory;","map":{"version":3,"names":["Class","logToConsole","SVGSurface","CanvasSurface","instance","support","hasDocument","document","supportsCanvas","createElement","getContext","supportsSVG","implementation","hasFeature","SurfaceFactory","canvas","svg","current","constructor","_items","name","type","create","element","options","items","match","preferred","toLowerCase","i","length","navigator","userAgent"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/surface-factory.js"],"sourcesContent":["import { Class, logToConsole } from './common';\nimport SVGSurface from './svg/surface';\nimport CanvasSurface from './canvas/surface';\n\nlet instance;\nlet support;\n\nconst hasDocument = () => typeof document !== \"undefined\";\n\nconst supportsCanvas = () => hasDocument() &&\n    document.createElement(\"canvas\").getContext;\n\nconst supportsSVG = () => hasDocument() &&\n    document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n\nclass SurfaceFactory extends Class {\n    static get support() {\n        if (!support) {\n            support = {\n                canvas: supportsCanvas(),\n                svg: supportsSVG()\n            };\n        }\n\n        return support;\n    }\n\n    static get current() {\n        if (!instance) {\n            instance = new SurfaceFactory();\n        }\n\n        return instance;\n    }\n\n    constructor() {\n        super();\n\n        this._items = [ {\n            name: \"svg\",\n            type: SVGSurface\n        }, {\n            name: \"canvas\",\n            type: CanvasSurface\n        } ];\n    }\n\n    create(element, options) {\n        const items = this._items;\n        let match = items[0];\n\n        if (options && options.type) {\n            const preferred = options.type.toLowerCase();\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].name === preferred) {\n                    match = items[i];\n                    break;\n                }\n            }\n        }\n\n        if (match) {\n            return new match.type(element, options);\n        }\n\n        logToConsole(\n            \"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" +\n            `- The browser does not support SVG and Canvas. User agent: ${ navigator.userAgent }`);\n    }\n}\n\nexport default SurfaceFactory;\n\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,YAAY,QAAQ,UAAU;AAC9C,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,aAAa,MAAM,kBAAkB;AAE5C,IAAIC,QAAQ;AACZ,IAAIC,OAAO;AAEX,MAAMC,WAAW,GAAGA,CAAA,KAAM,OAAOC,QAAQ,KAAK,WAAW;AAEzD,MAAMC,cAAc,GAAGA,CAAA,KAAMF,WAAW,CAAC,CAAC,IACtCC,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC,CAACC,UAAU;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAML,WAAW,CAAC,CAAC,IACnCC,QAAQ,CAACK,cAAc,CAACC,UAAU,CAAC,mDAAmD,EAAE,KAAK,CAAC;AAElG,MAAMC,cAAc,SAASd,KAAK,CAAC;EAC/B,WAAWK,OAAOA,CAAA,EAAG;IACjB,IAAI,CAACA,OAAO,EAAE;MACVA,OAAO,GAAG;QACNU,MAAM,EAAEP,cAAc,CAAC,CAAC;QACxBQ,GAAG,EAAEL,WAAW,CAAC;MACrB,CAAC;IACL;IAEA,OAAON,OAAO;EAClB;EAEA,WAAWY,OAAOA,CAAA,EAAG;IACjB,IAAI,CAACb,QAAQ,EAAE;MACXA,QAAQ,GAAG,IAAIU,cAAc,CAAC,CAAC;IACnC;IAEA,OAAOV,QAAQ;EACnB;EAEAc,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,MAAM,GAAG,CAAE;MACZC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAEnB;IACV,CAAC,EAAE;MACCkB,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAElB;IACV,CAAC,CAAE;EACP;EAEAmB,MAAMA,CAACC,OAAO,EAAEC,OAAO,EAAE;IACrB,MAAMC,KAAK,GAAG,IAAI,CAACN,MAAM;IACzB,IAAIO,KAAK,GAAGD,KAAK,CAAC,CAAC,CAAC;IAEpB,IAAID,OAAO,IAAIA,OAAO,CAACH,IAAI,EAAE;MACzB,MAAMM,SAAS,GAAGH,OAAO,CAACH,IAAI,CAACO,WAAW,CAAC,CAAC;MAC5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QACnC,IAAIJ,KAAK,CAACI,CAAC,CAAC,CAACT,IAAI,KAAKO,SAAS,EAAE;UAC7BD,KAAK,GAAGD,KAAK,CAACI,CAAC,CAAC;UAChB;QACJ;MACJ;IACJ;IAEA,IAAIH,KAAK,EAAE;MACP,OAAO,IAAIA,KAAK,CAACL,IAAI,CAACE,OAAO,EAAEC,OAAO,CAAC;IAC3C;IAEAvB,YAAY,CACR,wEAAwE,GACvE,8DAA8D8B,SAAS,CAACC,SAAW,EAAC,CAAC;EAC9F;AACJ;AAEA,eAAelB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}