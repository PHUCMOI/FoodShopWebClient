{"ast":null,"code":"// search.service.ts\nimport { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class NavbarService {\n  constructor() {\n    this.searchQuerySubject = new BehaviorSubject('');\n    this.productData = new EventEmitter();\n    this.query = new EventEmitter();\n  }\n  static #_ = this.ɵfac = function NavbarService_Factory(t) {\n    return new (t || NavbarService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavbarService,\n    factory: NavbarService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","BehaviorSubject","NavbarService","constructor","searchQuerySubject","productData","query","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Internship\\FoodShopUI\\src\\app\\services\\navbar.service.ts"],"sourcesContent":["// search.service.ts\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Product } from '../models/Product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavbarService {\r\n  private searchQuerySubject = new BehaviorSubject<string>('');\r\n  public productData:  EventEmitter<Product[]> = new  EventEmitter();\r\n  public query :EventEmitter<any> = new EventEmitter();\r\n  public contentSearch !: string;\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAoB,eAAe;AACxD,SAASC,eAAe,QAAQ,MAAM;;AAMtC,OAAM,MAAOC,aAAa;EAH1BC,YAAA;IAIU,KAAAC,kBAAkB,GAAG,IAAIH,eAAe,CAAS,EAAE,CAAC;IACrD,KAAAI,WAAW,GAA6B,IAAKL,YAAY,EAAE;IAC3D,KAAAM,KAAK,GAAsB,IAAIN,YAAY,EAAE;;EAErD,QAAAO,CAAA,G;qBALYL,aAAa;EAAA;EAAA,QAAAM,EAAA,G;WAAbN,aAAa;IAAAO,OAAA,EAAbP,aAAa,CAAAQ,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}