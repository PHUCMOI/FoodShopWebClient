{"ast":null,"code":"const getRatio = (element, target) => {\n  const elementRect = element.getBoundingClientRect();\n  const targetRect = target.getBoundingClientRect();\n  const top = Math.max(targetRect.top, elementRect.top);\n  const left = Math.max(targetRect.left, elementRect.left);\n  const right = Math.min(targetRect.left + targetRect.width, elementRect.left + elementRect.width);\n  const bottom = Math.min(targetRect.top + targetRect.height, elementRect.top + elementRect.height);\n  const width = right - left;\n  const height = bottom - top;\n  if (left < right && top < bottom) {\n    const targetArea = targetRect.width * targetRect.height;\n    const entryArea = elementRect.width * elementRect.height;\n    const intersectionArea = width * height;\n    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);\n    return Number(intersectionRatio.toFixed(4));\n  }\n  return 0;\n};\n/** @hidden */\nexport const intersect = (element, candidates) => {\n  let max = 0;\n  let result = null;\n  candidates.forEach(candidate => {\n    if (candidate && element) {\n      const ration = getRatio(element, candidate);\n      if (ration > max) {\n        max = ration;\n        result = candidate;\n      }\n    }\n  });\n  return result;\n};","map":{"version":3,"names":["getRatio","element","target","elementRect","getBoundingClientRect","targetRect","top","Math","max","left","right","min","width","bottom","height","targetArea","entryArea","intersectionArea","intersectionRatio","Number","toFixed","intersect","candidates","result","forEach","candidate","ration"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-draggable-common/dist/es2015/algorithms/intersect.js"],"sourcesContent":["const getRatio = (element, target) => {\n    const elementRect = element.getBoundingClientRect();\n    const targetRect = target.getBoundingClientRect();\n    const top = Math.max(targetRect.top, elementRect.top);\n    const left = Math.max(targetRect.left, elementRect.left);\n    const right = Math.min(targetRect.left + targetRect.width, elementRect.left + elementRect.width);\n    const bottom = Math.min(targetRect.top + targetRect.height, elementRect.top + elementRect.height);\n    const width = right - left;\n    const height = bottom - top;\n    if (left < right && top < bottom) {\n        const targetArea = targetRect.width * targetRect.height;\n        const entryArea = elementRect.width * elementRect.height;\n        const intersectionArea = width * height;\n        const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);\n        return Number(intersectionRatio.toFixed(4));\n    }\n    return 0;\n};\n/** @hidden */\nexport const intersect = (element, candidates) => {\n    let max = 0;\n    let result = null;\n    candidates.forEach((candidate) => {\n        if (candidate && element) {\n            const ration = getRatio(element, candidate);\n            if (ration > max) {\n                max = ration;\n                result = candidate;\n            }\n        }\n    });\n    return result;\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAK;EAClC,MAAMC,WAAW,GAAGF,OAAO,CAACG,qBAAqB,CAAC,CAAC;EACnD,MAAMC,UAAU,GAAGH,MAAM,CAACE,qBAAqB,CAAC,CAAC;EACjD,MAAME,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACH,UAAU,CAACC,GAAG,EAAEH,WAAW,CAACG,GAAG,CAAC;EACrD,MAAMG,IAAI,GAAGF,IAAI,CAACC,GAAG,CAACH,UAAU,CAACI,IAAI,EAAEN,WAAW,CAACM,IAAI,CAAC;EACxD,MAAMC,KAAK,GAAGH,IAAI,CAACI,GAAG,CAACN,UAAU,CAACI,IAAI,GAAGJ,UAAU,CAACO,KAAK,EAAET,WAAW,CAACM,IAAI,GAAGN,WAAW,CAACS,KAAK,CAAC;EAChG,MAAMC,MAAM,GAAGN,IAAI,CAACI,GAAG,CAACN,UAAU,CAACC,GAAG,GAAGD,UAAU,CAACS,MAAM,EAAEX,WAAW,CAACG,GAAG,GAAGH,WAAW,CAACW,MAAM,CAAC;EACjG,MAAMF,KAAK,GAAGF,KAAK,GAAGD,IAAI;EAC1B,MAAMK,MAAM,GAAGD,MAAM,GAAGP,GAAG;EAC3B,IAAIG,IAAI,GAAGC,KAAK,IAAIJ,GAAG,GAAGO,MAAM,EAAE;IAC9B,MAAME,UAAU,GAAGV,UAAU,CAACO,KAAK,GAAGP,UAAU,CAACS,MAAM;IACvD,MAAME,SAAS,GAAGb,WAAW,CAACS,KAAK,GAAGT,WAAW,CAACW,MAAM;IACxD,MAAMG,gBAAgB,GAAGL,KAAK,GAAGE,MAAM;IACvC,MAAMI,iBAAiB,GAAGD,gBAAgB,IAAIF,UAAU,GAAGC,SAAS,GAAGC,gBAAgB,CAAC;IACxF,OAAOE,MAAM,CAACD,iBAAiB,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C;EACA,OAAO,CAAC;AACZ,CAAC;AACD;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACpB,OAAO,EAAEqB,UAAU,KAAK;EAC9C,IAAId,GAAG,GAAG,CAAC;EACX,IAAIe,MAAM,GAAG,IAAI;EACjBD,UAAU,CAACE,OAAO,CAAEC,SAAS,IAAK;IAC9B,IAAIA,SAAS,IAAIxB,OAAO,EAAE;MACtB,MAAMyB,MAAM,GAAG1B,QAAQ,CAACC,OAAO,EAAEwB,SAAS,CAAC;MAC3C,IAAIC,MAAM,GAAGlB,GAAG,EAAE;QACdA,GAAG,GAAGkB,MAAM;QACZH,MAAM,GAAGE,SAAS;MACtB;IACJ;EACJ,CAAC,CAAC;EACF,OAAOF,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}