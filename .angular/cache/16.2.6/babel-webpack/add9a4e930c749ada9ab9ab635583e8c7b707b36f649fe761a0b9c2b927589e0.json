{"ast":null,"code":"// todo: extract to a separate place\n\nimport { Class, deepExtend, addClass, isFunction, setDefaultOptions } from '../../common';\nimport { convertToHtml, prepend, wrapInner, contains, hasNativeScrolling, on, off, proxy, wheelDeltaY, setDefaultEvents } from '../utils';\nimport { Transition, Animation } from './fx';\nimport { Pane, PaneDimensions, Movable, TapCapture } from './draggable';\nimport { UserEvents } from './user-events';\nimport { Observable } from './observable';\nlet extend = Object.assign,\n  abs = Math.abs,\n  SNAPBACK_DURATION = 500,\n  SCROLLBAR_OPACITY = 0.7,\n  FRICTION = 0.96,\n  VELOCITY_MULTIPLIER = 10,\n  MAX_VELOCITY = 55,\n  OUT_OF_BOUNDS_FRICTION = 0.5,\n  ANIMATED_SCROLLER_PRECISION = 5,\n  // SCROLLER_RELEASE_CLASS = 'km-scroller-release',\n  // SCROLLER_REFRESH_CLASS = 'km-scroller-refresh',\n  PULL = 'pull',\n  CHANGE = 'change',\n  RESIZE = 'resize',\n  SCROLL = 'scroll',\n  MOUSE_WHEEL_ID = 2;\nclass ZoomSnapBack extends Animation {\n  constructor(options) {\n    super(options);\n    let that = this;\n    extend(that, options);\n    that.userEvents.bind('gestureend', that.start.bind(this));\n    that.tapCapture.bind('press', that.cancel.bind(this));\n  }\n  enabled() {\n    return this.movable.scale < this.dimensions.minScale;\n  }\n  done() {\n    return this.dimensions.minScale - this.movable.scale < 0.01;\n  }\n  tick() {\n    let movable = this.movable;\n    movable.scaleWith(1.1);\n    this.dimensions.rescale(movable.scale);\n  }\n  onEnd() {\n    let movable = this.movable;\n    movable.scaleTo(this.dimensions.minScale);\n    this.dimensions.rescale(movable.scale);\n  }\n}\nclass DragInertia extends Animation {\n  constructor(options) {\n    super();\n    let that = this;\n    extend(that, options, {\n      transition: new Transition({\n        axis: options.axis,\n        movable: options.movable,\n        onEnd() {\n          that._end();\n        }\n      })\n    });\n    that.tapCapture.bind('press', function () {\n      that.cancel();\n    });\n    that.userEvents.bind('end', proxy(that.start, that));\n    that.userEvents.bind('gestureend', proxy(that.start, that));\n    that.userEvents.bind('tap', proxy(that.onEnd, that));\n  }\n  onCancel() {\n    this.transition.cancel();\n  }\n  freeze(location) {\n    let that = this;\n    that.cancel();\n    that._moveTo(location);\n  }\n  onEnd() {\n    let that = this;\n    if (that.paneAxis.outOfBounds()) {\n      that._snapBack();\n    } else {\n      that._end();\n    }\n  }\n  done() {\n    return abs(this.velocity) < 1;\n  }\n  start(e) {\n    let that = this,\n      velocity;\n    if (!that.dimension.enabled) {\n      return;\n    }\n    if (that.paneAxis.outOfBounds()) {\n      if (that.transition._started) {\n        that.transition.cancel();\n        that.velocity = Math.min(e.touch[that.axis].velocity * that.velocityMultiplier, MAX_VELOCITY);\n        super.start();\n      } else {\n        that._snapBack();\n      }\n    } else {\n      velocity = e.touch.id === MOUSE_WHEEL_ID ? 0 : e.touch[that.axis].velocity;\n      that.velocity = Math.max(Math.min(velocity * that.velocityMultiplier, MAX_VELOCITY), -MAX_VELOCITY);\n      that.tapCapture.captureNext();\n      super.start();\n    }\n  }\n  tick() {\n    let that = this,\n      dimension = that.dimension,\n      friction = that.paneAxis.outOfBounds() ? OUT_OF_BOUNDS_FRICTION : that.friction,\n      delta = that.velocity *= friction,\n      location = that.movable[that.axis] + delta;\n    if (!that.elastic && dimension.outOfBounds(location)) {\n      location = Math.max(Math.min(location, dimension.max), dimension.min);\n      that.velocity = 0;\n    }\n    that.movable.moveAxis(that.axis, location);\n  }\n  _end() {\n    this.tapCapture.cancelCapture();\n    this.end();\n  }\n  _snapBack() {\n    let that = this,\n      dimension = that.dimension,\n      snapBack = that.movable[that.axis] > dimension.max ? dimension.max : dimension.min;\n    that._moveTo(snapBack);\n  }\n  _moveTo(location) {\n    this.transition.moveTo({\n      location: location,\n      duration: SNAPBACK_DURATION,\n      ease: Transition.easeOutExpo\n    });\n  }\n}\nclass AnimatedScroller extends Animation {\n  constructor(options) {\n    super(options);\n    let that = this;\n    extend(that, options, {\n      origin: {},\n      destination: {},\n      offset: {}\n    });\n  }\n  tick() {\n    this._updateCoordinates();\n    this.moveTo(this.origin);\n  }\n  done() {\n    return abs(this.offset.y) < ANIMATED_SCROLLER_PRECISION && abs(this.offset.x) < ANIMATED_SCROLLER_PRECISION;\n  }\n  onEnd() {\n    this.moveTo(this.destination);\n    if (this.callback) {\n      this.callback.call();\n    }\n  }\n  setCoordinates(from, to) {\n    this.offset = {};\n    this.origin = from;\n    this.destination = to;\n  }\n\n  /* eslint-disable no-param-reassign */\n  setCallback(callback) {\n    if (callback && isFunction(callback)) {\n      this.callback = callback;\n    } else {\n      callback = undefined;\n    }\n  }\n  /* eslint-enable no-param-reassign */\n\n  _updateCoordinates() {\n    this.offset = {\n      x: (this.destination.x - this.origin.x) / 4,\n      y: (this.destination.y - this.origin.y) / 4\n    };\n    this.origin = {\n      y: this.origin.y + this.offset.y,\n      x: this.origin.x + this.offset.x\n    };\n  }\n}\nclass ScrollBar extends Class {\n  constructor(options) {\n    super();\n    let that = this,\n      horizontal = options.axis === 'x';\n    const orientation = horizontal ? 'horizontal' : 'vertical';\n    const element = convertToHtml('<div class=\"km-touch-scrollbar km-' + orientation + '-scrollbar\" />');\n    extend(that, options, {\n      element: element,\n      elementSize: 0,\n      movable: new Movable(element),\n      scrollMovable: options.movable,\n      alwaysVisible: options.alwaysVisible,\n      size: horizontal ? 'width' : 'height'\n    });\n    that.scrollMovable.bind(CHANGE, that.refresh.bind(that));\n    that.container.appendChild(element);\n    if (options.alwaysVisible) {\n      that.show();\n    }\n  }\n  refresh() {\n    let that = this,\n      axis = that.axis,\n      dimension = that.dimension,\n      paneSize = dimension.size,\n      scrollMovable = that.scrollMovable,\n      sizeRatio = paneSize / dimension.total,\n      position = Math.round(-scrollMovable[axis] * sizeRatio),\n      size = Math.round(paneSize * sizeRatio);\n    if (sizeRatio >= 1) {\n      this.element.style.display = \"none\";\n    } else {\n      this.element.style.display = \"\";\n    }\n    if (position + size > paneSize) {\n      size = paneSize - position;\n    } else if (position < 0) {\n      size += position;\n      position = 0;\n    }\n    if (that.elementSize !== size) {\n      that.element.style[that.size] = size + 'px';\n      that.elementSize = size;\n    }\n    that.movable.moveAxis(axis, position);\n  }\n  show() {\n    this.element.style.opacity = SCROLLBAR_OPACITY;\n    this.element.style.visibility = \"visible\";\n  }\n  hide() {\n    if (!this.alwaysVisible) {\n      this.element.style.opacity = 0;\n    }\n  }\n}\n\n// export class Scroller extends Class {\nexport class Scroller extends Observable {\n  constructor(element, options) {\n    super();\n    let that = this;\n    this.element = element;\n    this._initOptions(options);\n    const hasScrolling = hasNativeScrolling(navigator.userAgent);\n    that._native = that.options.useNative && hasScrolling;\n    const scrollHeader = convertToHtml('<div class=\"km-scroll-header\"/>');\n    if (that._native) {\n      addClass(element, 'km-native-scroller');\n      prepend(scrollHeader, element);\n      extend(that, {\n        scrollElement: element,\n        fixedContainer: element.children[0]\n      });\n      return;\n    }\n    element.style.overflow = \"hidden\";\n    addClass(element, 'km-scroll-wrapper');\n    const scrollContainer = convertToHtml('<div class=\"km-scroll-container\"/>');\n    wrapInner(element, scrollContainer);\n    prepend(scrollHeader, element);\n    let inner = element.children[1],\n      tapCapture = new TapCapture(element),\n      movable = new Movable(inner),\n      dimensions = new PaneDimensions({\n        element: inner,\n        container: element,\n        forcedEnabled: that.options.zoom\n      }),\n      avoidScrolling = this.options.avoidScrolling,\n      userEvents = new UserEvents(element, {\n        touchAction: 'pan-y',\n        fastTap: true,\n        allowSelection: true,\n        preventDragEvent: true,\n        captureUpIfMoved: true,\n        multiTouch: that.options.zoom,\n        supportDoubleTap: that.options.supportDoubleTap,\n        start(e) {\n          dimensions.refresh();\n          let velocityX = abs(e.x.velocity),\n            velocityY = abs(e.y.velocity),\n            horizontalSwipe = velocityX * 2 >= velocityY,\n            originatedFromFixedContainer = contains(that.fixedContainer, e.event.target),\n            verticalSwipe = velocityY * 2 >= velocityX;\n          if (!originatedFromFixedContainer && !avoidScrolling(e) && that.enabled && (dimensions.x.enabled && horizontalSwipe || dimensions.y.enabled && verticalSwipe)) {\n            userEvents.capture();\n          } else {\n            userEvents.cancel();\n          }\n        }\n      }),\n      pane = new Pane({\n        movable: movable,\n        dimensions: dimensions,\n        userEvents: userEvents,\n        elastic: that.options.elastic\n      }),\n      zoomSnapBack = new ZoomSnapBack({\n        movable: movable,\n        dimensions: dimensions,\n        userEvents: userEvents,\n        tapCapture: tapCapture\n      }),\n      animatedScroller = new AnimatedScroller({\n        moveTo(coordinates) {\n          that.scrollTo(coordinates.x, coordinates.y);\n        }\n      });\n    movable.bind(CHANGE, function () {\n      that.scrollTop = -movable.y;\n      that.scrollLeft = -movable.x;\n      that.trigger(SCROLL, {\n        scrollTop: that.scrollTop,\n        scrollLeft: that.scrollLeft\n      });\n    });\n    if (that.options.mousewheelScrolling) {\n      this._wheelScrollHandler = this._wheelScroll.bind(this);\n      on(element, 'wheel', this._wheelScrollHandler);\n    }\n    extend(that, {\n      movable: movable,\n      dimensions: dimensions,\n      zoomSnapBack: zoomSnapBack,\n      animatedScroller: animatedScroller,\n      userEvents: userEvents,\n      pane: pane,\n      tapCapture: tapCapture,\n      pulled: false,\n      enabled: true,\n      scrollElement: inner,\n      scrollTop: 0,\n      scrollLeft: 0,\n      fixedContainer: element.children[0]\n    });\n    that._initAxis('x');\n    that._initAxis('y');\n    that._wheelEnd = function () {\n      that._wheel = false;\n      that.userEvents.end(0, that._wheelY);\n    };\n    dimensions.refresh();\n    if (that.options.pullToRefresh) {\n      that._initPullToRefresh();\n    }\n  }\n  _initOptions(options) {\n    this.options = deepExtend({}, this.options, options);\n  }\n  _wheelScroll(e) {\n    if (e.ctrlKey) {\n      return;\n    }\n    if (!this._wheel) {\n      this._wheel = true;\n      this._wheelY = 0;\n      this.userEvents.press(0, this._wheelY);\n    }\n    clearTimeout(this._wheelTimeout);\n    this._wheelTimeout = setTimeout(this._wheelEnd, 50);\n    let delta = wheelDeltaY(e);\n    if (delta) {\n      this._wheelY += delta;\n      this.userEvents.move(0, this._wheelY);\n    }\n    e.preventDefault();\n  }\n  makeVirtual() {\n    this.dimensions.y.makeVirtual();\n  }\n  virtualSize(min, max) {\n    this.dimensions.y.virtualSize(min, max);\n  }\n  height() {\n    return this.dimensions.y.size;\n  }\n  scrollHeight() {\n    return this.scrollElement.scrollHeight;\n  }\n  scrollWidth() {\n    return this.scrollElement.scrollWidth;\n  }\n  _resize() {\n    if (!this._native) {\n      this.contentResized();\n    }\n  }\n  setOptions(options) {\n    let that = this;\n    this._initOptions(options);\n    if (options.pullToRefresh) {\n      that._initPullToRefresh();\n    }\n  }\n  reset() {\n    if (this._native) {\n      this.scrollElement.scrollTop(0);\n    } else {\n      this.movable.moveTo({\n        x: 0,\n        y: 0\n      });\n      this._scale(1);\n    }\n  }\n  contentResized() {\n    this.dimensions.refresh();\n    if (this.pane.x.outOfBounds()) {\n      this.movable.moveAxis('x', this.dimensions.x.min);\n    }\n    if (this.pane.y.outOfBounds()) {\n      this.movable.moveAxis('y', this.dimensions.y.min);\n    }\n  }\n  zoomOut() {\n    let dimensions = this.dimensions;\n    dimensions.refresh();\n    this._scale(dimensions.fitScale);\n    this.movable.moveTo(dimensions.centerCoordinates());\n  }\n  enable() {\n    this.enabled = true;\n  }\n  disable() {\n    this.enabled = false;\n  }\n  scrollTo(x, y) {\n    if (this._native) {\n      this.scrollElement.scrollLeft(abs(x));\n      this.scrollElement.scrollTop(abs(y));\n    } else {\n      this.dimensions.refresh();\n      this.movable.moveTo({\n        x: x,\n        y: y\n      });\n    }\n  }\n  animatedScrollTo(x, y, callback) {\n    let from, to;\n    if (this._native) {\n      this.scrollTo(x, y);\n    } else {\n      from = {\n        x: this.movable.x,\n        y: this.movable.y\n      };\n      to = {\n        x: x,\n        y: y\n      };\n      this.animatedScroller.setCoordinates(from, to);\n      this.animatedScroller.setCallback(callback);\n      this.animatedScroller.start();\n    }\n  }\n\n  // kept for API compatibility, not used\n  pullHandled() {\n    // let that = this;\n\n    // removeClass(that.refreshHint, SCROLLER_REFRESH_CLASS);\n    // that.hintContainer.innerHTML = that.pullTemplate({}));\n\n    // that.yinertia.onEnd();\n    // that.xinertia.onEnd();\n    // that.userEvents.cancel();\n  }\n  destroy() {\n    const element = this.element;\n    off(element, 'wheel', this._wheelScrollHandler);\n    if (this.userEvents) {\n      this.userEvents.destroy();\n    }\n  }\n  _scale(scale) {\n    this.dimensions.rescale(scale);\n    this.movable.scaleTo(scale);\n  }\n  _initPullToRefresh() {}\n\n  // kept for API compatibility, not used\n  _dragEnd() {\n    // let that = this;\n\n    // if (!that.pulled) {\n    //     return;\n    // }\n\n    // that.pulled = false;\n\n    // removeClass(that.refreshHint, SCROLLER_RELEASE_CLASS);\n    // addClass(that.refreshHint, SCROLLER_REFRESH_CLASS);\n\n    // that.hintContainer.innerHTML = that.refreshTemplate({});\n\n    // that.yinertia.freeze(that.options.pullOffset / 2);\n    // that.trigger('pull');\n  }\n\n  // kept for API compatibility, not used\n  _paneChange() {\n    // let that = this;\n    // if (that.movable.y / OUT_OF_BOUNDS_FRICTION > that.options.pullOffset) {\n    //     if (!that.pulled) {\n    //         that.pulled = true;\n    //         that.refreshHint.removeClass(SCROLLER_REFRESH_CLASS).addClass(SCROLLER_RELEASE_CLASS);\n    //         that.hintContainer.html(that.releaseTemplate({}));\n    //         that.hintContainer.html(that.releaseTemplate({}));\n    //     }\n    // } else if (that.pulled) {\n    //     that.pulled = false;\n    //     that.refreshHint.removeClass(SCROLLER_RELEASE_CLASS);\n    //     that.hintContainer.html(that.pullTemplate({}));\n    // }\n  }\n  _initAxis(axis) {\n    let that = this,\n      movable = that.movable,\n      dimension = that.dimensions[axis],\n      tapCapture = that.tapCapture,\n      paneAxis = that.pane[axis],\n      scrollBar = new ScrollBar({\n        axis: axis,\n        movable: movable,\n        dimension: dimension,\n        container: that.element,\n        alwaysVisible: that.options.visibleScrollHints\n      });\n    dimension.bind(CHANGE, function () {\n      scrollBar.refresh();\n    });\n    paneAxis.bind(CHANGE, function () {\n      scrollBar.show();\n    });\n    that[axis + 'inertia'] = new DragInertia({\n      axis: axis,\n      paneAxis: paneAxis,\n      movable: movable,\n      tapCapture: tapCapture,\n      userEvents: that.userEvents,\n      dimension: dimension,\n      elastic: that.options.elastic,\n      friction: that.options.friction || FRICTION,\n      velocityMultiplier: that.options.velocityMultiplier || VELOCITY_MULTIPLIER,\n      end() {\n        scrollBar.hide();\n        that.trigger('scrollEnd', {\n          axis: axis,\n          scrollTop: that.scrollTop,\n          scrollLeft: that.scrollLeft\n        });\n      }\n    });\n  }\n}\nsetDefaultOptions(Scroller, {\n  name: 'Scroller',\n  zoom: false,\n  pullOffset: 140,\n  visibleScrollHints: false,\n  elastic: true,\n  useNative: false,\n  mousewheelScrolling: true,\n  avoidScrolling() {\n    return false;\n  },\n  pullToRefresh: false,\n  messages: {\n    pullTemplate: 'Pull to refresh',\n    releaseTemplate: 'Release to refresh',\n    refreshTemplate: 'Refreshing'\n  }\n});\nsetDefaultEvents(Scroller, [PULL, SCROLL, RESIZE]);","map":{"version":3,"names":["Class","deepExtend","addClass","isFunction","setDefaultOptions","convertToHtml","prepend","wrapInner","contains","hasNativeScrolling","on","off","proxy","wheelDeltaY","setDefaultEvents","Transition","Animation","Pane","PaneDimensions","Movable","TapCapture","UserEvents","Observable","extend","Object","assign","abs","Math","SNAPBACK_DURATION","SCROLLBAR_OPACITY","FRICTION","VELOCITY_MULTIPLIER","MAX_VELOCITY","OUT_OF_BOUNDS_FRICTION","ANIMATED_SCROLLER_PRECISION","PULL","CHANGE","RESIZE","SCROLL","MOUSE_WHEEL_ID","ZoomSnapBack","constructor","options","that","userEvents","bind","start","tapCapture","cancel","enabled","movable","scale","dimensions","minScale","done","tick","scaleWith","rescale","onEnd","scaleTo","DragInertia","transition","axis","_end","onCancel","freeze","location","_moveTo","paneAxis","outOfBounds","_snapBack","velocity","e","dimension","_started","min","touch","velocityMultiplier","id","max","captureNext","friction","delta","elastic","moveAxis","cancelCapture","end","snapBack","moveTo","duration","ease","easeOutExpo","AnimatedScroller","origin","destination","offset","_updateCoordinates","y","x","callback","call","setCoordinates","from","to","setCallback","undefined","ScrollBar","horizontal","orientation","element","elementSize","scrollMovable","alwaysVisible","size","refresh","container","appendChild","show","paneSize","sizeRatio","total","position","round","style","display","opacity","visibility","hide","Scroller","_initOptions","hasScrolling","navigator","userAgent","_native","useNative","scrollHeader","scrollElement","fixedContainer","children","overflow","scrollContainer","inner","forcedEnabled","zoom","avoidScrolling","touchAction","fastTap","allowSelection","preventDragEvent","captureUpIfMoved","multiTouch","supportDoubleTap","velocityX","velocityY","horizontalSwipe","originatedFromFixedContainer","event","target","verticalSwipe","capture","pane","zoomSnapBack","animatedScroller","coordinates","scrollTo","scrollTop","scrollLeft","trigger","mousewheelScrolling","_wheelScrollHandler","_wheelScroll","pulled","_initAxis","_wheelEnd","_wheel","_wheelY","pullToRefresh","_initPullToRefresh","ctrlKey","press","clearTimeout","_wheelTimeout","setTimeout","move","preventDefault","makeVirtual","virtualSize","height","scrollHeight","scrollWidth","_resize","contentResized","setOptions","reset","_scale","zoomOut","fitScale","centerCoordinates","enable","disable","animatedScrollTo","pullHandled","destroy","_dragEnd","_paneChange","scrollBar","visibleScrollHints","name","pullOffset","messages","pullTemplate","releaseTemplate","refreshTemplate"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/map/scroller/scroller.js"],"sourcesContent":["// todo: extract to a separate place\n\nimport {\n    Class,\n    deepExtend,\n    addClass,\n    isFunction,\n    setDefaultOptions\n} from '../../common';\n\nimport {\n    convertToHtml,\n    prepend,\n    wrapInner,\n    contains,\n    hasNativeScrolling,\n    on,\n    off,\n    proxy,\n    wheelDeltaY,\n    setDefaultEvents\n} from '../utils';\n\nimport {\n    Transition,\n    Animation\n} from './fx';\n\nimport {\n    Pane,\n    PaneDimensions,\n    Movable,\n    TapCapture\n} from './draggable';\n\nimport {\n    UserEvents\n} from './user-events';\n\nimport {\n    Observable\n} from './observable';\n\nlet\n    extend = Object.assign,\n    abs = Math.abs,\n    SNAPBACK_DURATION = 500,\n    SCROLLBAR_OPACITY = 0.7,\n    FRICTION = 0.96,\n    VELOCITY_MULTIPLIER = 10,\n    MAX_VELOCITY = 55,\n    OUT_OF_BOUNDS_FRICTION = 0.5,\n    ANIMATED_SCROLLER_PRECISION = 5,\n    // SCROLLER_RELEASE_CLASS = 'km-scroller-release',\n    // SCROLLER_REFRESH_CLASS = 'km-scroller-refresh',\n    PULL = 'pull',\n    CHANGE = 'change',\n    RESIZE = 'resize',\n    SCROLL = 'scroll',\n    MOUSE_WHEEL_ID = 2;\n\nclass ZoomSnapBack extends Animation {\n    constructor(options) {\n        super(options);\n        let that = this;\n        extend(that, options);\n        that.userEvents.bind('gestureend', that.start.bind(this));\n        that.tapCapture.bind('press', that.cancel.bind(this));\n    }\n\n    enabled() {\n        return this.movable.scale < this.dimensions.minScale;\n    }\n\n    done() {\n        return this.dimensions.minScale - this.movable.scale < 0.01;\n    }\n\n    tick() {\n        let movable = this.movable;\n        movable.scaleWith(1.1);\n        this.dimensions.rescale(movable.scale);\n    }\n\n    onEnd() {\n        let movable = this.movable;\n        movable.scaleTo(this.dimensions.minScale);\n        this.dimensions.rescale(movable.scale);\n    }\n}\n\nclass DragInertia extends Animation {\n    constructor(options) {\n        super();\n        let that = this;\n\n        extend(that, options, {\n            transition: new Transition({\n                axis: options.axis,\n                movable: options.movable,\n                onEnd() {\n                    that._end();\n                }\n            })\n        });\n\n        that.tapCapture.bind('press', function() {\n            that.cancel();\n        });\n\n        that.userEvents.bind('end', proxy(that.start, that));\n        that.userEvents.bind('gestureend', proxy(that.start, that));\n        that.userEvents.bind('tap', proxy(that.onEnd, that));\n    }\n\n    onCancel() {\n        this.transition.cancel();\n    }\n\n    freeze(location) {\n        let that = this;\n        that.cancel();\n        that._moveTo(location);\n    }\n\n    onEnd() {\n        let that = this;\n        if (that.paneAxis.outOfBounds()) {\n            that._snapBack();\n        } else {\n            that._end();\n        }\n    }\n\n    done() {\n        return abs(this.velocity) < 1;\n    }\n\n    start(e) {\n        let that = this,\n            velocity;\n        if (!that.dimension.enabled) {\n            return;\n        }\n        if (that.paneAxis.outOfBounds()) {\n            if (that.transition._started) {\n                that.transition.cancel();\n                that.velocity = Math.min(e.touch[that.axis].velocity * that.velocityMultiplier, MAX_VELOCITY);\n                super.start();\n            } else {\n                that._snapBack();\n            }\n        } else {\n            velocity = e.touch.id === MOUSE_WHEEL_ID ? 0 : e.touch[that.axis].velocity;\n            that.velocity = Math.max(Math.min(velocity * that.velocityMultiplier, MAX_VELOCITY), -MAX_VELOCITY);\n            that.tapCapture.captureNext();\n            super.start();\n        }\n    }\n\n    tick() {\n        let that = this,\n            dimension = that.dimension,\n            friction = that.paneAxis.outOfBounds() ? OUT_OF_BOUNDS_FRICTION : that.friction,\n            delta = that.velocity *= friction,\n            location = that.movable[that.axis] + delta;\n\n        if (!that.elastic && dimension.outOfBounds(location)) {\n            location = Math.max(Math.min(location, dimension.max), dimension.min);\n            that.velocity = 0;\n        }\n\n        that.movable.moveAxis(that.axis, location);\n    }\n\n    _end() {\n        this.tapCapture.cancelCapture();\n        this.end();\n    }\n\n    _snapBack() {\n        let that = this,\n            dimension = that.dimension,\n            snapBack = that.movable[that.axis] > dimension.max ? dimension.max : dimension.min;\n\n        that._moveTo(snapBack);\n    }\n\n    _moveTo(location) {\n        this.transition.moveTo({\n            location: location,\n            duration: SNAPBACK_DURATION,\n            ease: Transition.easeOutExpo\n        });\n    }\n}\n\nclass AnimatedScroller extends Animation {\n    constructor(options) {\n        super(options);\n        let that = this;\n\n        extend(that, options, {\n            origin: {},\n            destination: {},\n            offset: {}\n        });\n    }\n\n    tick() {\n        this._updateCoordinates();\n        this.moveTo(this.origin);\n    }\n\n    done() {\n        return abs(this.offset.y) < ANIMATED_SCROLLER_PRECISION && abs(this.offset.x) < ANIMATED_SCROLLER_PRECISION;\n    }\n\n    onEnd() {\n        this.moveTo(this.destination);\n        if (this.callback) {\n            this.callback.call();\n        }\n    }\n\n    setCoordinates(from, to) {\n        this.offset = {};\n        this.origin = from;\n        this.destination = to;\n    }\n\n    /* eslint-disable no-param-reassign */\n    setCallback(callback) {\n        if (callback && isFunction(callback)) {\n            this.callback = callback;\n        } else {\n            callback = undefined;\n        }\n    }\n    /* eslint-enable no-param-reassign */\n\n    _updateCoordinates() {\n        this.offset = {\n            x: (this.destination.x - this.origin.x) / 4,\n            y: (this.destination.y - this.origin.y) / 4\n        };\n        this.origin = {\n            y: this.origin.y + this.offset.y,\n            x: this.origin.x + this.offset.x\n        };\n    }\n}\n\nclass ScrollBar extends Class {\n    constructor(options) {\n        super();\n        let that = this,\n            horizontal = options.axis === 'x';\n\n        const orientation = (horizontal ? 'horizontal' : 'vertical');\n        const element = convertToHtml('<div class=\"km-touch-scrollbar km-' + orientation + '-scrollbar\" />');\n\n        extend(that, options, {\n            element: element,\n            elementSize: 0,\n            movable: new Movable(element),\n            scrollMovable: options.movable,\n            alwaysVisible: options.alwaysVisible,\n            size: horizontal ? 'width' : 'height'\n        });\n\n        that.scrollMovable.bind(CHANGE, that.refresh.bind(that));\n\n        that.container.appendChild(element);\n\n        if (options.alwaysVisible) {\n            that.show();\n        }\n    }\n\n    refresh() {\n        let that = this,\n            axis = that.axis,\n            dimension = that.dimension,\n            paneSize = dimension.size,\n            scrollMovable = that.scrollMovable,\n            sizeRatio = paneSize / dimension.total,\n            position = Math.round(-scrollMovable[axis] * sizeRatio),\n            size = Math.round(paneSize * sizeRatio);\n        if (sizeRatio >= 1) {\n            this.element.style.display = \"none\";\n        } else {\n            this.element.style.display = \"\";\n        }\n        if (position + size > paneSize) {\n            size = paneSize - position;\n        } else if (position < 0) {\n            size += position;\n            position = 0;\n        }\n        if (that.elementSize !== size) {\n            that.element.style[that.size] = size + 'px';\n            that.elementSize = size;\n        }\n        that.movable.moveAxis(axis, position);\n    }\n\n    show() {\n        this.element.style.opacity = SCROLLBAR_OPACITY;\n        this.element.style.visibility = \"visible\";\n    }\n\n    hide() {\n        if (!this.alwaysVisible) {\n            this.element.style.opacity = 0;\n        }\n    }\n}\n\n// export class Scroller extends Class {\nexport class Scroller extends Observable {\n    constructor(element, options) {\n        super();\n        let that = this;\n        this.element = element;\n\n        this._initOptions(options);\n\n        const hasScrolling = hasNativeScrolling(navigator.userAgent);\n        that._native = that.options.useNative && hasScrolling;\n        const scrollHeader = convertToHtml('<div class=\"km-scroll-header\"/>');\n\n        if (that._native) {\n            addClass(element, 'km-native-scroller');\n            prepend(scrollHeader, element);\n\n            extend(that, {\n                scrollElement: element,\n                fixedContainer: element.children[0]\n            });\n\n            return;\n        }\n\n        element.style.overflow = \"hidden\";\n        addClass(element, 'km-scroll-wrapper');\n\n        const scrollContainer = convertToHtml('<div class=\"km-scroll-container\"/>');\n        wrapInner(element, scrollContainer);\n        prepend(scrollHeader, element);\n\n        let inner = element.children[1],\n            tapCapture = new TapCapture(element),\n            movable = new Movable(inner),\n\n            dimensions = new PaneDimensions({\n                element: inner,\n                container: element,\n                forcedEnabled: that.options.zoom\n            }),\n            avoidScrolling = this.options.avoidScrolling,\n\n            userEvents = new UserEvents(element, {\n                touchAction: 'pan-y',\n                fastTap: true,\n                allowSelection: true,\n                preventDragEvent: true,\n                captureUpIfMoved: true,\n                multiTouch: that.options.zoom,\n                supportDoubleTap: that.options.supportDoubleTap,\n                start(e) {\n                    dimensions.refresh();\n                    let velocityX = abs(e.x.velocity),\n                        velocityY = abs(e.y.velocity),\n                        horizontalSwipe = velocityX * 2 >= velocityY,\n                        originatedFromFixedContainer = contains(that.fixedContainer, e.event.target),\n                        verticalSwipe = velocityY * 2 >= velocityX;\n                    if (!originatedFromFixedContainer && !avoidScrolling(e) && that.enabled && (dimensions.x.enabled && horizontalSwipe || dimensions.y.enabled && verticalSwipe)) {\n                        userEvents.capture();\n                    } else {\n                        userEvents.cancel();\n                    }\n                }\n            }),\n\n            pane = new Pane({\n                movable: movable,\n                dimensions: dimensions,\n                userEvents: userEvents,\n                elastic: that.options.elastic\n            }),\n\n            zoomSnapBack = new ZoomSnapBack({\n                movable: movable,\n                dimensions: dimensions,\n                userEvents: userEvents,\n                tapCapture: tapCapture\n            }),\n\n            animatedScroller = new AnimatedScroller({\n                moveTo(coordinates) {\n                    that.scrollTo(coordinates.x, coordinates.y);\n                }\n            });\n\n        movable.bind(CHANGE, function() {\n            that.scrollTop = -movable.y;\n            that.scrollLeft = -movable.x;\n            that.trigger(SCROLL, {\n                scrollTop: that.scrollTop,\n                scrollLeft: that.scrollLeft\n            });\n        });\n\n        if (that.options.mousewheelScrolling) {\n            this._wheelScrollHandler = this._wheelScroll.bind(this);\n            on(element, 'wheel', this._wheelScrollHandler);\n        }\n\n        extend(that, {\n            movable: movable,\n            dimensions: dimensions,\n            zoomSnapBack: zoomSnapBack,\n            animatedScroller: animatedScroller,\n            userEvents: userEvents,\n            pane: pane,\n            tapCapture: tapCapture,\n            pulled: false,\n            enabled: true,\n            scrollElement: inner,\n            scrollTop: 0,\n            scrollLeft: 0,\n            fixedContainer: element.children[0]\n        });\n\n        that._initAxis('x');\n        that._initAxis('y');\n\n        that._wheelEnd = function() {\n            that._wheel = false;\n            that.userEvents.end(0, that._wheelY);\n        };\n\n        dimensions.refresh();\n\n        if (that.options.pullToRefresh) {\n            that._initPullToRefresh();\n        }\n    }\n\n    _initOptions(options) {\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    _wheelScroll(e) {\n        if (e.ctrlKey) {\n            return;\n        }\n        if (!this._wheel) {\n            this._wheel = true;\n            this._wheelY = 0;\n            this.userEvents.press(0, this._wheelY);\n        }\n\n        clearTimeout(this._wheelTimeout);\n        this._wheelTimeout = setTimeout(this._wheelEnd, 50);\n        let delta = wheelDeltaY(e);\n\n        if (delta) {\n            this._wheelY += delta;\n            this.userEvents.move(0, this._wheelY);\n        }\n\n        e.preventDefault();\n    }\n\n    makeVirtual() {\n        this.dimensions.y.makeVirtual();\n    }\n\n    virtualSize(min, max) {\n        this.dimensions.y.virtualSize(min, max);\n    }\n\n    height() {\n        return this.dimensions.y.size;\n    }\n\n    scrollHeight() {\n        return this.scrollElement.scrollHeight;\n    }\n\n    scrollWidth() {\n        return this.scrollElement.scrollWidth;\n    }\n\n    _resize() {\n        if (!this._native) {\n            this.contentResized();\n        }\n    }\n\n    setOptions(options) {\n        let that = this;\n\n        this._initOptions(options);\n\n        if (options.pullToRefresh) {\n            that._initPullToRefresh();\n        }\n    }\n\n    reset() {\n        if (this._native) {\n            this.scrollElement.scrollTop(0);\n        } else {\n            this.movable.moveTo({\n                x: 0,\n                y: 0\n            });\n            this._scale(1);\n        }\n    }\n\n    contentResized() {\n        this.dimensions.refresh();\n        if (this.pane.x.outOfBounds()) {\n            this.movable.moveAxis('x', this.dimensions.x.min);\n        }\n        if (this.pane.y.outOfBounds()) {\n            this.movable.moveAxis('y', this.dimensions.y.min);\n        }\n    }\n\n    zoomOut() {\n        let dimensions = this.dimensions;\n        dimensions.refresh();\n        this._scale(dimensions.fitScale);\n        this.movable.moveTo(dimensions.centerCoordinates());\n    }\n\n    enable() {\n        this.enabled = true;\n    }\n\n    disable() {\n        this.enabled = false;\n    }\n\n    scrollTo(x, y) {\n        if (this._native) {\n            this.scrollElement.scrollLeft(abs(x));\n            this.scrollElement.scrollTop(abs(y));\n        } else {\n            this.dimensions.refresh();\n            this.movable.moveTo({\n                x: x,\n                y: y\n            });\n        }\n    }\n\n    animatedScrollTo(x, y, callback) {\n        let from, to;\n        if (this._native) {\n            this.scrollTo(x, y);\n        } else {\n            from = {\n                x: this.movable.x,\n                y: this.movable.y\n            };\n            to = {\n                x: x,\n                y: y\n            };\n            this.animatedScroller.setCoordinates(from, to);\n            this.animatedScroller.setCallback(callback);\n            this.animatedScroller.start();\n        }\n    }\n\n    // kept for API compatibility, not used\n    pullHandled() {\n        // let that = this;\n\n        // removeClass(that.refreshHint, SCROLLER_REFRESH_CLASS);\n        // that.hintContainer.innerHTML = that.pullTemplate({}));\n\n        // that.yinertia.onEnd();\n        // that.xinertia.onEnd();\n        // that.userEvents.cancel();\n    }\n\n    destroy() {\n        const element = this.element;\n\n        off(element, 'wheel', this._wheelScrollHandler);\n\n        if (this.userEvents) {\n            this.userEvents.destroy();\n        }\n    }\n\n    _scale(scale) {\n        this.dimensions.rescale(scale);\n        this.movable.scaleTo(scale);\n    }\n\n    _initPullToRefresh() {\n    }\n\n    // kept for API compatibility, not used\n    _dragEnd() {\n        // let that = this;\n\n        // if (!that.pulled) {\n        //     return;\n        // }\n\n        // that.pulled = false;\n\n        // removeClass(that.refreshHint, SCROLLER_RELEASE_CLASS);\n        // addClass(that.refreshHint, SCROLLER_REFRESH_CLASS);\n\n        // that.hintContainer.innerHTML = that.refreshTemplate({});\n\n        // that.yinertia.freeze(that.options.pullOffset / 2);\n        // that.trigger('pull');\n    }\n\n    // kept for API compatibility, not used\n    _paneChange() {\n        // let that = this;\n        // if (that.movable.y / OUT_OF_BOUNDS_FRICTION > that.options.pullOffset) {\n        //     if (!that.pulled) {\n        //         that.pulled = true;\n        //         that.refreshHint.removeClass(SCROLLER_REFRESH_CLASS).addClass(SCROLLER_RELEASE_CLASS);\n        //         that.hintContainer.html(that.releaseTemplate({}));\n        //         that.hintContainer.html(that.releaseTemplate({}));\n        //     }\n        // } else if (that.pulled) {\n        //     that.pulled = false;\n        //     that.refreshHint.removeClass(SCROLLER_RELEASE_CLASS);\n        //     that.hintContainer.html(that.pullTemplate({}));\n        // }\n    }\n\n    _initAxis(axis) {\n        let that = this,\n            movable = that.movable,\n            dimension = that.dimensions[axis],\n            tapCapture = that.tapCapture,\n            paneAxis = that.pane[axis],\n            scrollBar = new ScrollBar({\n                axis: axis,\n                movable: movable,\n                dimension: dimension,\n                container: that.element,\n                alwaysVisible: that.options.visibleScrollHints\n            });\n\n        dimension.bind(CHANGE, function() {\n            scrollBar.refresh();\n        });\n\n        paneAxis.bind(CHANGE, function() {\n            scrollBar.show();\n        });\n\n        that[axis + 'inertia'] = new DragInertia({\n            axis: axis,\n            paneAxis: paneAxis,\n            movable: movable,\n            tapCapture: tapCapture,\n            userEvents: that.userEvents,\n            dimension: dimension,\n            elastic: that.options.elastic,\n            friction: that.options.friction || FRICTION,\n            velocityMultiplier: that.options.velocityMultiplier || VELOCITY_MULTIPLIER,\n            end() {\n                scrollBar.hide();\n                that.trigger('scrollEnd', {\n                    axis: axis,\n                    scrollTop: that.scrollTop,\n                    scrollLeft: that.scrollLeft\n                });\n            }\n        });\n    }\n}\n\nsetDefaultOptions(Scroller, {\n    name: 'Scroller',\n    zoom: false,\n    pullOffset: 140,\n    visibleScrollHints: false,\n    elastic: true,\n    useNative: false,\n    mousewheelScrolling: true,\n    avoidScrolling() {\n        return false;\n    },\n    pullToRefresh: false,\n    messages: {\n        pullTemplate: 'Pull to refresh',\n        releaseTemplate: 'Release to refresh',\n        refreshTemplate: 'Refreshing'\n    }\n});\n\nsetDefaultEvents(Scroller, [\n    PULL,\n    SCROLL,\n    RESIZE\n]);\n\n"],"mappings":"AAAA;;AAEA,SACIA,KAAK,EACLC,UAAU,EACVC,QAAQ,EACRC,UAAU,EACVC,iBAAiB,QACd,cAAc;AAErB,SACIC,aAAa,EACbC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,kBAAkB,EAClBC,EAAE,EACFC,GAAG,EACHC,KAAK,EACLC,WAAW,EACXC,gBAAgB,QACb,UAAU;AAEjB,SACIC,UAAU,EACVC,SAAS,QACN,MAAM;AAEb,SACIC,IAAI,EACJC,cAAc,EACdC,OAAO,EACPC,UAAU,QACP,aAAa;AAEpB,SACIC,UAAU,QACP,eAAe;AAEtB,SACIC,UAAU,QACP,cAAc;AAErB,IACIC,MAAM,GAAGC,MAAM,CAACC,MAAM;EACtBC,GAAG,GAAGC,IAAI,CAACD,GAAG;EACdE,iBAAiB,GAAG,GAAG;EACvBC,iBAAiB,GAAG,GAAG;EACvBC,QAAQ,GAAG,IAAI;EACfC,mBAAmB,GAAG,EAAE;EACxBC,YAAY,GAAG,EAAE;EACjBC,sBAAsB,GAAG,GAAG;EAC5BC,2BAA2B,GAAG,CAAC;EAC/B;EACA;EACAC,IAAI,GAAG,MAAM;EACbC,MAAM,GAAG,QAAQ;EACjBC,MAAM,GAAG,QAAQ;EACjBC,MAAM,GAAG,QAAQ;EACjBC,cAAc,GAAG,CAAC;AAEtB,MAAMC,YAAY,SAASxB,SAAS,CAAC;EACjCyB,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAACA,OAAO,CAAC;IACd,IAAIC,IAAI,GAAG,IAAI;IACfpB,MAAM,CAACoB,IAAI,EAAED,OAAO,CAAC;IACrBC,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,YAAY,EAAEF,IAAI,CAACG,KAAK,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;IACzDF,IAAI,CAACI,UAAU,CAACF,IAAI,CAAC,OAAO,EAAEF,IAAI,CAACK,MAAM,CAACH,IAAI,CAAC,IAAI,CAAC,CAAC;EACzD;EAEAI,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACC,OAAO,CAACC,KAAK,GAAG,IAAI,CAACC,UAAU,CAACC,QAAQ;EACxD;EAEAC,IAAIA,CAAA,EAAG;IACH,OAAO,IAAI,CAACF,UAAU,CAACC,QAAQ,GAAG,IAAI,CAACH,OAAO,CAACC,KAAK,GAAG,IAAI;EAC/D;EAEAI,IAAIA,CAAA,EAAG;IACH,IAAIL,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1BA,OAAO,CAACM,SAAS,CAAC,GAAG,CAAC;IACtB,IAAI,CAACJ,UAAU,CAACK,OAAO,CAACP,OAAO,CAACC,KAAK,CAAC;EAC1C;EAEAO,KAAKA,CAAA,EAAG;IACJ,IAAIR,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1BA,OAAO,CAACS,OAAO,CAAC,IAAI,CAACP,UAAU,CAACC,QAAQ,CAAC;IACzC,IAAI,CAACD,UAAU,CAACK,OAAO,CAACP,OAAO,CAACC,KAAK,CAAC;EAC1C;AACJ;AAEA,MAAMS,WAAW,SAAS5C,SAAS,CAAC;EAChCyB,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAAC,CAAC;IACP,IAAIC,IAAI,GAAG,IAAI;IAEfpB,MAAM,CAACoB,IAAI,EAAED,OAAO,EAAE;MAClBmB,UAAU,EAAE,IAAI9C,UAAU,CAAC;QACvB+C,IAAI,EAAEpB,OAAO,CAACoB,IAAI;QAClBZ,OAAO,EAAER,OAAO,CAACQ,OAAO;QACxBQ,KAAKA,CAAA,EAAG;UACJf,IAAI,CAACoB,IAAI,CAAC,CAAC;QACf;MACJ,CAAC;IACL,CAAC,CAAC;IAEFpB,IAAI,CAACI,UAAU,CAACF,IAAI,CAAC,OAAO,EAAE,YAAW;MACrCF,IAAI,CAACK,MAAM,CAAC,CAAC;IACjB,CAAC,CAAC;IAEFL,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,KAAK,EAAEjC,KAAK,CAAC+B,IAAI,CAACG,KAAK,EAAEH,IAAI,CAAC,CAAC;IACpDA,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,YAAY,EAAEjC,KAAK,CAAC+B,IAAI,CAACG,KAAK,EAAEH,IAAI,CAAC,CAAC;IAC3DA,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,KAAK,EAAEjC,KAAK,CAAC+B,IAAI,CAACe,KAAK,EAAEf,IAAI,CAAC,CAAC;EACxD;EAEAqB,QAAQA,CAAA,EAAG;IACP,IAAI,CAACH,UAAU,CAACb,MAAM,CAAC,CAAC;EAC5B;EAEAiB,MAAMA,CAACC,QAAQ,EAAE;IACb,IAAIvB,IAAI,GAAG,IAAI;IACfA,IAAI,CAACK,MAAM,CAAC,CAAC;IACbL,IAAI,CAACwB,OAAO,CAACD,QAAQ,CAAC;EAC1B;EAEAR,KAAKA,CAAA,EAAG;IACJ,IAAIf,IAAI,GAAG,IAAI;IACf,IAAIA,IAAI,CAACyB,QAAQ,CAACC,WAAW,CAAC,CAAC,EAAE;MAC7B1B,IAAI,CAAC2B,SAAS,CAAC,CAAC;IACpB,CAAC,MAAM;MACH3B,IAAI,CAACoB,IAAI,CAAC,CAAC;IACf;EACJ;EAEAT,IAAIA,CAAA,EAAG;IACH,OAAO5B,GAAG,CAAC,IAAI,CAAC6C,QAAQ,CAAC,GAAG,CAAC;EACjC;EAEAzB,KAAKA,CAAC0B,CAAC,EAAE;IACL,IAAI7B,IAAI,GAAG,IAAI;MACX4B,QAAQ;IACZ,IAAI,CAAC5B,IAAI,CAAC8B,SAAS,CAACxB,OAAO,EAAE;MACzB;IACJ;IACA,IAAIN,IAAI,CAACyB,QAAQ,CAACC,WAAW,CAAC,CAAC,EAAE;MAC7B,IAAI1B,IAAI,CAACkB,UAAU,CAACa,QAAQ,EAAE;QAC1B/B,IAAI,CAACkB,UAAU,CAACb,MAAM,CAAC,CAAC;QACxBL,IAAI,CAAC4B,QAAQ,GAAG5C,IAAI,CAACgD,GAAG,CAACH,CAAC,CAACI,KAAK,CAACjC,IAAI,CAACmB,IAAI,CAAC,CAACS,QAAQ,GAAG5B,IAAI,CAACkC,kBAAkB,EAAE7C,YAAY,CAAC;QAC7F,KAAK,CAACc,KAAK,CAAC,CAAC;MACjB,CAAC,MAAM;QACHH,IAAI,CAAC2B,SAAS,CAAC,CAAC;MACpB;IACJ,CAAC,MAAM;MACHC,QAAQ,GAAGC,CAAC,CAACI,KAAK,CAACE,EAAE,KAAKvC,cAAc,GAAG,CAAC,GAAGiC,CAAC,CAACI,KAAK,CAACjC,IAAI,CAACmB,IAAI,CAAC,CAACS,QAAQ;MAC1E5B,IAAI,CAAC4B,QAAQ,GAAG5C,IAAI,CAACoD,GAAG,CAACpD,IAAI,CAACgD,GAAG,CAACJ,QAAQ,GAAG5B,IAAI,CAACkC,kBAAkB,EAAE7C,YAAY,CAAC,EAAE,CAACA,YAAY,CAAC;MACnGW,IAAI,CAACI,UAAU,CAACiC,WAAW,CAAC,CAAC;MAC7B,KAAK,CAAClC,KAAK,CAAC,CAAC;IACjB;EACJ;EAEAS,IAAIA,CAAA,EAAG;IACH,IAAIZ,IAAI,GAAG,IAAI;MACX8B,SAAS,GAAG9B,IAAI,CAAC8B,SAAS;MAC1BQ,QAAQ,GAAGtC,IAAI,CAACyB,QAAQ,CAACC,WAAW,CAAC,CAAC,GAAGpC,sBAAsB,GAAGU,IAAI,CAACsC,QAAQ;MAC/EC,KAAK,GAAGvC,IAAI,CAAC4B,QAAQ,IAAIU,QAAQ;MACjCf,QAAQ,GAAGvB,IAAI,CAACO,OAAO,CAACP,IAAI,CAACmB,IAAI,CAAC,GAAGoB,KAAK;IAE9C,IAAI,CAACvC,IAAI,CAACwC,OAAO,IAAIV,SAAS,CAACJ,WAAW,CAACH,QAAQ,CAAC,EAAE;MAClDA,QAAQ,GAAGvC,IAAI,CAACoD,GAAG,CAACpD,IAAI,CAACgD,GAAG,CAACT,QAAQ,EAAEO,SAAS,CAACM,GAAG,CAAC,EAAEN,SAAS,CAACE,GAAG,CAAC;MACrEhC,IAAI,CAAC4B,QAAQ,GAAG,CAAC;IACrB;IAEA5B,IAAI,CAACO,OAAO,CAACkC,QAAQ,CAACzC,IAAI,CAACmB,IAAI,EAAEI,QAAQ,CAAC;EAC9C;EAEAH,IAAIA,CAAA,EAAG;IACH,IAAI,CAAChB,UAAU,CAACsC,aAAa,CAAC,CAAC;IAC/B,IAAI,CAACC,GAAG,CAAC,CAAC;EACd;EAEAhB,SAASA,CAAA,EAAG;IACR,IAAI3B,IAAI,GAAG,IAAI;MACX8B,SAAS,GAAG9B,IAAI,CAAC8B,SAAS;MAC1Bc,QAAQ,GAAG5C,IAAI,CAACO,OAAO,CAACP,IAAI,CAACmB,IAAI,CAAC,GAAGW,SAAS,CAACM,GAAG,GAAGN,SAAS,CAACM,GAAG,GAAGN,SAAS,CAACE,GAAG;IAEtFhC,IAAI,CAACwB,OAAO,CAACoB,QAAQ,CAAC;EAC1B;EAEApB,OAAOA,CAACD,QAAQ,EAAE;IACd,IAAI,CAACL,UAAU,CAAC2B,MAAM,CAAC;MACnBtB,QAAQ,EAAEA,QAAQ;MAClBuB,QAAQ,EAAE7D,iBAAiB;MAC3B8D,IAAI,EAAE3E,UAAU,CAAC4E;IACrB,CAAC,CAAC;EACN;AACJ;AAEA,MAAMC,gBAAgB,SAAS5E,SAAS,CAAC;EACrCyB,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAACA,OAAO,CAAC;IACd,IAAIC,IAAI,GAAG,IAAI;IAEfpB,MAAM,CAACoB,IAAI,EAAED,OAAO,EAAE;MAClBmD,MAAM,EAAE,CAAC,CAAC;MACVC,WAAW,EAAE,CAAC,CAAC;MACfC,MAAM,EAAE,CAAC;IACb,CAAC,CAAC;EACN;EAEAxC,IAAIA,CAAA,EAAG;IACH,IAAI,CAACyC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACR,MAAM,CAAC,IAAI,CAACK,MAAM,CAAC;EAC5B;EAEAvC,IAAIA,CAAA,EAAG;IACH,OAAO5B,GAAG,CAAC,IAAI,CAACqE,MAAM,CAACE,CAAC,CAAC,GAAG/D,2BAA2B,IAAIR,GAAG,CAAC,IAAI,CAACqE,MAAM,CAACG,CAAC,CAAC,GAAGhE,2BAA2B;EAC/G;EAEAwB,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAC8B,MAAM,CAAC,IAAI,CAACM,WAAW,CAAC;IAC7B,IAAI,IAAI,CAACK,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB;EACJ;EAEAC,cAAcA,CAACC,IAAI,EAAEC,EAAE,EAAE;IACrB,IAAI,CAACR,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACF,MAAM,GAAGS,IAAI;IAClB,IAAI,CAACR,WAAW,GAAGS,EAAE;EACzB;;EAEA;EACAC,WAAWA,CAACL,QAAQ,EAAE;IAClB,IAAIA,QAAQ,IAAIhG,UAAU,CAACgG,QAAQ,CAAC,EAAE;MAClC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC5B,CAAC,MAAM;MACHA,QAAQ,GAAGM,SAAS;IACxB;EACJ;EACA;;EAEAT,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACD,MAAM,GAAG;MACVG,CAAC,EAAE,CAAC,IAAI,CAACJ,WAAW,CAACI,CAAC,GAAG,IAAI,CAACL,MAAM,CAACK,CAAC,IAAI,CAAC;MAC3CD,CAAC,EAAE,CAAC,IAAI,CAACH,WAAW,CAACG,CAAC,GAAG,IAAI,CAACJ,MAAM,CAACI,CAAC,IAAI;IAC9C,CAAC;IACD,IAAI,CAACJ,MAAM,GAAG;MACVI,CAAC,EAAE,IAAI,CAACJ,MAAM,CAACI,CAAC,GAAG,IAAI,CAACF,MAAM,CAACE,CAAC;MAChCC,CAAC,EAAE,IAAI,CAACL,MAAM,CAACK,CAAC,GAAG,IAAI,CAACH,MAAM,CAACG;IACnC,CAAC;EACL;AACJ;AAEA,MAAMQ,SAAS,SAAS1G,KAAK,CAAC;EAC1ByC,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAAC,CAAC;IACP,IAAIC,IAAI,GAAG,IAAI;MACXgE,UAAU,GAAGjE,OAAO,CAACoB,IAAI,KAAK,GAAG;IAErC,MAAM8C,WAAW,GAAID,UAAU,GAAG,YAAY,GAAG,UAAW;IAC5D,MAAME,OAAO,GAAGxG,aAAa,CAAC,oCAAoC,GAAGuG,WAAW,GAAG,gBAAgB,CAAC;IAEpGrF,MAAM,CAACoB,IAAI,EAAED,OAAO,EAAE;MAClBmE,OAAO,EAAEA,OAAO;MAChBC,WAAW,EAAE,CAAC;MACd5D,OAAO,EAAE,IAAI/B,OAAO,CAAC0F,OAAO,CAAC;MAC7BE,aAAa,EAAErE,OAAO,CAACQ,OAAO;MAC9B8D,aAAa,EAAEtE,OAAO,CAACsE,aAAa;MACpCC,IAAI,EAAEN,UAAU,GAAG,OAAO,GAAG;IACjC,CAAC,CAAC;IAEFhE,IAAI,CAACoE,aAAa,CAAClE,IAAI,CAACT,MAAM,EAAEO,IAAI,CAACuE,OAAO,CAACrE,IAAI,CAACF,IAAI,CAAC,CAAC;IAExDA,IAAI,CAACwE,SAAS,CAACC,WAAW,CAACP,OAAO,CAAC;IAEnC,IAAInE,OAAO,CAACsE,aAAa,EAAE;MACvBrE,IAAI,CAAC0E,IAAI,CAAC,CAAC;IACf;EACJ;EAEAH,OAAOA,CAAA,EAAG;IACN,IAAIvE,IAAI,GAAG,IAAI;MACXmB,IAAI,GAAGnB,IAAI,CAACmB,IAAI;MAChBW,SAAS,GAAG9B,IAAI,CAAC8B,SAAS;MAC1B6C,QAAQ,GAAG7C,SAAS,CAACwC,IAAI;MACzBF,aAAa,GAAGpE,IAAI,CAACoE,aAAa;MAClCQ,SAAS,GAAGD,QAAQ,GAAG7C,SAAS,CAAC+C,KAAK;MACtCC,QAAQ,GAAG9F,IAAI,CAAC+F,KAAK,CAAC,CAACX,aAAa,CAACjD,IAAI,CAAC,GAAGyD,SAAS,CAAC;MACvDN,IAAI,GAAGtF,IAAI,CAAC+F,KAAK,CAACJ,QAAQ,GAAGC,SAAS,CAAC;IAC3C,IAAIA,SAAS,IAAI,CAAC,EAAE;MAChB,IAAI,CAACV,OAAO,CAACc,KAAK,CAACC,OAAO,GAAG,MAAM;IACvC,CAAC,MAAM;MACH,IAAI,CAACf,OAAO,CAACc,KAAK,CAACC,OAAO,GAAG,EAAE;IACnC;IACA,IAAIH,QAAQ,GAAGR,IAAI,GAAGK,QAAQ,EAAE;MAC5BL,IAAI,GAAGK,QAAQ,GAAGG,QAAQ;IAC9B,CAAC,MAAM,IAAIA,QAAQ,GAAG,CAAC,EAAE;MACrBR,IAAI,IAAIQ,QAAQ;MAChBA,QAAQ,GAAG,CAAC;IAChB;IACA,IAAI9E,IAAI,CAACmE,WAAW,KAAKG,IAAI,EAAE;MAC3BtE,IAAI,CAACkE,OAAO,CAACc,KAAK,CAAChF,IAAI,CAACsE,IAAI,CAAC,GAAGA,IAAI,GAAG,IAAI;MAC3CtE,IAAI,CAACmE,WAAW,GAAGG,IAAI;IAC3B;IACAtE,IAAI,CAACO,OAAO,CAACkC,QAAQ,CAACtB,IAAI,EAAE2D,QAAQ,CAAC;EACzC;EAEAJ,IAAIA,CAAA,EAAG;IACH,IAAI,CAACR,OAAO,CAACc,KAAK,CAACE,OAAO,GAAGhG,iBAAiB;IAC9C,IAAI,CAACgF,OAAO,CAACc,KAAK,CAACG,UAAU,GAAG,SAAS;EAC7C;EAEAC,IAAIA,CAAA,EAAG;IACH,IAAI,CAAC,IAAI,CAACf,aAAa,EAAE;MACrB,IAAI,CAACH,OAAO,CAACc,KAAK,CAACE,OAAO,GAAG,CAAC;IAClC;EACJ;AACJ;;AAEA;AACA,OAAO,MAAMG,QAAQ,SAAS1G,UAAU,CAAC;EACrCmB,WAAWA,CAACoE,OAAO,EAAEnE,OAAO,EAAE;IAC1B,KAAK,CAAC,CAAC;IACP,IAAIC,IAAI,GAAG,IAAI;IACf,IAAI,CAACkE,OAAO,GAAGA,OAAO;IAEtB,IAAI,CAACoB,YAAY,CAACvF,OAAO,CAAC;IAE1B,MAAMwF,YAAY,GAAGzH,kBAAkB,CAAC0H,SAAS,CAACC,SAAS,CAAC;IAC5DzF,IAAI,CAAC0F,OAAO,GAAG1F,IAAI,CAACD,OAAO,CAAC4F,SAAS,IAAIJ,YAAY;IACrD,MAAMK,YAAY,GAAGlI,aAAa,CAAC,iCAAiC,CAAC;IAErE,IAAIsC,IAAI,CAAC0F,OAAO,EAAE;MACdnI,QAAQ,CAAC2G,OAAO,EAAE,oBAAoB,CAAC;MACvCvG,OAAO,CAACiI,YAAY,EAAE1B,OAAO,CAAC;MAE9BtF,MAAM,CAACoB,IAAI,EAAE;QACT6F,aAAa,EAAE3B,OAAO;QACtB4B,cAAc,EAAE5B,OAAO,CAAC6B,QAAQ,CAAC,CAAC;MACtC,CAAC,CAAC;MAEF;IACJ;IAEA7B,OAAO,CAACc,KAAK,CAACgB,QAAQ,GAAG,QAAQ;IACjCzI,QAAQ,CAAC2G,OAAO,EAAE,mBAAmB,CAAC;IAEtC,MAAM+B,eAAe,GAAGvI,aAAa,CAAC,oCAAoC,CAAC;IAC3EE,SAAS,CAACsG,OAAO,EAAE+B,eAAe,CAAC;IACnCtI,OAAO,CAACiI,YAAY,EAAE1B,OAAO,CAAC;IAE9B,IAAIgC,KAAK,GAAGhC,OAAO,CAAC6B,QAAQ,CAAC,CAAC,CAAC;MAC3B3F,UAAU,GAAG,IAAI3B,UAAU,CAACyF,OAAO,CAAC;MACpC3D,OAAO,GAAG,IAAI/B,OAAO,CAAC0H,KAAK,CAAC;MAE5BzF,UAAU,GAAG,IAAIlC,cAAc,CAAC;QAC5B2F,OAAO,EAAEgC,KAAK;QACd1B,SAAS,EAAEN,OAAO;QAClBiC,aAAa,EAAEnG,IAAI,CAACD,OAAO,CAACqG;MAChC,CAAC,CAAC;MACFC,cAAc,GAAG,IAAI,CAACtG,OAAO,CAACsG,cAAc;MAE5CpG,UAAU,GAAG,IAAIvB,UAAU,CAACwF,OAAO,EAAE;QACjCoC,WAAW,EAAE,OAAO;QACpBC,OAAO,EAAE,IAAI;QACbC,cAAc,EAAE,IAAI;QACpBC,gBAAgB,EAAE,IAAI;QACtBC,gBAAgB,EAAE,IAAI;QACtBC,UAAU,EAAE3G,IAAI,CAACD,OAAO,CAACqG,IAAI;QAC7BQ,gBAAgB,EAAE5G,IAAI,CAACD,OAAO,CAAC6G,gBAAgB;QAC/CzG,KAAKA,CAAC0B,CAAC,EAAE;UACLpB,UAAU,CAAC8D,OAAO,CAAC,CAAC;UACpB,IAAIsC,SAAS,GAAG9H,GAAG,CAAC8C,CAAC,CAAC0B,CAAC,CAAC3B,QAAQ,CAAC;YAC7BkF,SAAS,GAAG/H,GAAG,CAAC8C,CAAC,CAACyB,CAAC,CAAC1B,QAAQ,CAAC;YAC7BmF,eAAe,GAAGF,SAAS,GAAG,CAAC,IAAIC,SAAS;YAC5CE,4BAA4B,GAAGnJ,QAAQ,CAACmC,IAAI,CAAC8F,cAAc,EAAEjE,CAAC,CAACoF,KAAK,CAACC,MAAM,CAAC;YAC5EC,aAAa,GAAGL,SAAS,GAAG,CAAC,IAAID,SAAS;UAC9C,IAAI,CAACG,4BAA4B,IAAI,CAACX,cAAc,CAACxE,CAAC,CAAC,IAAI7B,IAAI,CAACM,OAAO,KAAKG,UAAU,CAAC8C,CAAC,CAACjD,OAAO,IAAIyG,eAAe,IAAItG,UAAU,CAAC6C,CAAC,CAAChD,OAAO,IAAI6G,aAAa,CAAC,EAAE;YAC3JlH,UAAU,CAACmH,OAAO,CAAC,CAAC;UACxB,CAAC,MAAM;YACHnH,UAAU,CAACI,MAAM,CAAC,CAAC;UACvB;QACJ;MACJ,CAAC,CAAC;MAEFgH,IAAI,GAAG,IAAI/I,IAAI,CAAC;QACZiC,OAAO,EAAEA,OAAO;QAChBE,UAAU,EAAEA,UAAU;QACtBR,UAAU,EAAEA,UAAU;QACtBuC,OAAO,EAAExC,IAAI,CAACD,OAAO,CAACyC;MAC1B,CAAC,CAAC;MAEF8E,YAAY,GAAG,IAAIzH,YAAY,CAAC;QAC5BU,OAAO,EAAEA,OAAO;QAChBE,UAAU,EAAEA,UAAU;QACtBR,UAAU,EAAEA,UAAU;QACtBG,UAAU,EAAEA;MAChB,CAAC,CAAC;MAEFmH,gBAAgB,GAAG,IAAItE,gBAAgB,CAAC;QACpCJ,MAAMA,CAAC2E,WAAW,EAAE;UAChBxH,IAAI,CAACyH,QAAQ,CAACD,WAAW,CAACjE,CAAC,EAAEiE,WAAW,CAAClE,CAAC,CAAC;QAC/C;MACJ,CAAC,CAAC;IAEN/C,OAAO,CAACL,IAAI,CAACT,MAAM,EAAE,YAAW;MAC5BO,IAAI,CAAC0H,SAAS,GAAG,CAACnH,OAAO,CAAC+C,CAAC;MAC3BtD,IAAI,CAAC2H,UAAU,GAAG,CAACpH,OAAO,CAACgD,CAAC;MAC5BvD,IAAI,CAAC4H,OAAO,CAACjI,MAAM,EAAE;QACjB+H,SAAS,EAAE1H,IAAI,CAAC0H,SAAS;QACzBC,UAAU,EAAE3H,IAAI,CAAC2H;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,IAAI3H,IAAI,CAACD,OAAO,CAAC8H,mBAAmB,EAAE;MAClC,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACC,YAAY,CAAC7H,IAAI,CAAC,IAAI,CAAC;MACvDnC,EAAE,CAACmG,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC4D,mBAAmB,CAAC;IAClD;IAEAlJ,MAAM,CAACoB,IAAI,EAAE;MACTO,OAAO,EAAEA,OAAO;MAChBE,UAAU,EAAEA,UAAU;MACtB6G,YAAY,EAAEA,YAAY;MAC1BC,gBAAgB,EAAEA,gBAAgB;MAClCtH,UAAU,EAAEA,UAAU;MACtBoH,IAAI,EAAEA,IAAI;MACVjH,UAAU,EAAEA,UAAU;MACtB4H,MAAM,EAAE,KAAK;MACb1H,OAAO,EAAE,IAAI;MACbuF,aAAa,EAAEK,KAAK;MACpBwB,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACb7B,cAAc,EAAE5B,OAAO,CAAC6B,QAAQ,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF/F,IAAI,CAACiI,SAAS,CAAC,GAAG,CAAC;IACnBjI,IAAI,CAACiI,SAAS,CAAC,GAAG,CAAC;IAEnBjI,IAAI,CAACkI,SAAS,GAAG,YAAW;MACxBlI,IAAI,CAACmI,MAAM,GAAG,KAAK;MACnBnI,IAAI,CAACC,UAAU,CAAC0C,GAAG,CAAC,CAAC,EAAE3C,IAAI,CAACoI,OAAO,CAAC;IACxC,CAAC;IAED3H,UAAU,CAAC8D,OAAO,CAAC,CAAC;IAEpB,IAAIvE,IAAI,CAACD,OAAO,CAACsI,aAAa,EAAE;MAC5BrI,IAAI,CAACsI,kBAAkB,CAAC,CAAC;IAC7B;EACJ;EAEAhD,YAAYA,CAACvF,OAAO,EAAE;IAClB,IAAI,CAACA,OAAO,GAAGzC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAACyC,OAAO,EAAEA,OAAO,CAAC;EACxD;EAEAgI,YAAYA,CAAClG,CAAC,EAAE;IACZ,IAAIA,CAAC,CAAC0G,OAAO,EAAE;MACX;IACJ;IACA,IAAI,CAAC,IAAI,CAACJ,MAAM,EAAE;MACd,IAAI,CAACA,MAAM,GAAG,IAAI;MAClB,IAAI,CAACC,OAAO,GAAG,CAAC;MAChB,IAAI,CAACnI,UAAU,CAACuI,KAAK,CAAC,CAAC,EAAE,IAAI,CAACJ,OAAO,CAAC;IAC1C;IAEAK,YAAY,CAAC,IAAI,CAACC,aAAa,CAAC;IAChC,IAAI,CAACA,aAAa,GAAGC,UAAU,CAAC,IAAI,CAACT,SAAS,EAAE,EAAE,CAAC;IACnD,IAAI3F,KAAK,GAAGrE,WAAW,CAAC2D,CAAC,CAAC;IAE1B,IAAIU,KAAK,EAAE;MACP,IAAI,CAAC6F,OAAO,IAAI7F,KAAK;MACrB,IAAI,CAACtC,UAAU,CAAC2I,IAAI,CAAC,CAAC,EAAE,IAAI,CAACR,OAAO,CAAC;IACzC;IAEAvG,CAAC,CAACgH,cAAc,CAAC,CAAC;EACtB;EAEAC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACrI,UAAU,CAAC6C,CAAC,CAACwF,WAAW,CAAC,CAAC;EACnC;EAEAC,WAAWA,CAAC/G,GAAG,EAAEI,GAAG,EAAE;IAClB,IAAI,CAAC3B,UAAU,CAAC6C,CAAC,CAACyF,WAAW,CAAC/G,GAAG,EAAEI,GAAG,CAAC;EAC3C;EAEA4G,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAACvI,UAAU,CAAC6C,CAAC,CAACgB,IAAI;EACjC;EAEA2E,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACpD,aAAa,CAACoD,YAAY;EAC1C;EAEAC,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACrD,aAAa,CAACqD,WAAW;EACzC;EAEAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACzD,OAAO,EAAE;MACf,IAAI,CAAC0D,cAAc,CAAC,CAAC;IACzB;EACJ;EAEAC,UAAUA,CAACtJ,OAAO,EAAE;IAChB,IAAIC,IAAI,GAAG,IAAI;IAEf,IAAI,CAACsF,YAAY,CAACvF,OAAO,CAAC;IAE1B,IAAIA,OAAO,CAACsI,aAAa,EAAE;MACvBrI,IAAI,CAACsI,kBAAkB,CAAC,CAAC;IAC7B;EACJ;EAEAgB,KAAKA,CAAA,EAAG;IACJ,IAAI,IAAI,CAAC5D,OAAO,EAAE;MACd,IAAI,CAACG,aAAa,CAAC6B,SAAS,CAAC,CAAC,CAAC;IACnC,CAAC,MAAM;MACH,IAAI,CAACnH,OAAO,CAACsC,MAAM,CAAC;QAChBU,CAAC,EAAE,CAAC;QACJD,CAAC,EAAE;MACP,CAAC,CAAC;MACF,IAAI,CAACiG,MAAM,CAAC,CAAC,CAAC;IAClB;EACJ;EAEAH,cAAcA,CAAA,EAAG;IACb,IAAI,CAAC3I,UAAU,CAAC8D,OAAO,CAAC,CAAC;IACzB,IAAI,IAAI,CAAC8C,IAAI,CAAC9D,CAAC,CAAC7B,WAAW,CAAC,CAAC,EAAE;MAC3B,IAAI,CAACnB,OAAO,CAACkC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAChC,UAAU,CAAC8C,CAAC,CAACvB,GAAG,CAAC;IACrD;IACA,IAAI,IAAI,CAACqF,IAAI,CAAC/D,CAAC,CAAC5B,WAAW,CAAC,CAAC,EAAE;MAC3B,IAAI,CAACnB,OAAO,CAACkC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAChC,UAAU,CAAC6C,CAAC,CAACtB,GAAG,CAAC;IACrD;EACJ;EAEAwH,OAAOA,CAAA,EAAG;IACN,IAAI/I,UAAU,GAAG,IAAI,CAACA,UAAU;IAChCA,UAAU,CAAC8D,OAAO,CAAC,CAAC;IACpB,IAAI,CAACgF,MAAM,CAAC9I,UAAU,CAACgJ,QAAQ,CAAC;IAChC,IAAI,CAAClJ,OAAO,CAACsC,MAAM,CAACpC,UAAU,CAACiJ,iBAAiB,CAAC,CAAC,CAAC;EACvD;EAEAC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACrJ,OAAO,GAAG,IAAI;EACvB;EAEAsJ,OAAOA,CAAA,EAAG;IACN,IAAI,CAACtJ,OAAO,GAAG,KAAK;EACxB;EAEAmH,QAAQA,CAAClE,CAAC,EAAED,CAAC,EAAE;IACX,IAAI,IAAI,CAACoC,OAAO,EAAE;MACd,IAAI,CAACG,aAAa,CAAC8B,UAAU,CAAC5I,GAAG,CAACwE,CAAC,CAAC,CAAC;MACrC,IAAI,CAACsC,aAAa,CAAC6B,SAAS,CAAC3I,GAAG,CAACuE,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACH,IAAI,CAAC7C,UAAU,CAAC8D,OAAO,CAAC,CAAC;MACzB,IAAI,CAAChE,OAAO,CAACsC,MAAM,CAAC;QAChBU,CAAC,EAAEA,CAAC;QACJD,CAAC,EAAEA;MACP,CAAC,CAAC;IACN;EACJ;EAEAuG,gBAAgBA,CAACtG,CAAC,EAAED,CAAC,EAAEE,QAAQ,EAAE;IAC7B,IAAIG,IAAI,EAAEC,EAAE;IACZ,IAAI,IAAI,CAAC8B,OAAO,EAAE;MACd,IAAI,CAAC+B,QAAQ,CAAClE,CAAC,EAAED,CAAC,CAAC;IACvB,CAAC,MAAM;MACHK,IAAI,GAAG;QACHJ,CAAC,EAAE,IAAI,CAAChD,OAAO,CAACgD,CAAC;QACjBD,CAAC,EAAE,IAAI,CAAC/C,OAAO,CAAC+C;MACpB,CAAC;MACDM,EAAE,GAAG;QACDL,CAAC,EAAEA,CAAC;QACJD,CAAC,EAAEA;MACP,CAAC;MACD,IAAI,CAACiE,gBAAgB,CAAC7D,cAAc,CAACC,IAAI,EAAEC,EAAE,CAAC;MAC9C,IAAI,CAAC2D,gBAAgB,CAAC1D,WAAW,CAACL,QAAQ,CAAC;MAC3C,IAAI,CAAC+D,gBAAgB,CAACpH,KAAK,CAAC,CAAC;IACjC;EACJ;;EAEA;EACA2J,WAAWA,CAAA,EAAG;IACV;;IAEA;IACA;;IAEA;IACA;IACA;EAAA;EAGJC,OAAOA,CAAA,EAAG;IACN,MAAM7F,OAAO,GAAG,IAAI,CAACA,OAAO;IAE5BlG,GAAG,CAACkG,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC4D,mBAAmB,CAAC;IAE/C,IAAI,IAAI,CAAC7H,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAAC8J,OAAO,CAAC,CAAC;IAC7B;EACJ;EAEAR,MAAMA,CAAC/I,KAAK,EAAE;IACV,IAAI,CAACC,UAAU,CAACK,OAAO,CAACN,KAAK,CAAC;IAC9B,IAAI,CAACD,OAAO,CAACS,OAAO,CAACR,KAAK,CAAC;EAC/B;EAEA8H,kBAAkBA,CAAA,EAAG,CACrB;;EAEA;EACA0B,QAAQA,CAAA,EAAG;IACP;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;;IAEA;;IAEA;IACA;EAAA;;EAGJ;EACAC,WAAWA,CAAA,EAAG;IACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGJhC,SAASA,CAAC9G,IAAI,EAAE;IACZ,IAAInB,IAAI,GAAG,IAAI;MACXO,OAAO,GAAGP,IAAI,CAACO,OAAO;MACtBuB,SAAS,GAAG9B,IAAI,CAACS,UAAU,CAACU,IAAI,CAAC;MACjCf,UAAU,GAAGJ,IAAI,CAACI,UAAU;MAC5BqB,QAAQ,GAAGzB,IAAI,CAACqH,IAAI,CAAClG,IAAI,CAAC;MAC1B+I,SAAS,GAAG,IAAInG,SAAS,CAAC;QACtB5C,IAAI,EAAEA,IAAI;QACVZ,OAAO,EAAEA,OAAO;QAChBuB,SAAS,EAAEA,SAAS;QACpB0C,SAAS,EAAExE,IAAI,CAACkE,OAAO;QACvBG,aAAa,EAAErE,IAAI,CAACD,OAAO,CAACoK;MAChC,CAAC,CAAC;IAENrI,SAAS,CAAC5B,IAAI,CAACT,MAAM,EAAE,YAAW;MAC9ByK,SAAS,CAAC3F,OAAO,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF9C,QAAQ,CAACvB,IAAI,CAACT,MAAM,EAAE,YAAW;MAC7ByK,SAAS,CAACxF,IAAI,CAAC,CAAC;IACpB,CAAC,CAAC;IAEF1E,IAAI,CAACmB,IAAI,GAAG,SAAS,CAAC,GAAG,IAAIF,WAAW,CAAC;MACrCE,IAAI,EAAEA,IAAI;MACVM,QAAQ,EAAEA,QAAQ;MAClBlB,OAAO,EAAEA,OAAO;MAChBH,UAAU,EAAEA,UAAU;MACtBH,UAAU,EAAED,IAAI,CAACC,UAAU;MAC3B6B,SAAS,EAAEA,SAAS;MACpBU,OAAO,EAAExC,IAAI,CAACD,OAAO,CAACyC,OAAO;MAC7BF,QAAQ,EAAEtC,IAAI,CAACD,OAAO,CAACuC,QAAQ,IAAInD,QAAQ;MAC3C+C,kBAAkB,EAAElC,IAAI,CAACD,OAAO,CAACmC,kBAAkB,IAAI9C,mBAAmB;MAC1EuD,GAAGA,CAAA,EAAG;QACFuH,SAAS,CAAC9E,IAAI,CAAC,CAAC;QAChBpF,IAAI,CAAC4H,OAAO,CAAC,WAAW,EAAE;UACtBzG,IAAI,EAAEA,IAAI;UACVuG,SAAS,EAAE1H,IAAI,CAAC0H,SAAS;UACzBC,UAAU,EAAE3H,IAAI,CAAC2H;QACrB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;AACJ;AAEAlK,iBAAiB,CAAC4H,QAAQ,EAAE;EACxB+E,IAAI,EAAE,UAAU;EAChBhE,IAAI,EAAE,KAAK;EACXiE,UAAU,EAAE,GAAG;EACfF,kBAAkB,EAAE,KAAK;EACzB3H,OAAO,EAAE,IAAI;EACbmD,SAAS,EAAE,KAAK;EAChBkC,mBAAmB,EAAE,IAAI;EACzBxB,cAAcA,CAAA,EAAG;IACb,OAAO,KAAK;EAChB,CAAC;EACDgC,aAAa,EAAE,KAAK;EACpBiC,QAAQ,EAAE;IACNC,YAAY,EAAE,iBAAiB;IAC/BC,eAAe,EAAE,oBAAoB;IACrCC,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC;AAEFtM,gBAAgB,CAACkH,QAAQ,EAAE,CACvB7F,IAAI,EACJG,MAAM,EACND,MAAM,CACT,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}