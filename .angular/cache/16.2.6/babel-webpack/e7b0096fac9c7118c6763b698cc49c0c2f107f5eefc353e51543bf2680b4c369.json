{"ast":null,"code":"import Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementPadding, elementScale, elementSize, elementOffset } from '../util';\nconst events = [\"click\", \"mouseenter\", \"mouseleave\", \"mousemove\", \"resize\"];\nclass Surface extends Observable {\n  constructor(element, options) {\n    super();\n    this.options = Object.assign({}, options);\n    this.element = element;\n    this.element._kendoExportVisual = this.exportVisual.bind(this);\n    this._click = this._handler(\"click\");\n    this._mouseenter = this._handler(\"mouseenter\");\n    this._mouseleave = this._handler(\"mouseleave\");\n    this._mousemove = this._handler(\"mousemove\");\n    this._visual = new Group();\n    elementSize(element, this.options);\n    this.bind(events, this.options);\n    this._enableTracking();\n  }\n  draw(element) {\n    this._visual.children.push(element);\n  }\n  clear() {\n    this._visual.children = [];\n  }\n  destroy() {\n    this._visual = null;\n    this.element._kendoExportVisual = null;\n    this.unbind();\n  }\n  eventTarget(e) {\n    let domNode = eventElement(e);\n    let node;\n    while (!node && domNode) {\n      node = domNode._kendoNode;\n      if (domNode === this.element) {\n        break;\n      }\n      domNode = domNode.parentElement;\n    }\n    if (node) {\n      return node.srcElement;\n    }\n  }\n  exportVisual() {\n    return this._visual;\n  }\n  getSize() {\n    return elementSize(this.element);\n  }\n  currentSize(size) {\n    if (size) {\n      this._size = size;\n    } else {\n      return this._size;\n    }\n  }\n  setSize(size) {\n    elementSize(this.element, size);\n    this.currentSize(size);\n    this._resize();\n  }\n  resize(force) {\n    const size = this.getSize();\n    const currentSize = this.currentSize();\n    if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n      this.currentSize(size);\n      this._resize(size, force);\n      this.trigger(\"resize\", size);\n    }\n  }\n  size(value) {\n    if (!value) {\n      return this.getSize();\n    }\n    this.setSize(value);\n  }\n  suspendTracking() {\n    this._suspendedTracking = true;\n  }\n  resumeTracking() {\n    this._suspendedTracking = false;\n  }\n  _enableTracking() {}\n  _resize() {}\n  _handler(eventName) {\n    return e => {\n      const node = this.eventTarget(e);\n      if (node && !this._suspendedTracking) {\n        this.trigger(eventName, {\n          element: node,\n          originalEvent: e,\n          type: eventName\n        });\n      }\n    };\n  }\n  _elementOffset() {\n    const element = this.element;\n    const padding = elementPadding(element);\n    const {\n      left,\n      top\n    } = elementOffset(element);\n    return {\n      left: left + padding.left,\n      top: top + padding.top\n    };\n  }\n  _surfacePoint(e) {\n    const offset = this._elementOffset();\n    const coord = eventCoordinates(e);\n    const x = coord.x - offset.left;\n    const y = coord.y - offset.top;\n    const inverseTransform = elementScale(this.element).invert();\n    const point = new Point(x, y).transform(inverseTransform);\n    return point;\n  }\n}\nexport default Surface;","map":{"version":3,"names":["Group","Point","Observable","eventElement","eventCoordinates","elementPadding","elementScale","elementSize","elementOffset","events","Surface","constructor","element","options","Object","assign","_kendoExportVisual","exportVisual","bind","_click","_handler","_mouseenter","_mouseleave","_mousemove","_visual","_enableTracking","draw","children","push","clear","destroy","unbind","eventTarget","e","domNode","node","_kendoNode","parentElement","srcElement","getSize","currentSize","size","_size","setSize","_resize","resize","force","width","height","trigger","value","suspendTracking","_suspendedTracking","resumeTracking","eventName","originalEvent","type","_elementOffset","padding","left","top","_surfacePoint","offset","coord","x","y","inverseTransform","invert","point","transform"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/core/surface.js"],"sourcesContent":["import Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementPadding, elementScale, elementSize, elementOffset } from '../util';\n\nconst events = [\n    \"click\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"mousemove\",\n    \"resize\"\n];\n\nclass Surface extends Observable {\n    constructor(element, options) {\n        super();\n\n        this.options = Object.assign({}, options);\n        this.element = element;\n        this.element._kendoExportVisual = this.exportVisual.bind(this);\n\n        this._click = this._handler(\"click\");\n        this._mouseenter = this._handler(\"mouseenter\");\n        this._mouseleave = this._handler(\"mouseleave\");\n        this._mousemove = this._handler(\"mousemove\");\n\n        this._visual = new Group();\n\n        elementSize(element, this.options);\n\n        this.bind(events, this.options);\n\n        this._enableTracking();\n    }\n\n    draw(element) {\n        this._visual.children.push(element);\n    }\n\n    clear() {\n        this._visual.children = [];\n    }\n\n    destroy() {\n        this._visual = null;\n        this.element._kendoExportVisual = null;\n        this.unbind();\n    }\n\n    eventTarget(e) {\n        let domNode = eventElement(e);\n        let node;\n\n        while (!node && domNode) {\n            node = domNode._kendoNode;\n            if (domNode === this.element) {\n                break;\n            }\n\n            domNode = domNode.parentElement;\n        }\n\n        if (node) {\n            return node.srcElement;\n        }\n    }\n\n    exportVisual() {\n        return this._visual;\n    }\n\n    getSize() {\n        return elementSize(this.element);\n    }\n\n    currentSize(size) {\n        if (size) {\n            this._size = size;\n        } else {\n            return this._size;\n        }\n    }\n\n    setSize(size) {\n        elementSize(this.element, size);\n\n        this.currentSize(size);\n        this._resize();\n    }\n\n    resize(force) {\n        const size = this.getSize();\n        const currentSize = this.currentSize();\n\n        if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n            this.currentSize(size);\n            this._resize(size, force);\n            this.trigger(\"resize\", size);\n        }\n    }\n\n    size(value) {\n        if (!value) {\n            return this.getSize();\n        }\n\n        this.setSize(value);\n    }\n\n    suspendTracking() {\n        this._suspendedTracking = true;\n    }\n\n    resumeTracking() {\n        this._suspendedTracking = false;\n    }\n\n    _enableTracking() {}\n\n    _resize() {}\n\n    _handler(eventName) {\n        return (e) => {\n            const node = this.eventTarget(e);\n            if (node && !this._suspendedTracking) {\n                this.trigger(eventName, {\n                    element: node,\n                    originalEvent: e,\n                    type: eventName\n                });\n            }\n        };\n    }\n\n    _elementOffset() {\n        const element = this.element;\n        const padding = elementPadding(element);\n        const { left, top } = elementOffset(element);\n\n        return {\n            left: left + padding.left,\n            top: top + padding.top\n        };\n    }\n\n    _surfacePoint(e) {\n        const offset = this._elementOffset();\n        const coord = eventCoordinates(e);\n        const x = coord.x - offset.left;\n        const y = coord.y - offset.top;\n\n        const inverseTransform = elementScale(this.element).invert();\n        const point = new Point(\n            x,\n            y\n        ).transform(inverseTransform);\n\n        return point;\n    }\n}\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}