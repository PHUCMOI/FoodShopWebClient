{"ast":null,"code":"import { Login } from 'src/app/models/Login';\nimport { EventEmitter } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class LoginService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = environment.apiUrl;\n    this.isLoged = new EventEmitter(false);\n    this.isAdmin = new EventEmitter(false);\n  }\n  login(loginModel) {\n    return this.http.post(`${this.baseUrl}Users/Login`, loginModel);\n  }\n  signOut() {\n    localStorage.clear();\n    this.router.navigate(['login']);\n    this.isLoged.next(false);\n  }\n  storeToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  getinfo() {\n    let token = this.getToken();\n    if (token != null) {\n      let jwtData = token.split('.')[1];\n      let decodedJwtJsonData = window.atob(jwtData);\n      let decodedJwtData = JSON.parse(decodedJwtJsonData);\n      return decodedJwtData;\n    }\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { Login };","map":{"version":3,"names":["Login","EventEmitter","environment","LoginService","constructor","http","router","baseUrl","apiUrl","isLoged","isAdmin","login","loginModel","post","signOut","localStorage","clear","navigate","next","storeToken","token","setItem","getToken","getItem","isLoggedIn","getinfo","jwtData","split","decodedJwtJsonData","window","atob","decodedJwtData","JSON","parse","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Internship\\FoodShopUI\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport {Login} from 'src/app/models/Login';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\n\r\n@Injectable({\r\n    providedIn: 'root' \r\n  })\r\n\r\nexport class LoginService {\r\n    private baseUrl: string = environment.apiUrl;\r\n    public isLoged: EventEmitter<any> = new  EventEmitter(false);\r\n    public isAdmin: EventEmitter<any> = new  EventEmitter(false);\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    login(loginModel: Login){\r\n        return this.http.post<Login>(`${this.baseUrl}Users/Login`, loginModel);\r\n    }\r\n\r\n    signOut(){\r\n        localStorage.clear();\r\n        this.router.navigate(['login'])\r\n        this.isLoged.next(false);\r\n    }\r\n\r\n    storeToken(token : string){\r\n        localStorage.setItem('token', token);\r\n    }\r\n\r\n    getToken(){\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    isLoggedIn() : boolean{\r\n        return !!localStorage.getItem('token')\r\n    }\r\n\r\n    getinfo() {\r\n        let token = this.getToken();          \r\n        if(token != null){\r\n            let jwtData = token.split('.')[1];\r\n            let decodedJwtJsonData = window.atob(jwtData);\r\n            let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n            return decodedJwtData;            \r\n          }\r\n    }\r\n}   \r\n\r\nexport { Login };\r\n"],"mappings":"AAEA,SAAQA,KAAK,QAAO,sBAAsB;AAC1C,SAASC,YAAY,QAAoB,eAAe;AACxD,SAASC,WAAW,QAAQ,8BAA8B;;;;AAO1D,OAAM,MAAOC,YAAY;EAIrBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAH5C,KAAAC,OAAO,GAAWL,WAAW,CAACM,MAAM;IACrC,KAAAC,OAAO,GAAsB,IAAKR,YAAY,CAAC,KAAK,CAAC;IACrD,KAAAS,OAAO,GAAsB,IAAKT,YAAY,CAAC,KAAK,CAAC;EACI;EAEhEU,KAAKA,CAACC,UAAiB;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,GAAG,IAAI,CAACN,OAAO,aAAa,EAAEK,UAAU,CAAC;EAC1E;EAEAE,OAAOA,CAAA;IACHC,YAAY,CAACC,KAAK,EAAE;IACpB,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,KAAK,CAAC;EAC5B;EAEAC,UAAUA,CAACC,KAAc;IACrBL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;EACxC;EAEAE,QAAQA,CAAA;IACJ,OAAOP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;EACxC;EAEAC,UAAUA,CAAA;IACN,OAAO,CAAC,CAACT,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;EAC1C;EAEAE,OAAOA,CAAA;IACH,IAAIL,KAAK,GAAG,IAAI,CAACE,QAAQ,EAAE;IAC3B,IAAGF,KAAK,IAAI,IAAI,EAAC;MACb,IAAIM,OAAO,GAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACjC,IAAIC,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC;MAC7C,IAAIK,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,kBAAkB,CAAC;MACnD,OAAOG,cAAc;;EAE7B;EAAC,QAAAG,CAAA,G;qBApCQ/B,YAAY,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZtC,YAAY;IAAAuC,OAAA,EAAZvC,YAAY,CAAAwC,IAAA;IAAAC,UAAA,EAHT;EAAM;;AA0CtB,SAAS5C,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}