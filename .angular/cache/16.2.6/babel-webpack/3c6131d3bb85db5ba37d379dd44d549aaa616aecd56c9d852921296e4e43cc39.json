{"ast":null,"code":"import { Chart } from '../chart';\nimport Navigator from './navigator';\nimport { DEFAULT_WIDTH } from '../common/constants';\nimport { addClass, deepExtend, elementSize, grep, setDefaultOptions } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\nconst AUTO_CATEGORY_WIDTH = 28;\nclass StockChart extends Chart {\n  applyDefaults(options, themeOptions) {\n    const width = elementSize(this.element).width || DEFAULT_WIDTH;\n    let theme = themeOptions;\n    const stockDefaults = {\n      seriesDefaults: {\n        categoryField: options.dateField\n      },\n      axisDefaults: {\n        categoryAxis: {\n          name: \"default\",\n          majorGridLines: {\n            visible: false\n          },\n          labels: {\n            step: 2\n          },\n          majorTicks: {\n            visible: false\n          },\n          maxDateGroups: Math.floor(width / AUTO_CATEGORY_WIDTH)\n        }\n      }\n    };\n    if (theme) {\n      theme = deepExtend({}, theme, stockDefaults);\n    }\n    Navigator.setup(options, theme);\n    super.applyDefaults(options, theme);\n  }\n  _setElementClass(element) {\n    addClass(element, 'k-chart k-stockchart');\n  }\n  setOptions(options) {\n    this.destroyNavigator();\n    super.setOptions(options);\n  }\n  noTransitionsRedraw() {\n    const transitions = this.options.transitions;\n    this.options.transitions = false;\n    this._fullRedraw();\n    this.options.transitions = transitions;\n  }\n  _resize() {\n    this.noTransitionsRedraw();\n  }\n  _redraw() {\n    const navigator = this.navigator;\n    if (!this._dirty() && navigator && navigator.options.partialRedraw) {\n      navigator.redrawSlaves();\n    } else {\n      this._fullRedraw();\n    }\n  }\n  _dirty() {\n    const options = this.options;\n    const series = [].concat(options.series, options.navigator.series);\n    const seriesCount = grep(series, function (s) {\n      return s && s.visible;\n    }).length;\n    const dirty = this._seriesCount !== seriesCount;\n    this._seriesCount = seriesCount;\n    return dirty;\n  }\n  _fullRedraw() {\n    let navigator = this.navigator;\n    if (!navigator) {\n      navigator = this.navigator = new Navigator(this);\n      this.trigger(\"navigatorCreated\", {\n        navigator: navigator\n      });\n    }\n    navigator.clean();\n    navigator.setRange();\n    super._redraw();\n    navigator.initSelection();\n  }\n  _trackSharedTooltip(coords) {\n    const plotArea = this._plotArea;\n    const pane = plotArea.paneByPoint(coords);\n    if (pane && pane.options.name === NAVIGATOR_PANE) {\n      this._unsetActivePoint();\n    } else {\n      super._trackSharedTooltip(coords);\n    }\n  }\n  bindCategories() {\n    super.bindCategories();\n    this.copyNavigatorCategories();\n  }\n  copyNavigatorCategories() {\n    const definitions = [].concat(this.options.categoryAxis);\n    let categories;\n    for (let axisIx = 0; axisIx < definitions.length; axisIx++) {\n      const axis = definitions[axisIx];\n      if (axis.name === NAVIGATOR_AXIS) {\n        categories = axis.categories;\n      } else if (categories && axis.pane === NAVIGATOR_PANE) {\n        axis.categories = categories;\n      }\n    }\n  }\n  destroyNavigator() {\n    if (this.navigator) {\n      this.navigator.destroy();\n      this.navigator = null;\n    }\n  }\n  destroy() {\n    this.destroyNavigator();\n    super.destroy();\n  }\n  _stopChartHandlers(e) {\n    const coords = this._eventCoordinates(e);\n    const pane = this._plotArea.paneByPoint(coords);\n    return super._stopChartHandlers(e) || pane && pane.options.name === NAVIGATOR_PANE;\n  }\n  _toggleDragZoomEvents() {\n    if (!this._dragZoomEnabled) {\n      this.element.style.touchAction = \"none\";\n      this._dragZoomEnabled = true;\n    }\n  }\n}\nsetDefaultOptions(StockChart, {\n  dateField: \"date\",\n  axisDefaults: {\n    categoryAxis: {\n      type: \"date\",\n      baseUnit: \"fit\",\n      justified: true\n    },\n    valueAxis: {\n      narrowRange: true,\n      labels: {\n        format: \"C\"\n      }\n    }\n  },\n  navigator: {\n    select: {},\n    seriesDefaults: {\n      markers: {\n        visible: false\n      },\n      tooltip: {\n        visible: false\n      },\n      highlight: {\n        visible: false\n      },\n      line: {\n        width: 2\n      }\n    },\n    hint: {},\n    visible: true\n  },\n  tooltip: {\n    visible: true\n  },\n  legend: {\n    visible: false\n  }\n});\nexport default StockChart;","map":{"version":3,"names":["Chart","Navigator","DEFAULT_WIDTH","addClass","deepExtend","elementSize","grep","setDefaultOptions","NAVIGATOR_AXIS","NAVIGATOR_PANE","AUTO_CATEGORY_WIDTH","StockChart","applyDefaults","options","themeOptions","width","element","theme","stockDefaults","seriesDefaults","categoryField","dateField","axisDefaults","categoryAxis","name","majorGridLines","visible","labels","step","majorTicks","maxDateGroups","Math","floor","setup","_setElementClass","setOptions","destroyNavigator","noTransitionsRedraw","transitions","_fullRedraw","_resize","_redraw","navigator","_dirty","partialRedraw","redrawSlaves","series","concat","seriesCount","s","length","dirty","_seriesCount","trigger","clean","setRange","initSelection","_trackSharedTooltip","coords","plotArea","_plotArea","pane","paneByPoint","_unsetActivePoint","bindCategories","copyNavigatorCategories","definitions","categories","axisIx","axis","destroy","_stopChartHandlers","e","_eventCoordinates","_toggleDragZoomEvents","_dragZoomEnabled","style","touchAction","type","baseUnit","justified","valueAxis","narrowRange","format","select","markers","tooltip","highlight","line","hint","legend"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/stock/stock-chart.js"],"sourcesContent":["import { Chart } from '../chart';\n\nimport Navigator from './navigator';\nimport { DEFAULT_WIDTH } from '../common/constants';\nimport { addClass, deepExtend, elementSize, grep, setDefaultOptions } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\n\nconst AUTO_CATEGORY_WIDTH = 28;\n\nclass StockChart extends Chart {\n\n    applyDefaults(options, themeOptions) {\n        const width = elementSize(this.element).width || DEFAULT_WIDTH;\n        let theme = themeOptions;\n\n        const stockDefaults = {\n            seriesDefaults: {\n                categoryField: options.dateField\n            },\n            axisDefaults: {\n                categoryAxis: {\n                    name: \"default\",\n                    majorGridLines: {\n                        visible: false\n                    },\n                    labels: {\n                        step: 2\n                    },\n                    majorTicks: {\n                        visible: false\n                    },\n                    maxDateGroups: Math.floor(width / AUTO_CATEGORY_WIDTH)\n                }\n            }\n        };\n\n        if (theme) {\n            theme = deepExtend({}, theme, stockDefaults);\n        }\n\n        Navigator.setup(options, theme);\n\n        super.applyDefaults(options, theme);\n    }\n\n    _setElementClass(element) {\n        addClass(element, 'k-chart k-stockchart');\n    }\n\n    setOptions(options) {\n        this.destroyNavigator();\n        super.setOptions(options);\n    }\n\n    noTransitionsRedraw() {\n        const transitions = this.options.transitions;\n\n        this.options.transitions = false;\n        this._fullRedraw();\n        this.options.transitions = transitions;\n    }\n\n    _resize() {\n        this.noTransitionsRedraw();\n    }\n\n    _redraw() {\n        const navigator = this.navigator;\n\n        if (!this._dirty() && navigator && navigator.options.partialRedraw) {\n            navigator.redrawSlaves();\n        } else {\n            this._fullRedraw();\n        }\n    }\n\n    _dirty() {\n        const options = this.options;\n        const series = [].concat(options.series, options.navigator.series);\n        const seriesCount = grep(series, function(s) { return s && s.visible; }).length;\n        const dirty = this._seriesCount !== seriesCount;\n        this._seriesCount = seriesCount;\n\n        return dirty;\n    }\n\n    _fullRedraw() {\n        let navigator = this.navigator;\n\n        if (!navigator) {\n            navigator = this.navigator = new Navigator(this);\n            this.trigger(\"navigatorCreated\", { navigator: navigator });\n        }\n\n        navigator.clean();\n        navigator.setRange();\n\n        super._redraw();\n\n        navigator.initSelection();\n    }\n\n    _trackSharedTooltip(coords) {\n        const plotArea = this._plotArea;\n        const pane = plotArea.paneByPoint(coords);\n\n        if (pane && pane.options.name === NAVIGATOR_PANE) {\n            this._unsetActivePoint();\n        } else {\n            super._trackSharedTooltip(coords);\n        }\n    }\n\n    bindCategories() {\n        super.bindCategories();\n        this.copyNavigatorCategories();\n    }\n\n    copyNavigatorCategories() {\n        const definitions = [].concat(this.options.categoryAxis);\n        let categories;\n\n        for (let axisIx = 0; axisIx < definitions.length; axisIx++) {\n            const axis = definitions[axisIx];\n            if (axis.name === NAVIGATOR_AXIS) {\n                categories = axis.categories;\n            } else if (categories && axis.pane === NAVIGATOR_PANE) {\n                axis.categories = categories;\n            }\n        }\n    }\n\n    destroyNavigator() {\n        if (this.navigator) {\n            this.navigator.destroy();\n            this.navigator = null;\n        }\n    }\n\n    destroy() {\n        this.destroyNavigator();\n        super.destroy();\n    }\n\n    _stopChartHandlers(e) {\n        const coords = this._eventCoordinates(e);\n        const pane = this._plotArea.paneByPoint(coords);\n\n        return super._stopChartHandlers(e) || (pane && pane.options.name === NAVIGATOR_PANE);\n    }\n\n    _toggleDragZoomEvents() {\n        if (!this._dragZoomEnabled) {\n            this.element.style.touchAction = \"none\";\n\n            this._dragZoomEnabled = true;\n        }\n    }\n}\n\nsetDefaultOptions(StockChart, {\n    dateField: \"date\",\n    axisDefaults: {\n        categoryAxis: {\n            type: \"date\",\n            baseUnit: \"fit\",\n            justified: true\n        },\n        valueAxis: {\n            narrowRange: true,\n            labels: {\n                format: \"C\"\n            }\n        }\n    },\n    navigator: {\n        select: {},\n        seriesDefaults: {\n            markers: {\n                visible: false\n            },\n            tooltip: {\n                visible: false\n            },\n            highlight: {\n                visible: false\n            },\n            line: {\n                width: 2\n            }\n        },\n        hint: {},\n        visible: true\n    },\n    tooltip: {\n        visible: true\n    },\n    legend: {\n        visible: false\n    }\n});\n\nexport default StockChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}