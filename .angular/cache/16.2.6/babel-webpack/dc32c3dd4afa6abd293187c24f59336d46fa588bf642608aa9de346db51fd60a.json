{"ast":null,"code":"import filterSeriesByType from '../utils/filter-series-by-type';\nimport { Class } from '../../common';\nimport { TRENDLINE_SERIES } from '../constants';\nclass PlotAreaFactory extends Class {\n  constructor() {\n    super();\n    this._registry = [];\n  }\n  register(type, seriesTypes) {\n    this._registry.push({\n      type: type,\n      seriesTypes: seriesTypes\n    });\n  }\n  create(srcSeries, options, chartService) {\n    const registry = this._registry;\n    let match = registry[0];\n    let series;\n    for (let idx = 0; idx < registry.length; idx++) {\n      const entry = registry[idx];\n      series = filterSeriesByType(srcSeries, entry.seriesTypes);\n      const trendlines = filterSeriesByType(srcSeries, TRENDLINE_SERIES);\n      if (series.length - trendlines.length > 0) {\n        match = entry;\n        break;\n      }\n    }\n    return new match.type(series, options, chartService);\n  }\n}\nPlotAreaFactory.current = new PlotAreaFactory();\nexport default PlotAreaFactory;","map":{"version":3,"names":["filterSeriesByType","Class","TRENDLINE_SERIES","PlotAreaFactory","constructor","_registry","register","type","seriesTypes","push","create","srcSeries","options","chartService","registry","match","series","idx","length","entry","trendlines","current"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/plotarea/plotarea-factory.js"],"sourcesContent":["import filterSeriesByType from '../utils/filter-series-by-type';\nimport { Class } from '../../common';\nimport { TRENDLINE_SERIES } from '../constants';\n\nclass PlotAreaFactory extends Class {\n\n    constructor() {\n        super();\n\n        this._registry = [];\n    }\n\n    register(type, seriesTypes) {\n        this._registry.push({\n            type: type,\n            seriesTypes: seriesTypes\n        });\n    }\n\n    create(srcSeries, options, chartService) {\n        const registry = this._registry;\n        let match = registry[0];\n        let series;\n\n        for (let idx = 0; idx < registry.length; idx++) {\n            const entry = registry[idx];\n            series = filterSeriesByType(srcSeries, entry.seriesTypes);\n            const trendlines = filterSeriesByType(srcSeries, TRENDLINE_SERIES);\n\n            if ((series.length - trendlines.length) > 0) {\n                match = entry;\n                break;\n            }\n        }\n\n        return new match.type(series, options, chartService);\n    }\n}\n\nPlotAreaFactory.current = new PlotAreaFactory();\n\nexport default PlotAreaFactory;\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,gCAAgC;AAC/D,SAASC,KAAK,QAAQ,cAAc;AACpC,SAASC,gBAAgB,QAAQ,cAAc;AAE/C,MAAMC,eAAe,SAASF,KAAK,CAAC;EAEhCG,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,SAAS,GAAG,EAAE;EACvB;EAEAC,QAAQA,CAACC,IAAI,EAAEC,WAAW,EAAE;IACxB,IAAI,CAACH,SAAS,CAACI,IAAI,CAAC;MAChBF,IAAI,EAAEA,IAAI;MACVC,WAAW,EAAEA;IACjB,CAAC,CAAC;EACN;EAEAE,MAAMA,CAACC,SAAS,EAAEC,OAAO,EAAEC,YAAY,EAAE;IACrC,MAAMC,QAAQ,GAAG,IAAI,CAACT,SAAS;IAC/B,IAAIU,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAAC;IACvB,IAAIE,MAAM;IAEV,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,QAAQ,CAACI,MAAM,EAAED,GAAG,EAAE,EAAE;MAC5C,MAAME,KAAK,GAAGL,QAAQ,CAACG,GAAG,CAAC;MAC3BD,MAAM,GAAGhB,kBAAkB,CAACW,SAAS,EAAEQ,KAAK,CAACX,WAAW,CAAC;MACzD,MAAMY,UAAU,GAAGpB,kBAAkB,CAACW,SAAS,EAAET,gBAAgB,CAAC;MAElE,IAAKc,MAAM,CAACE,MAAM,GAAGE,UAAU,CAACF,MAAM,GAAI,CAAC,EAAE;QACzCH,KAAK,GAAGI,KAAK;QACb;MACJ;IACJ;IAEA,OAAO,IAAIJ,KAAK,CAACR,IAAI,CAACS,MAAM,EAAEJ,OAAO,EAAEC,YAAY,CAAC;EACxD;AACJ;AAEAV,eAAe,CAACkB,OAAO,GAAG,IAAIlB,eAAe,CAAC,CAAC;AAE/C,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}