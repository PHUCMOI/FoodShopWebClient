{"ast":null,"code":"import CategoricalChart from '../categorical-chart';\nimport BarChart from '../bar-chart/bar-chart';\nimport Bullet from './bullet';\nimport ClusterLayout from '../layout/cluster-layout';\nimport { BAR } from '../constants';\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { deepExtend, defined, isArray, isFunction, isObject, setDefaultOptions } from '../../common';\nclass BulletChart extends CategoricalChart {\n  constructor(plotArea, options) {\n    wrapData(options);\n    super(plotArea, options);\n  }\n  reflowCategories(categorySlots) {\n    const children = this.children;\n    const childrenLength = children.length;\n    for (let i = 0; i < childrenLength; i++) {\n      children[i].reflow(categorySlots[i]);\n    }\n  }\n  plotRange(point) {\n    const series = point.series;\n    const valueAxis = this.seriesValueAxis(series);\n    const axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n    return [axisCrossingValue, point.value.current || axisCrossingValue];\n  }\n  createPoint(data, fields) {\n    const {\n      categoryIx,\n      series\n    } = fields;\n    const {\n      options,\n      children\n    } = this;\n    const value = data.valueFields;\n    let bulletOptions = deepExtend({\n      vertical: !options.invertAxes,\n      overlay: series.overlay,\n      categoryIx: categoryIx,\n      invertAxes: options.invertAxes\n    }, series);\n    let color = data.fields.color || series.color;\n    bulletOptions = this.evalPointOptions(bulletOptions, value, fields);\n    if (isFunction(series.color)) {\n      color = bulletOptions.color;\n    }\n    const bullet = new Bullet(value, bulletOptions);\n    bullet.color = color;\n    let cluster = children[categoryIx];\n    if (!cluster) {\n      cluster = new ClusterLayout({\n        vertical: options.invertAxes,\n        gap: options.gap,\n        spacing: options.spacing,\n        rtl: !options.invertAxes && (this.chartService || {}).rtl\n      });\n      this.append(cluster);\n    }\n    cluster.append(bullet);\n    return bullet;\n  }\n  updateRange(value, fields) {\n    const {\n      current,\n      target\n    } = value;\n    const axisName = fields.series.axis;\n    let axisRange = this.valueAxisRanges[axisName];\n    if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n      axisRange = this.valueAxisRanges[axisName] = axisRange || {\n        min: MAX_VALUE,\n        max: MIN_VALUE\n      };\n      axisRange.min = Math.min(axisRange.min, current, target);\n      axisRange.max = Math.max(axisRange.max, current, target);\n    }\n  }\n  formatPointValue(point, format) {\n    return this.chartService.format.auto(format, point.value.current, point.value.target);\n  }\n  pointValue(data) {\n    return data.valueFields.current;\n  }\n  aboveAxis(point) {\n    const value = point.value.current;\n    return value > 0;\n  }\n  createAnimation() {\n    const points = this.points;\n    this._setAnimationOptions();\n    for (let idx = 0; idx < points.length; idx++) {\n      const point = points[idx];\n      point.options.animation = this.options.animation;\n      point.createAnimation();\n    }\n  }\n}\nBulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\nsetDefaultOptions(BulletChart, {\n  animation: {\n    type: BAR\n  }\n});\nfunction wrapData(options) {\n  const series = options.series;\n  for (let i = 0; i < series.length; i++) {\n    const seriesItem = series[i];\n    const data = seriesItem.data;\n    if (data && !isArray(data[0]) && !isObject(data[0])) {\n      seriesItem.data = [data];\n    }\n  }\n}\nexport default BulletChart;","map":{"version":3,"names":["CategoricalChart","BarChart","Bullet","ClusterLayout","BAR","MIN_VALUE","MAX_VALUE","deepExtend","defined","isArray","isFunction","isObject","setDefaultOptions","BulletChart","constructor","plotArea","options","wrapData","reflowCategories","categorySlots","children","childrenLength","length","i","reflow","plotRange","point","series","valueAxis","seriesValueAxis","axisCrossingValue","categoryAxisCrossingValue","value","current","createPoint","data","fields","categoryIx","valueFields","bulletOptions","vertical","invertAxes","overlay","color","evalPointOptions","bullet","cluster","gap","spacing","rtl","chartService","append","updateRange","target","axisName","axis","axisRange","valueAxisRanges","isNaN","min","max","Math","formatPointValue","format","auto","pointValue","aboveAxis","createAnimation","points","_setAnimationOptions","idx","animation","prototype","type","seriesItem"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/bullet-chart/bullet-chart.js"],"sourcesContent":["\nimport CategoricalChart from '../categorical-chart';\nimport BarChart from '../bar-chart/bar-chart';\nimport Bullet from './bullet';\nimport ClusterLayout from '../layout/cluster-layout';\nimport { BAR } from '../constants';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { deepExtend, defined, isArray, isFunction, isObject, setDefaultOptions } from '../../common';\n\nclass BulletChart extends CategoricalChart {\n    constructor(plotArea, options) {\n\n        wrapData(options);\n\n        super(plotArea, options);\n    }\n\n    reflowCategories(categorySlots) {\n        const children = this.children;\n        const childrenLength = children.length;\n\n        for (let i = 0; i < childrenLength; i++) {\n            children[i].reflow(categorySlots[i]);\n        }\n    }\n\n    plotRange(point) {\n        const series = point.series;\n        const valueAxis = this.seriesValueAxis(series);\n        const axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n\n        return [ axisCrossingValue, point.value.current || axisCrossingValue ];\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, series } = fields;\n        const { options, children } = this;\n        const value = data.valueFields;\n\n        let bulletOptions = deepExtend({\n            vertical: !options.invertAxes,\n            overlay: series.overlay,\n            categoryIx: categoryIx,\n            invertAxes: options.invertAxes\n        }, series);\n\n        let color = data.fields.color || series.color;\n        bulletOptions = this.evalPointOptions(bulletOptions, value, fields);\n        if (isFunction(series.color)) {\n            color = bulletOptions.color;\n        }\n\n        const bullet = new Bullet(value, bulletOptions);\n        bullet.color = color;\n\n        let cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing,\n                rtl: !options.invertAxes && (this.chartService || {}).rtl\n            });\n            this.append(cluster);\n        }\n\n        cluster.append(bullet);\n\n        return bullet;\n    }\n\n    updateRange(value, fields) {\n        const { current, target } = value;\n        const axisName = fields.series.axis;\n        let axisRange = this.valueAxisRanges[axisName];\n\n        if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n            axisRange = this.valueAxisRanges[axisName] =\n                axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            axisRange.min = Math.min(axisRange.min, current, target);\n            axisRange.max = Math.max(axisRange.max, current, target);\n        }\n    }\n\n    formatPointValue(point, format) {\n        return this.chartService.format.auto(format, point.value.current, point.value.target);\n    }\n\n    pointValue(data) {\n        return data.valueFields.current;\n    }\n\n    aboveAxis(point) {\n        const value = point.value.current;\n\n        return value > 0;\n    }\n\n    createAnimation() {\n        const points = this.points;\n\n        this._setAnimationOptions();\n\n        for (let idx = 0; idx < points.length; idx++) {\n            const point = points[idx];\n            point.options.animation = this.options.animation;\n            point.createAnimation();\n        }\n    }\n}\n\nBulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n\nsetDefaultOptions(BulletChart, {\n    animation: {\n        type: BAR\n    }\n});\n\nfunction wrapData(options) {\n    const series = options.series;\n\n    for (let i = 0; i < series.length; i++) {\n        const seriesItem = series[i];\n        const data = seriesItem.data;\n        if (data && !isArray(data[0]) && !isObject(data[0])) {\n            seriesItem.data = [ data ];\n        }\n    }\n}\n\nexport default BulletChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}