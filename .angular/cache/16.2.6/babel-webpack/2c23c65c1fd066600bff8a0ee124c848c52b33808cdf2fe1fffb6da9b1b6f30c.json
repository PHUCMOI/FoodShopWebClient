{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport { ChartElement, Point, Box } from '../../core';\nimport { FADEIN, INITIAL_ANIMATION_DURATION } from '../constants';\nimport { setDefaultOptions, alignPathToPixel } from '../../common';\nconst DEFAULT_ERROR_BAR_WIDTH = 4;\nclass ErrorBarBase extends ChartElement {\n  constructor(low, high, isVertical, chart, series, options) {\n    super(options);\n    this.low = low;\n    this.high = high;\n    this.isVertical = isVertical;\n    this.chart = chart;\n    this.series = series;\n  }\n  reflow(targetBox) {\n    const endCaps = this.options.endCaps;\n    const isVertical = this.isVertical;\n    const axis = this.getAxis();\n    const valueBox = axis.getSlot(this.low, this.high);\n    const centerBox = targetBox.center();\n    const capsWidth = this.getCapsWidth(targetBox, isVertical);\n    const capValue = isVertical ? centerBox.x : centerBox.y;\n    const capStart = capValue - capsWidth;\n    const capEnd = capValue + capsWidth;\n    let linePoints;\n    if (isVertical) {\n      linePoints = [new Point(centerBox.x, valueBox.y1), new Point(centerBox.x, valueBox.y2)];\n      if (endCaps) {\n        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n      }\n      this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n    } else {\n      linePoints = [new Point(valueBox.x1, centerBox.y), new Point(valueBox.x2, centerBox.y)];\n      if (endCaps) {\n        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n      }\n      this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n    }\n    this.linePoints = linePoints;\n  }\n  getCapsWidth(box, isVertical) {\n    const boxSize = isVertical ? box.width() : box.height();\n    const capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n    return capsWidth;\n  }\n  createVisual() {\n    const options = this.options;\n    const visual = options.visual;\n    if (visual) {\n      this.visual = visual({\n        low: this.low,\n        high: this.high,\n        rect: this.box.toRect(),\n        sender: this.getSender(),\n        options: {\n          endCaps: options.endCaps,\n          color: options.color,\n          line: options.line\n        },\n        createVisual: () => {\n          this.createDefaultVisual();\n          const defaultVisual = this.visual;\n          delete this.visual;\n          return defaultVisual;\n        }\n      });\n    } else {\n      this.createDefaultVisual();\n    }\n  }\n  createDefaultVisual() {\n    const {\n      options,\n      linePoints\n    } = this;\n    const lineOptions = {\n      stroke: {\n        color: options.color,\n        width: options.line.width,\n        dashType: options.line.dashType\n      }\n    };\n    super.createVisual();\n    for (let idx = 0; idx < linePoints.length; idx += 2) {\n      const line = new draw.Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n      alignPathToPixel(line);\n      this.visual.append(line);\n    }\n  }\n}\nsetDefaultOptions(ErrorBarBase, {\n  animation: {\n    type: FADEIN,\n    delay: INITIAL_ANIMATION_DURATION\n  },\n  endCaps: true,\n  line: {\n    width: 2\n  },\n  zIndex: 1\n});\nexport default ErrorBarBase;","map":{"version":3,"names":["drawing","draw","ChartElement","Point","Box","FADEIN","INITIAL_ANIMATION_DURATION","setDefaultOptions","alignPathToPixel","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","constructor","low","high","isVertical","chart","series","options","reflow","targetBox","endCaps","axis","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","x","y","capStart","capEnd","linePoints","y1","y2","push","box","x1","x2","boxSize","width","height","Math","min","floor","createVisual","visual","rect","toRect","sender","getSender","color","line","createDefaultVisual","defaultVisual","lineOptions","stroke","dashType","idx","length","Path","moveTo","lineTo","append","animation","type","delay","zIndex"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/error-bars/error-bar-base.js"],"sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement, Point, Box } from '../../core';\n\nimport { FADEIN, INITIAL_ANIMATION_DURATION } from '../constants';\n\nimport { setDefaultOptions, alignPathToPixel } from '../../common';\n\nconst DEFAULT_ERROR_BAR_WIDTH = 4;\n\nclass ErrorBarBase extends ChartElement {\n    constructor(low, high, isVertical, chart, series, options) {\n        super(options);\n\n        this.low = low;\n        this.high = high;\n        this.isVertical = isVertical;\n        this.chart = chart;\n        this.series = series;\n    }\n\n    reflow(targetBox) {\n        const endCaps = this.options.endCaps;\n        const isVertical = this.isVertical;\n        const axis = this.getAxis();\n        const valueBox = axis.getSlot(this.low, this.high);\n        const centerBox = targetBox.center();\n        const capsWidth = this.getCapsWidth(targetBox, isVertical);\n        const capValue = isVertical ? centerBox.x : centerBox.y;\n        const capStart = capValue - capsWidth;\n        const capEnd = capValue + capsWidth;\n        let linePoints;\n\n        if (isVertical) {\n            linePoints = [\n                new Point(centerBox.x, valueBox.y1),\n                new Point(centerBox.x, valueBox.y2)\n            ];\n            if (endCaps) {\n                linePoints.push(new Point(capStart, valueBox.y1),\n                    new Point(capEnd, valueBox.y1),\n                    new Point(capStart, valueBox.y2),\n                    new Point(capEnd, valueBox.y2));\n            }\n            this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n        } else {\n            linePoints = [\n                new Point(valueBox.x1, centerBox.y),\n                new Point(valueBox.x2, centerBox.y)\n            ];\n            if (endCaps) {\n                linePoints.push(new Point(valueBox.x1, capStart),\n                    new Point(valueBox.x1, capEnd),\n                    new Point(valueBox.x2, capStart),\n                    new Point(valueBox.x2, capEnd));\n            }\n            this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n        }\n\n        this.linePoints = linePoints;\n    }\n\n    getCapsWidth(box, isVertical) {\n        const boxSize = isVertical ? box.width() : box.height();\n        const capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n\n        return capsWidth;\n    }\n\n    createVisual() {\n        const options = this.options;\n        const visual = options.visual;\n\n        if (visual) {\n            this.visual = visual({\n                low: this.low,\n                high: this.high,\n                rect: this.box.toRect(),\n                sender: this.getSender(),\n                options: {\n                    endCaps: options.endCaps,\n                    color: options.color,\n                    line: options.line\n                },\n                createVisual: () => {\n                    this.createDefaultVisual();\n                    const defaultVisual = this.visual;\n                    delete this.visual;\n                    return defaultVisual;\n                }\n            });\n        } else {\n            this.createDefaultVisual();\n        }\n    }\n\n    createDefaultVisual() {\n        const { options, linePoints } = this;\n        const lineOptions = {\n            stroke: {\n                color: options.color,\n                width: options.line.width,\n                dashType: options.line.dashType\n            }\n        };\n\n        super.createVisual();\n\n        for (let idx = 0; idx < linePoints.length; idx += 2) {\n            const line = new draw.Path(lineOptions)\n                .moveTo(linePoints[idx].x, linePoints[idx].y)\n                .lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n\n            alignPathToPixel(line);\n            this.visual.append(line);\n        }\n    }\n}\n\nsetDefaultOptions(ErrorBarBase, {\n    animation: {\n        type: FADEIN,\n        delay: INITIAL_ANIMATION_DURATION\n    },\n    endCaps: true,\n    line: {\n        width: 2\n    },\n    zIndex: 1\n});\n\nexport default ErrorBarBase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}