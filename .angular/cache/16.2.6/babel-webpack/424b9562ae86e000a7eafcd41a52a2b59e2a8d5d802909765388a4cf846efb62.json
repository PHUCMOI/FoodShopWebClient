{"ast":null,"code":"/* eslint-disable */\n/**\n * @hidden\n */\nexport var ResultType;\n(function (ResultType) {\n  ResultType[ResultType[\"Literal\"] = 0] = \"Literal\";\n  ResultType[ResultType[\"Mask\"] = 1] = \"Mask\";\n  // eslint-disable-next-line id-denylist\n  ResultType[ResultType[\"Undefined\"] = 2] = \"Undefined\";\n})(ResultType || (ResultType = {}));\n/**\n * @hidden\n */\nexport class Result {\n  constructor(value, rest, type = ResultType.Undefined) {\n    this.value = value;\n    this.rest = rest;\n    this.type = type;\n  }\n  //map :: Functor f => f a ~> (a -> b) -> f b\n  map(fn) {\n    return new Result(fn(this.value), this.rest);\n  }\n  //chain :: Chain m => m a ~> (a -> m b) -> m b\n  chain(fn) {\n    return fn(this.value, this.rest);\n  }\n  fold(s, _ /*we don't need it*/) {\n    return s(this.value, this.rest);\n  }\n  concat(r) {\n    return this.map((vs, _) => r.chain((v, __) => vs.concat([v])));\n  }\n  toString() {\n    return `Result({ value: '${this.value}', rest: ${this.rest} })`;\n  }\n}","map":{"version":3,"names":["ResultType","Result","constructor","value","rest","type","Undefined","map","fn","chain","fold","s","_","concat","r","vs","v","__","toString"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-inputs-common/dist/es2015/maskedtextbox/parsing/result.js"],"sourcesContent":["/* eslint-disable */\n/**\n * @hidden\n */\nexport var ResultType;\n(function (ResultType) {\n    ResultType[ResultType[\"Literal\"] = 0] = \"Literal\";\n    ResultType[ResultType[\"Mask\"] = 1] = \"Mask\";\n    // eslint-disable-next-line id-denylist\n    ResultType[ResultType[\"Undefined\"] = 2] = \"Undefined\";\n})(ResultType || (ResultType = {}));\n/**\n * @hidden\n */\nexport class Result {\n    constructor(value, rest, type = ResultType.Undefined) {\n        this.value = value;\n        this.rest = rest;\n        this.type = type;\n    }\n    //map :: Functor f => f a ~> (a -> b) -> f b\n    map(fn) {\n        return new Result(fn(this.value), this.rest);\n    }\n    //chain :: Chain m => m a ~> (a -> m b) -> m b\n    chain(fn) {\n        return fn(this.value, this.rest);\n    }\n    fold(s, _ /*we don't need it*/) {\n        return s(this.value, this.rest);\n    }\n    concat(r) {\n        return this.map((vs, _) => r.chain((v, __) => vs.concat([v])));\n    }\n    toString() {\n        return `Result({ value: '${this.value}', rest: ${this.rest} })`;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,IAAIA,UAAU;AACrB,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAACA,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACjDA,UAAU,CAACA,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC3C;EACAA,UAAU,CAACA,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;AACzD,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;AACA;AACA;AACA,OAAO,MAAMC,MAAM,CAAC;EAChBC,WAAWA,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,GAAGL,UAAU,CAACM,SAAS,EAAE;IAClD,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACpB;EACA;EACAE,GAAGA,CAACC,EAAE,EAAE;IACJ,OAAO,IAAIP,MAAM,CAACO,EAAE,CAAC,IAAI,CAACL,KAAK,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC;EAChD;EACA;EACAK,KAAKA,CAACD,EAAE,EAAE;IACN,OAAOA,EAAE,CAAC,IAAI,CAACL,KAAK,EAAE,IAAI,CAACC,IAAI,CAAC;EACpC;EACAM,IAAIA,CAACC,CAAC,EAAEC,CAAC,CAAC,sBAAsB;IAC5B,OAAOD,CAAC,CAAC,IAAI,CAACR,KAAK,EAAE,IAAI,CAACC,IAAI,CAAC;EACnC;EACAS,MAAMA,CAACC,CAAC,EAAE;IACN,OAAO,IAAI,CAACP,GAAG,CAAC,CAACQ,EAAE,EAAEH,CAAC,KAAKE,CAAC,CAACL,KAAK,CAAC,CAACO,CAAC,EAAEC,EAAE,KAAKF,EAAE,CAACF,MAAM,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE;EACAE,QAAQA,CAAA,EAAG;IACP,OAAQ,oBAAmB,IAAI,CAACf,KAAM,YAAW,IAAI,CAACC,IAAK,KAAI;EACnE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}