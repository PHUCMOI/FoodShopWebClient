{"ast":null,"code":"import getField from './utils/get-field';\nimport { VALUE } from '../common/constants';\nimport { Class, defined } from '../common';\nclass SeriesBinder extends Class {\n  constructor() {\n    super();\n    this._valueFields = {};\n    this._otherFields = {};\n    this._nullValue = {};\n    this._undefinedValue = {};\n  }\n  register(seriesTypes, valueFields = [VALUE], otherFields = {}) {\n    for (let i = 0; i < seriesTypes.length; i++) {\n      const type = seriesTypes[i];\n      this._valueFields[type] = valueFields;\n      this._otherFields[type] = otherFields;\n      this._nullValue[type] = this._makeValue(valueFields, null);\n      this._undefinedValue[type] = this._makeValue(valueFields, undefined);\n    }\n  }\n  canonicalFields(series) {\n    return this.valueFields(series).concat(this.otherFields(series));\n  }\n  valueFields(series) {\n    return this._valueFields[series.type] || [VALUE];\n  }\n  otherFields(series) {\n    return this._otherFields[series.type] || [VALUE];\n  }\n  bindPoint(series, pointIx, item) {\n    const data = series.data;\n    const pointData = defined(item) ? item : data[pointIx];\n    const result = {\n      valueFields: {\n        value: pointData\n      }\n    };\n    const valueFields = this.valueFields(series);\n    const otherFields = this._otherFields[series.type];\n    let fields, value;\n    if (pointData === null) {\n      value = this._nullValue[series.type];\n    } else if (!defined(pointData)) {\n      value = this._undefinedValue[series.type];\n    } else if (Array.isArray(pointData)) {\n      const fieldData = pointData.slice(valueFields.length);\n      value = this._bindFromArray(pointData, valueFields);\n      fields = this._bindFromArray(fieldData, otherFields);\n    } else if (typeof pointData === \"object\") {\n      const srcValueFields = this.sourceFields(series, valueFields);\n      const srcPointFields = this.sourceFields(series, otherFields);\n      value = this._bindFromObject(pointData, valueFields, srcValueFields);\n      fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n    }\n    if (defined(value)) {\n      if (valueFields.length === 1) {\n        result.valueFields.value = value[valueFields[0]];\n      } else {\n        result.valueFields = value;\n      }\n    }\n    result.fields = fields || {};\n    return result;\n  }\n  _makeValue(fields, initialValue) {\n    const value = {};\n    const length = fields.length;\n    for (let i = 0; i < length; i++) {\n      const fieldName = fields[i];\n      value[fieldName] = initialValue;\n    }\n    return value;\n  }\n  _bindFromArray(array, fields) {\n    const value = {};\n    if (fields) {\n      const length = Math.min(fields.length, array.length);\n      for (let i = 0; i < length; i++) {\n        value[fields[i]] = array[i];\n      }\n    }\n    return value;\n  }\n  _bindFromObject(object, fields, srcFields = fields) {\n    const value = {};\n    if (fields) {\n      const length = fields.length;\n      for (let i = 0; i < length; i++) {\n        const fieldName = fields[i];\n        const srcFieldName = srcFields[i];\n        if (srcFieldName !== null) {\n          value[fieldName] = getField(srcFieldName, object);\n        }\n      }\n    }\n    return value;\n  }\n  sourceFields(series, canonicalFields) {\n    const sourceFields = [];\n    if (canonicalFields) {\n      const length = canonicalFields.length;\n      for (let i = 0; i < length; i++) {\n        const fieldName = canonicalFields[i];\n        const sourceFieldName = fieldName === VALUE ? \"field\" : fieldName + \"Field\";\n        sourceFields.push(series[sourceFieldName] !== null ? series[sourceFieldName] || fieldName : null);\n      }\n    }\n    return sourceFields;\n  }\n}\nSeriesBinder.current = new SeriesBinder();\nexport default SeriesBinder;","map":{"version":3,"names":["getField","VALUE","Class","defined","SeriesBinder","constructor","_valueFields","_otherFields","_nullValue","_undefinedValue","register","seriesTypes","valueFields","otherFields","i","length","type","_makeValue","undefined","canonicalFields","series","concat","bindPoint","pointIx","item","data","pointData","result","value","fields","Array","isArray","fieldData","slice","_bindFromArray","srcValueFields","sourceFields","srcPointFields","_bindFromObject","initialValue","fieldName","array","Math","min","object","srcFields","srcFieldName","sourceFieldName","push","current"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/series-binder.js"],"sourcesContent":["import getField from './utils/get-field';\nimport { VALUE } from '../common/constants';\nimport { Class, defined } from '../common';\n\nclass SeriesBinder extends Class {\n\n    constructor() {\n        super();\n\n        this._valueFields = {};\n        this._otherFields = {};\n        this._nullValue = {};\n        this._undefinedValue = {};\n    }\n\n    register(seriesTypes, valueFields = [ VALUE ], otherFields = {}) {\n\n        for (let i = 0; i < seriesTypes.length; i++) {\n            const type = seriesTypes[i];\n\n            this._valueFields[type] = valueFields;\n            this._otherFields[type] = otherFields;\n            this._nullValue[type] = this._makeValue(valueFields, null);\n            this._undefinedValue[type] = this._makeValue(valueFields, undefined);\n        }\n    }\n\n    canonicalFields(series) {\n        return this.valueFields(series).concat(this.otherFields(series));\n    }\n\n    valueFields(series) {\n        return this._valueFields[series.type] || [ VALUE ];\n    }\n\n    otherFields(series) {\n        return this._otherFields[series.type] || [ VALUE ];\n    }\n\n    bindPoint(series, pointIx, item) {\n        const data = series.data;\n        const pointData = defined(item) ? item : data[pointIx];\n        const result = { valueFields: { value: pointData } };\n        const valueFields = this.valueFields(series);\n        const otherFields = this._otherFields[series.type];\n        let fields, value;\n\n        if (pointData === null) {\n            value = this._nullValue[series.type];\n        } else if (!defined(pointData)) {\n            value = this._undefinedValue[series.type];\n        } else if (Array.isArray(pointData)) {\n            const fieldData = pointData.slice(valueFields.length);\n            value = this._bindFromArray(pointData, valueFields);\n            fields = this._bindFromArray(fieldData, otherFields);\n        } else if (typeof pointData === \"object\") {\n            const srcValueFields = this.sourceFields(series, valueFields);\n            const srcPointFields = this.sourceFields(series, otherFields);\n\n            value = this._bindFromObject(pointData, valueFields, srcValueFields);\n            fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n        }\n\n        if (defined(value)) {\n            if (valueFields.length === 1) {\n                result.valueFields.value = value[valueFields[0]];\n            } else {\n                result.valueFields = value;\n            }\n        }\n\n        result.fields = fields || {};\n\n        return result;\n    }\n\n    _makeValue(fields, initialValue) {\n        const value = {};\n        const length = fields.length;\n\n        for (let i = 0; i < length; i++) {\n            const fieldName = fields[i];\n            value[fieldName] = initialValue;\n        }\n\n        return value;\n    }\n\n    _bindFromArray(array, fields) {\n        const value = {};\n\n        if (fields) {\n            const length = Math.min(fields.length, array.length);\n\n            for (let i = 0; i < length; i++) {\n                value[fields[i]] = array[i];\n            }\n        }\n\n        return value;\n    }\n\n    _bindFromObject(object, fields, srcFields = fields) {\n        const value = {};\n\n        if (fields) {\n            const length = fields.length;\n\n            for (let i = 0; i < length; i++) {\n                const fieldName = fields[i];\n                const srcFieldName = srcFields[i];\n                if (srcFieldName !== null) {\n                    value[fieldName] = getField(srcFieldName, object);\n                }\n            }\n        }\n\n        return value;\n    }\n\n    sourceFields(series, canonicalFields) {\n        const sourceFields = [];\n\n        if (canonicalFields) {\n            const length = canonicalFields.length;\n\n            for (let i = 0; i < length; i++) {\n                const fieldName = canonicalFields[i];\n                const sourceFieldName = fieldName === VALUE ? \"field\" : fieldName + \"Field\";\n\n                sourceFields.push(series[sourceFieldName] !== null ? (series[sourceFieldName] || fieldName) : null);\n            }\n        }\n\n        return sourceFields;\n    }\n}\n\nSeriesBinder.current = new SeriesBinder();\n\nexport default SeriesBinder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}