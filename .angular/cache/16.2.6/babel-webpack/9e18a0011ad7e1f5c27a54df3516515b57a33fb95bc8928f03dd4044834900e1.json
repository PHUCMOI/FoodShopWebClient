{"ast":null,"code":"import Element from './element';\nimport traversable from '../mixins/traversable';\nimport { append } from '../util';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\nclass Group extends traversable(Element, \"children\") {\n  get nodeType() {\n    return \"Group\";\n  }\n  constructor(options) {\n    super(options);\n    this.children = [];\n  }\n  childrenChange(action, items, index) {\n    this.trigger(\"childrenChange\", {\n      action: action,\n      items: items,\n      index: index\n    });\n  }\n  append() {\n    append(this.children, arguments);\n    this._reparent(arguments, this);\n    this.childrenChange(\"add\", arguments);\n    return this;\n  }\n  insert(index, element) {\n    this.children.splice(index, 0, element);\n    element.parent = this;\n    this.childrenChange(\"add\", [element], index);\n    return this;\n  }\n  insertAt(element, index) {\n    return this.insert(index, element);\n  }\n  remove(element) {\n    const index = this.children.indexOf(element);\n    if (index >= 0) {\n      this.children.splice(index, 1);\n      element.parent = null;\n      this.childrenChange(\"remove\", [element], index);\n    }\n    return this;\n  }\n  removeAt(index) {\n    if (0 <= index && index < this.children.length) {\n      let element = this.children[index];\n      this.children.splice(index, 1);\n      element.parent = null;\n      this.childrenChange(\"remove\", [element], index);\n    }\n    return this;\n  }\n  clear() {\n    const items = this.children;\n    this.children = [];\n    this._reparent(items, null);\n    this.childrenChange(\"remove\", items, 0);\n    return this;\n  }\n  bbox(transformation) {\n    return elementsBoundingBox(this.children, true, this.currentTransform(transformation));\n  }\n  rawBBox() {\n    return elementsBoundingBox(this.children, false);\n  }\n  _clippedBBox(transformation) {\n    return elementsClippedBoundingBox(this.children, this.currentTransform(transformation));\n  }\n  currentTransform(transformation) {\n    return Element.prototype.currentTransform.call(this, transformation) || null;\n  }\n  containsPoint(point, parentTransform) {\n    if (this.visible()) {\n      const children = this.children;\n      const transform = this.currentTransform(parentTransform);\n      for (let idx = 0; idx < children.length; idx++) {\n        if (children[idx].containsPoint(point, transform)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  _reparent(elements, newParent) {\n    for (let i = 0; i < elements.length; i++) {\n      const child = elements[i];\n      const parent = child.parent;\n      if (parent && parent !== this && parent.remove) {\n        parent.remove(child);\n      }\n      child.parent = newParent;\n    }\n  }\n}\nexport default Group;","map":{"version":3,"names":["Element","traversable","append","elementsBoundingBox","elementsClippedBoundingBox","Group","nodeType","constructor","options","children","childrenChange","action","items","index","trigger","arguments","_reparent","insert","element","splice","parent","insertAt","remove","indexOf","removeAt","length","clear","bbox","transformation","currentTransform","rawBBox","_clippedBBox","prototype","call","containsPoint","point","parentTransform","visible","transform","idx","elements","newParent","i","child"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/shapes/group.js"],"sourcesContent":["import Element from './element';\nimport traversable from '../mixins/traversable';\nimport { append } from '../util';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\n\n\nclass Group extends traversable(Element, \"children\") {\n    get nodeType() {\n        return \"Group\";\n    }\n\n    constructor(options) {\n        super(options);\n        this.children = [];\n    }\n\n    childrenChange(action, items, index) {\n        this.trigger(\"childrenChange\",{\n            action: action,\n            items: items,\n            index: index\n        });\n    }\n\n    append() {\n        append(this.children, arguments);\n        this._reparent(arguments, this);\n\n        this.childrenChange(\"add\", arguments);\n\n        return this;\n    }\n\n    insert(index, element) {\n        this.children.splice(index, 0, element);\n        element.parent = this;\n\n        this.childrenChange(\"add\", [ element ], index);\n\n        return this;\n    }\n\n    insertAt(element, index) {\n        return this.insert(index, element);\n    }\n\n    remove(element) {\n        const index = this.children.indexOf(element);\n        if (index >= 0) {\n            this.children.splice(index, 1);\n            element.parent = null;\n            this.childrenChange(\"remove\", [ element ], index);\n        }\n\n        return this;\n    }\n\n    removeAt(index) {\n        if (0 <= index && index < this.children.length) {\n            let element = this.children[index];\n            this.children.splice(index, 1);\n            element.parent = null;\n            this.childrenChange(\"remove\", [ element ], index);\n        }\n\n        return this;\n    }\n\n    clear() {\n        const items = this.children;\n        this.children = [];\n        this._reparent(items, null);\n\n        this.childrenChange(\"remove\", items, 0);\n\n        return this;\n    }\n\n    bbox(transformation) {\n        return elementsBoundingBox(this.children, true, this.currentTransform(transformation));\n    }\n\n    rawBBox() {\n        return elementsBoundingBox(this.children, false);\n    }\n\n    _clippedBBox(transformation) {\n        return elementsClippedBoundingBox(this.children, this.currentTransform(transformation));\n    }\n\n    currentTransform(transformation) {\n        return Element.prototype.currentTransform.call(this, transformation) || null;\n    }\n\n    containsPoint(point, parentTransform) {\n        if (this.visible()) {\n            const children = this.children;\n            const transform = this.currentTransform(parentTransform);\n            for (let idx = 0; idx < children.length; idx++) {\n                if (children[idx].containsPoint(point, transform)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    _reparent(elements, newParent) {\n        for (let i = 0; i < elements.length; i++) {\n            const child = elements[i];\n            const parent = child.parent;\n            if (parent && parent !== this && parent.remove) {\n                parent.remove(child);\n            }\n\n            child.parent = newParent;\n        }\n    }\n}\n\nexport default Group;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}