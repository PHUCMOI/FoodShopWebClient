{"ast":null,"code":"import translateToPoint from './translate-to-point';\nimport stackElements from './stack-elements';\nfunction getStacks(elements, rect, sizeField) {\n  const maxSize = rect.size[sizeField];\n  const stacks = [];\n  let stack = [];\n  let stackSize = 0;\n  let element, bbox;\n  const addElementToStack = function () {\n    stack.push({\n      element: element,\n      bbox: bbox\n    });\n  };\n  for (let idx = 0; idx < elements.length; idx++) {\n    element = elements[idx];\n    bbox = element.clippedBBox();\n    if (bbox) {\n      let size = bbox.size[sizeField];\n      if (stackSize + size > maxSize) {\n        if (stack.length) {\n          stacks.push(stack);\n          stack = [];\n          addElementToStack();\n          stackSize = size;\n        } else {\n          addElementToStack();\n          stacks.push(stack);\n          stack = [];\n          stackSize = 0;\n        }\n      } else {\n        addElementToStack();\n        stackSize += size;\n      }\n    }\n  }\n  if (stack.length) {\n    stacks.push(stack);\n  }\n  return stacks;\n}\nexport default function wrapElements(elements, rect, axis, otherAxis, sizeField) {\n  const stacks = getStacks(elements, rect, sizeField);\n  const origin = rect.origin.clone();\n  const result = [];\n  for (let idx = 0; idx < stacks.length; idx++) {\n    let stack = stacks[idx];\n    let startElement = stack[0];\n    origin[otherAxis] = startElement.bbox.origin[otherAxis];\n    translateToPoint(origin, startElement.bbox, startElement.element);\n    startElement.bbox.origin[axis] = origin[axis];\n    stackElements(stack, axis, otherAxis, sizeField);\n    result.push([]);\n    for (let elementIdx = 0; elementIdx < stack.length; elementIdx++) {\n      result[idx].push(stack[elementIdx].element);\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["translateToPoint","stackElements","getStacks","elements","rect","sizeField","maxSize","size","stacks","stack","stackSize","element","bbox","addElementToStack","push","idx","length","clippedBBox","wrapElements","axis","otherAxis","origin","clone","result","startElement","elementIdx"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/alignment/wrap-elements.js"],"sourcesContent":["import translateToPoint from './translate-to-point';\nimport stackElements from './stack-elements';\n\nfunction getStacks(elements, rect, sizeField) {\n    const maxSize = rect.size[sizeField];\n    const stacks = [];\n    let stack = [];\n    let stackSize = 0;\n    let element, bbox;\n\n    const addElementToStack = function() {\n        stack.push({\n            element: element,\n            bbox: bbox\n        });\n    };\n\n    for (let idx = 0; idx < elements.length; idx++) {\n        element = elements[idx];\n\n        bbox = element.clippedBBox();\n        if (bbox) {\n            let size = bbox.size[sizeField];\n            if (stackSize + size > maxSize) {\n                if (stack.length) {\n                    stacks.push(stack);\n                    stack = [];\n                    addElementToStack();\n                    stackSize = size;\n                } else {\n                    addElementToStack();\n                    stacks.push(stack);\n                    stack = [];\n                    stackSize = 0;\n                }\n            } else {\n                addElementToStack();\n                stackSize += size;\n            }\n        }\n    }\n\n    if (stack.length) {\n        stacks.push(stack);\n    }\n\n    return stacks;\n}\n\nexport default function wrapElements(elements, rect, axis, otherAxis, sizeField) {\n    const stacks = getStacks(elements, rect, sizeField);\n    const origin = rect.origin.clone();\n    const result = [];\n\n    for (let idx = 0; idx < stacks.length; idx++) {\n        let stack = stacks[idx];\n        let startElement = stack[0];\n        origin[otherAxis] = startElement.bbox.origin[otherAxis];\n        translateToPoint(origin, startElement.bbox, startElement.element);\n        startElement.bbox.origin[axis] = origin[axis];\n        stackElements(stack, axis, otherAxis, sizeField);\n        result.push([]);\n        for (let elementIdx = 0; elementIdx < stack.length; elementIdx++) {\n            result[idx].push(stack[elementIdx].element);\n        }\n    }\n    return result;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}