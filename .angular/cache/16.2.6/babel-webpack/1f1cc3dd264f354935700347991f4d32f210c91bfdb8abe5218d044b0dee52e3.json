{"ast":null,"code":"import { Class, valueOrDefault } from '../common';\nimport { Location } from './location';\nlet math = Math,\n  max = math.max,\n  min = math.min;\nexport class Extent extends Class {\n  constructor(initialNw, initialSe) {\n    super();\n    let nw = Location.create(initialNw);\n    let se = Location.create(initialSe);\n    if (nw.lng + 180 > se.lng + 180 && nw.lat + 90 < se.lat + 90) {\n      this.se = nw;\n      this.nw = se;\n    } else {\n      this.se = se;\n      this.nw = nw;\n    }\n  }\n  contains(loc) {\n    let nw = this.nw,\n      se = this.se,\n      lng = valueOrDefault(loc.lng, loc[1]),\n      lat = valueOrDefault(loc.lat, loc[0]);\n    return loc && lng + 180 >= nw.lng + 180 && lng + 180 <= se.lng + 180 && lat + 90 >= se.lat + 90 && lat + 90 <= nw.lat + 90;\n  }\n  center() {\n    let nw = this.nw;\n    let se = this.se;\n    let lng = nw.lng + (se.lng - nw.lng) / 2;\n    let lat = nw.lat + (se.lat - nw.lat) / 2;\n    return new Location(lat, lng);\n  }\n  containsAny(locs) {\n    let result = false;\n    for (let i = 0; i < locs.length; i++) {\n      result = result || this.contains(locs[i]);\n    }\n    return result;\n  }\n  include(loc) {\n    let nw = this.nw,\n      se = this.se,\n      lng = valueOrDefault(loc.lng, loc[1]),\n      lat = valueOrDefault(loc.lat, loc[0]);\n    nw.lng = min(nw.lng, lng);\n    nw.lat = max(nw.lat, lat);\n    se.lng = max(se.lng, lng);\n    se.lat = min(se.lat, lat);\n  }\n  includeAll(locs) {\n    for (let i = 0; i < locs.length; i++) {\n      this.include(locs[i]);\n    }\n  }\n  edges() {\n    let nw = this.nw,\n      se = this.se;\n    return {\n      nw: this.nw,\n      ne: new Location(nw.lat, se.lng),\n      se: this.se,\n      sw: new Location(se.lat, nw.lng)\n    };\n  }\n  toArray() {\n    let nw = this.nw,\n      se = this.se;\n    return [nw, new Location(nw.lat, se.lng), se, new Location(se.lat, nw.lng)];\n  }\n  overlaps(extent) {\n    return this.containsAny(extent.toArray()) || extent.containsAny(this.toArray());\n  }\n  static create(a, b) {\n    if (a instanceof Extent) {\n      return a;\n    } else if (a && b) {\n      return new Extent(a, b);\n    } else if (a && a.length === 4 && !b) {\n      return new Extent([a[0], a[1]], [a[2], a[3]]);\n    }\n  }\n  static get World() {\n    return new Extent([90, -180], [-90, 180]);\n  }\n}","map":{"version":3,"names":["Class","valueOrDefault","Location","math","Math","max","min","Extent","constructor","initialNw","initialSe","nw","create","se","lng","lat","contains","loc","center","containsAny","locs","result","i","length","include","includeAll","edges","ne","sw","toArray","overlaps","extent","a","b","World"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/map/extent.js"],"sourcesContent":["import {\n    Class,\n    valueOrDefault\n} from '../common';\n\nimport { Location } from './location';\n\nlet math = Math,\n    max = math.max,\n    min = math.min;\n\nexport class Extent extends Class {\n    constructor(initialNw, initialSe) {\n        super();\n        let nw = Location.create(initialNw);\n        let se = Location.create(initialSe);\n\n        if (nw.lng + 180 > se.lng + 180 && nw.lat + 90 < se.lat + 90) {\n            this.se = nw;\n            this.nw = se;\n        } else {\n            this.se = se;\n            this.nw = nw;\n        }\n    }\n\n    contains(loc) {\n        let nw = this.nw, se = this.se, lng = valueOrDefault(loc.lng, loc[1]), lat = valueOrDefault(loc.lat, loc[0]);\n\n        return loc &&\n            lng + 180 >= nw.lng + 180 && lng + 180 <= se.lng + 180 &&\n            lat + 90 >= se.lat + 90 && lat + 90 <= nw.lat + 90;\n    }\n\n    center() {\n        let nw = this.nw;\n        let se = this.se;\n        let lng = nw.lng + (se.lng - nw.lng) / 2;\n        let lat = nw.lat + (se.lat - nw.lat) / 2;\n\n        return new Location(lat, lng);\n    }\n\n    containsAny(locs) {\n        let result = false;\n\n        for (let i = 0; i < locs.length; i++) {\n            result = result || this.contains(locs[i]);\n        }\n\n        return result;\n    }\n\n    include(loc) {\n        let nw = this.nw, se = this.se, lng = valueOrDefault(loc.lng, loc[1]), lat = valueOrDefault(loc.lat, loc[0]);\n\n        nw.lng = min(nw.lng, lng);\n        nw.lat = max(nw.lat, lat);\n        se.lng = max(se.lng, lng);\n        se.lat = min(se.lat, lat);\n    }\n\n    includeAll(locs) {\n        for (let i = 0; i < locs.length; i++) {\n            this.include(locs[i]);\n        }\n    }\n\n    edges() {\n        let nw = this.nw, se = this.se;\n\n        return {\n            nw: this.nw,\n            ne: new Location(nw.lat, se.lng),\n            se: this.se,\n            sw: new Location(se.lat, nw.lng)\n        };\n    }\n\n    toArray() {\n        let nw = this.nw, se = this.se;\n\n        return [\n            nw,\n            new Location(nw.lat, se.lng),\n            se,\n            new Location(se.lat, nw.lng)\n        ];\n    }\n\n    overlaps(extent) {\n        return this.containsAny(extent.toArray()) ||\n            extent.containsAny(this.toArray());\n    }\n\n    static create(a, b) {\n        if (a instanceof Extent) {\n            return a;\n        } else if (a && b) {\n            return new Extent(a, b);\n        } else if (a && a.length === 4 && !b) {\n            return new Extent([\n                a[0],\n                a[1]\n            ], [\n                a[2],\n                a[3]\n            ]);\n        }\n    }\n\n    static get World() {\n        return new Extent([ 90, -180 ], [ -90, 180 ]);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}