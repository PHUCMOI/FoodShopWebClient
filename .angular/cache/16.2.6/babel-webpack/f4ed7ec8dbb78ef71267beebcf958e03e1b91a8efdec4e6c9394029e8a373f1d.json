{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, limitValue } from '../../common';\nimport { ANGULAR_SPEED, DEGREE, DEFAULT_LINE_WIDTH, RADIAL_POINTER } from '../constants';\nimport Pointer from '../pointer';\nimport RadialPointerAnimation from './radial-pointer-animation';\nconst CAP_SIZE = 0.05;\nconst {\n  Circle,\n  Group,\n  Path\n} = drawing;\nclass RadialPointer extends Pointer {\n  setAngle(angle) {\n    this.elements.transform(geo.transform().rotate(angle, this.center));\n  }\n  repaint() {\n    const {\n      scale,\n      options\n    } = this;\n    const oldAngle = scale.slotAngle(options._oldValue);\n    const newAngle = scale.slotAngle(options.value);\n    if (options.animation.transitions === false) {\n      this.setAngle(newAngle);\n    } else {\n      new RadialPointerAnimation(this.elements, deepExtend(options.animation, {\n        oldAngle: oldAngle,\n        newAngle: newAngle\n      })).play();\n    }\n  }\n  render() {\n    const {\n      scale,\n      options\n    } = this;\n    const elements = new Group();\n    if (options.animation !== false) {\n      deepExtend(options.animation, {\n        startAngle: 0,\n        center: scale.arc.center,\n        reverse: scale.options.reverse\n      });\n    }\n    elements.append(this._renderNeedle(), this._renderCap());\n    this.elements = elements;\n    this.setAngle(DEGREE);\n    return elements;\n  }\n  reflow(arc) {\n    const center = this.center = arc.center;\n    const length = limitValue(this.options.length || 1, 0.1, 1.5);\n    const radius = this.radius = arc.getRadiusX() * length;\n    const capSize = this.capSize = Math.round(radius * this.options.cap.size);\n    this.bbox = geo.Rect.fromPoints(new geo.Point(center.x - capSize, center.y - capSize), new geo.Point(center.x + capSize, center.y + capSize));\n  }\n  _renderNeedle() {\n    const minorTickSize = this.scale.options.minorTicks.size;\n    const center = this.center;\n    const needleColor = this.options.color;\n    const needlePath = new Path({\n      fill: {\n        color: needleColor\n      },\n      stroke: {\n        color: needleColor,\n        width: DEFAULT_LINE_WIDTH\n      }\n    });\n    needlePath.moveTo(center.x + this.radius - minorTickSize, center.y).lineTo(center.x, center.y - this.capSize / 2).lineTo(center.x, center.y + this.capSize / 2).close();\n    return needlePath;\n  }\n  _renderCap() {\n    const options = this.options;\n    const capColor = options.cap.color || options.color;\n    const circle = new geo.Circle(this.center, this.capSize);\n    const cap = new Circle(circle, {\n      fill: {\n        color: capColor\n      },\n      stroke: {\n        color: capColor\n      }\n    });\n    return cap;\n  }\n}\nsetDefaultOptions(RadialPointer, {\n  cap: {\n    size: CAP_SIZE\n  },\n  arrow: {\n    width: 16,\n    height: 14\n  },\n  animation: {\n    type: RADIAL_POINTER,\n    duration: ANGULAR_SPEED\n  }\n});\nexport default RadialPointer;","map":{"version":3,"names":["geometry","geo","drawing","setDefaultOptions","deepExtend","limitValue","ANGULAR_SPEED","DEGREE","DEFAULT_LINE_WIDTH","RADIAL_POINTER","Pointer","RadialPointerAnimation","CAP_SIZE","Circle","Group","Path","RadialPointer","setAngle","angle","elements","transform","rotate","center","repaint","scale","options","oldAngle","slotAngle","_oldValue","newAngle","value","animation","transitions","play","render","startAngle","arc","reverse","append","_renderNeedle","_renderCap","reflow","length","radius","getRadiusX","capSize","Math","round","cap","size","bbox","Rect","fromPoints","Point","x","y","minorTickSize","minorTicks","needleColor","color","needlePath","fill","stroke","width","moveTo","lineTo","close","capColor","circle","arrow","height","type","duration"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/gauges/radial/radial-pointer.js"],"sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\n\nimport { setDefaultOptions, deepExtend, limitValue } from '../../common';\nimport { ANGULAR_SPEED, DEGREE, DEFAULT_LINE_WIDTH, RADIAL_POINTER } from '../constants';\nimport Pointer from '../pointer';\nimport RadialPointerAnimation from './radial-pointer-animation';\n\nconst CAP_SIZE = 0.05;\nconst { Circle, Group, Path } = drawing;\n\nclass RadialPointer extends Pointer {\n\n    setAngle(angle) {\n        this.elements.transform(geo.transform().rotate(angle, this.center));\n    }\n\n    repaint() {\n        const { scale, options } = this;\n        const oldAngle = scale.slotAngle(options._oldValue);\n        const newAngle = scale.slotAngle(options.value);\n\n        if (options.animation.transitions === false) {\n            this.setAngle(newAngle);\n        } else {\n            new RadialPointerAnimation(this.elements, deepExtend(options.animation, {\n                oldAngle: oldAngle,\n                newAngle: newAngle\n            })).play();\n        }\n    }\n\n    render() {\n        const { scale, options } = this;\n        const elements = new Group();\n\n        if (options.animation !== false) {\n            deepExtend(options.animation, {\n                startAngle: 0,\n                center: scale.arc.center,\n                reverse: scale.options.reverse\n            });\n        }\n\n        elements.append(this._renderNeedle(), this._renderCap());\n\n        this.elements = elements;\n        this.setAngle(DEGREE);\n\n        return elements;\n    }\n\n    reflow(arc) {\n        const center = this.center = arc.center;\n        const length = limitValue(this.options.length || 1, 0.1, 1.5);\n        const radius = this.radius = arc.getRadiusX() * length;\n        const capSize = this.capSize = Math.round(radius * this.options.cap.size);\n\n        this.bbox = geo.Rect.fromPoints(new geo.Point(center.x - capSize, center.y - capSize),\n                                    new geo.Point(center.x + capSize, center.y + capSize));\n    }\n\n    _renderNeedle() {\n        const minorTickSize = this.scale.options.minorTicks.size;\n        const center = this.center;\n        const needleColor = this.options.color;\n\n        const needlePath = new Path({\n            fill: { color: needleColor },\n            stroke: { color: needleColor, width: DEFAULT_LINE_WIDTH }\n        });\n\n        needlePath.moveTo(center.x + this.radius - minorTickSize, center.y)\n                  .lineTo(center.x, center.y - (this.capSize / 2))\n                  .lineTo(center.x, center.y + (this.capSize / 2))\n                  .close();\n\n        return needlePath;\n    }\n\n    _renderCap() {\n        const options = this.options;\n        const capColor = options.cap.color || options.color;\n        const circle = new geo.Circle(this.center, this.capSize);\n\n        const cap = new Circle(circle, {\n            fill: { color: capColor },\n            stroke: { color: capColor }\n        });\n\n        return cap;\n    }\n}\n\nsetDefaultOptions(RadialPointer, {\n    cap: {\n        size: CAP_SIZE\n    },\n    arrow: {\n        width: 16,\n        height: 14\n    },\n    animation: {\n        type: RADIAL_POINTER,\n        duration: ANGULAR_SPEED\n    }\n});\n\nexport default RadialPointer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}