{"ast":null,"code":"import { getTemplate } from '../../common';\nimport { hasValue } from '../utils';\nconst PieChartMixin = {\n  createLegendItem: function (value, point, options) {\n    const legendOptions = this.options.legend || {};\n    const labelsOptions = legendOptions.labels || {};\n    const inactiveItems = legendOptions.inactiveItems || {};\n    const inactiveItemsLabels = inactiveItems.labels || {};\n    if (options && options.visibleInLegend !== false) {\n      const pointVisible = options.visible !== false;\n      const labelTemplate = pointVisible ? getTemplate(labelsOptions) : getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n      let text = options.category;\n      if (labelTemplate) {\n        text = labelTemplate({\n          text: text,\n          series: options.series,\n          dataItem: options.dataItem,\n          percentage: options.percentage,\n          value: value\n        });\n      }\n      let itemLabelOptions, markerColor;\n      if (pointVisible) {\n        itemLabelOptions = {};\n        markerColor = point.color;\n      } else {\n        itemLabelOptions = {\n          color: inactiveItemsLabels.color,\n          font: inactiveItemsLabels.font\n        };\n        markerColor = (inactiveItems.markers || {}).color;\n      }\n      if (hasValue(text) && text !== \"\") {\n        this.legendItems.push({\n          active: pointVisible,\n          pointIndex: options.index,\n          text: text,\n          series: options.series,\n          markerColor: markerColor,\n          labels: itemLabelOptions\n        });\n      }\n    }\n  }\n};\nexport default PieChartMixin;","map":{"version":3,"names":["getTemplate","hasValue","PieChartMixin","createLegendItem","value","point","options","legendOptions","legend","labelsOptions","labels","inactiveItems","inactiveItemsLabels","visibleInLegend","pointVisible","visible","labelTemplate","text","category","series","dataItem","percentage","itemLabelOptions","markerColor","color","font","markers","legendItems","push","active","pointIndex","index"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/mixins/pie-chart-mixin.js"],"sourcesContent":["import { getTemplate } from '../../common';\nimport { hasValue } from '../utils';\n\nconst PieChartMixin = {\n    createLegendItem: function(value, point, options) {\n        const legendOptions = this.options.legend || {};\n        const labelsOptions = legendOptions.labels || {};\n        const inactiveItems = legendOptions.inactiveItems || {};\n        const inactiveItemsLabels = inactiveItems.labels || {};\n\n        if (options && options.visibleInLegend !== false) {\n            const pointVisible = options.visible !== false;\n            const labelTemplate = pointVisible ? getTemplate(labelsOptions) :\n                getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n            let text = options.category;\n\n            if (labelTemplate) {\n                text = labelTemplate({\n                    text: text,\n                    series: options.series,\n                    dataItem: options.dataItem,\n                    percentage: options.percentage,\n                    value: value\n                });\n            }\n\n            let itemLabelOptions, markerColor;\n            if (pointVisible) {\n                itemLabelOptions = {};\n                markerColor = point.color;\n            } else {\n                itemLabelOptions = {\n                    color: inactiveItemsLabels.color,\n                    font: inactiveItemsLabels.font\n                };\n                markerColor = (inactiveItems.markers || {}).color;\n            }\n\n            if (hasValue(text) && text !== \"\") {\n                this.legendItems.push({\n                    active: pointVisible,\n                    pointIndex: options.index,\n                    text: text,\n                    series: options.series,\n                    markerColor: markerColor,\n                    labels: itemLabelOptions\n                });\n            }\n        }\n    }\n};\n\nexport default PieChartMixin;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,QAAQ,QAAQ,UAAU;AAEnC,MAAMC,aAAa,GAAG;EAClBC,gBAAgB,EAAE,SAAAA,CAASC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAC9C,MAAMC,aAAa,GAAG,IAAI,CAACD,OAAO,CAACE,MAAM,IAAI,CAAC,CAAC;IAC/C,MAAMC,aAAa,GAAGF,aAAa,CAACG,MAAM,IAAI,CAAC,CAAC;IAChD,MAAMC,aAAa,GAAGJ,aAAa,CAACI,aAAa,IAAI,CAAC,CAAC;IACvD,MAAMC,mBAAmB,GAAGD,aAAa,CAACD,MAAM,IAAI,CAAC,CAAC;IAEtD,IAAIJ,OAAO,IAAIA,OAAO,CAACO,eAAe,KAAK,KAAK,EAAE;MAC9C,MAAMC,YAAY,GAAGR,OAAO,CAACS,OAAO,KAAK,KAAK;MAC9C,MAAMC,aAAa,GAAGF,YAAY,GAAGd,WAAW,CAACS,aAAa,CAAC,GAC3DT,WAAW,CAACY,mBAAmB,CAAC,IAAIZ,WAAW,CAACS,aAAa,CAAC;MAClE,IAAIQ,IAAI,GAAGX,OAAO,CAACY,QAAQ;MAE3B,IAAIF,aAAa,EAAE;QACfC,IAAI,GAAGD,aAAa,CAAC;UACjBC,IAAI,EAAEA,IAAI;UACVE,MAAM,EAAEb,OAAO,CAACa,MAAM;UACtBC,QAAQ,EAAEd,OAAO,CAACc,QAAQ;UAC1BC,UAAU,EAAEf,OAAO,CAACe,UAAU;UAC9BjB,KAAK,EAAEA;QACX,CAAC,CAAC;MACN;MAEA,IAAIkB,gBAAgB,EAAEC,WAAW;MACjC,IAAIT,YAAY,EAAE;QACdQ,gBAAgB,GAAG,CAAC,CAAC;QACrBC,WAAW,GAAGlB,KAAK,CAACmB,KAAK;MAC7B,CAAC,MAAM;QACHF,gBAAgB,GAAG;UACfE,KAAK,EAAEZ,mBAAmB,CAACY,KAAK;UAChCC,IAAI,EAAEb,mBAAmB,CAACa;QAC9B,CAAC;QACDF,WAAW,GAAG,CAACZ,aAAa,CAACe,OAAO,IAAI,CAAC,CAAC,EAAEF,KAAK;MACrD;MAEA,IAAIvB,QAAQ,CAACgB,IAAI,CAAC,IAAIA,IAAI,KAAK,EAAE,EAAE;QAC/B,IAAI,CAACU,WAAW,CAACC,IAAI,CAAC;UAClBC,MAAM,EAAEf,YAAY;UACpBgB,UAAU,EAAExB,OAAO,CAACyB,KAAK;UACzBd,IAAI,EAAEA,IAAI;UACVE,MAAM,EAAEb,OAAO,CAACa,MAAM;UACtBI,WAAW,EAAEA,WAAW;UACxBb,MAAM,EAAEY;QACZ,CAAC,CAAC;MACN;IACJ;EACJ;AACJ,CAAC;AAED,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}