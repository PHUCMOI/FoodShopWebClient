{"ast":null,"code":"import _asyncToGenerator from \"C:/Internship/FoodShopUI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CartItem } from '../models/Cart';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login.service\";\nexport class CartService {\n  constructor(http, login) {\n    this.http = http;\n    this.login = login;\n    this.url = \"Cart\";\n    this.cartItemList = [];\n    this.productList = new BehaviorSubject([]);\n    this.search = new BehaviorSubject(\"\");\n    this.cartApi = {\n      product: [],\n      cart: []\n    };\n    this.cartCount = new EventEmitter();\n    this.cartData = new EventEmitter();\n  }\n  // Call API\n  getCartProducts(userId) {\n    return this.http.get(`${environment.apiUrl}${this.url}?userId=${userId}`);\n  }\n  updateCart(cart) {\n    const url = `${environment.apiUrl}${this.url}/UpdateCart`;\n    return this.http.post(url, cart);\n  }\n  addtoCart(cart) {\n    const url = `${environment.apiUrl}${this.url}/AddToCart`;\n    return this.http.post(url, cart);\n  }\n  removeCartItem(cart) {\n    const url = `${environment.apiUrl}${this.url}/DeleteItem`;\n    return this.http.post(url, cart);\n  }\n  clearCart(userId) {\n    const url = `${environment.apiUrl}${this.url}/clearCart`;\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(url, userId, {\n      headers\n    });\n  }\n  // Bussiness Logic\n  getTotalPrice(data) {\n    let grandTotal = 0;\n    data.cart.forEach(cartItem => {\n      const product = data.product.find(p => p.productId === cartItem.productID);\n      if (product) {\n        grandTotal += product.price * cartItem.quantity;\n      }\n    });\n    return grandTotal;\n  }\n  checkIsExist(productID, quantity) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let token = _this.login.getinfo();\n      let cart = new CartItem();\n      cart.userId = token.nameid;\n      cart.userName = token.actort;\n      cart.quantity = quantity;\n      cart.productID = productID;\n      (yield _this.getCartProducts(token.nameid)).subscribe({\n        next: data => {\n          _this.cartApi = data;\n          const existingItem = _this.cartApi.cart.find(item => item.productID == productID);\n          if (existingItem) {\n            _this.cartApi.cart.find(item => {\n              if (item.productID == productID) {\n                if (quantity == 1) item.quantity++;else {\n                  item.quantity += quantity;\n                }\n                _this.updateCart(item).subscribe(res => {\n                  _this.getcartData(token.nameid);\n                  _this.updateCartCount();\n                });\n              }\n            });\n          } else {\n            _this.addtoCart(cart).subscribe(res => {\n              _this.getcartData(token.nameid);\n              _this.updateCartCount();\n            });\n          }\n        },\n        error: error => {\n          console.error(error);\n        }\n      });\n    })();\n  }\n  getcartData(nameid) {\n    this.getCartProducts(nameid).subscribe(x => {\n      return this.cartData.next(x);\n    });\n  }\n  removeItem(item) {\n    var _this2 = this;\n    const token = this.login.getinfo();\n    this.removeCartItem(item).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n      (yield _this2.getCartProducts(token.nameid)).subscribe(data => {\n        _this2.cartData.next(data);\n        _this2.getTotalPrice(data);\n        _this2.updateCartCount();\n      });\n    }));\n  }\n  updateCartCount() {\n    const token = this.login.getinfo();\n    this.getCartProducts(token.nameid).subscribe({\n      next: data => {\n        this.cartCount.next(data.product.length);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","EventEmitter","BehaviorSubject","CartItem","environment","CartService","constructor","http","login","url","cartItemList","productList","search","cartApi","product","cart","cartCount","cartData","getCartProducts","userId","get","apiUrl","updateCart","post","addtoCart","removeCartItem","clearCart","headers","getTotalPrice","data","grandTotal","forEach","cartItem","find","p","productId","productID","price","quantity","checkIsExist","_this","_asyncToGenerator","token","getinfo","nameid","userName","actort","subscribe","next","existingItem","item","res","getcartData","updateCartCount","error","console","x","removeItem","_this2","length","_","i0","ɵɵinject","i1","HttpClient","i2","LoginService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Internship\\FoodShopUI\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Product } from '../models/Product';\r\nimport { Cart, CartItem } from '../models/Cart';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  public url = \"Cart\"\r\n  public cartItemList: Product[] = [];\r\n  public productList = new BehaviorSubject<any>([]);\r\n  public search = new BehaviorSubject<string>(\"\");\r\n  public cartApi: Cart = {\r\n    product: [],\r\n    cart: []\r\n  };\r\n  public cartCount: EventEmitter<any> = new EventEmitter();\r\n  public cartData: EventEmitter<any> = new EventEmitter();\r\n  constructor(private http: HttpClient, private login: LoginService) { }\r\n\r\n  // Call API\r\n  getCartProducts(userId: number): Observable<any> {\r\n    return this.http.get<Cart>(`${environment.apiUrl}${this.url}?userId=${userId}`)\r\n  }\r\n\r\n  updateCart(cart: CartItem): Observable<boolean> {\r\n    const url = `${environment.apiUrl}${this.url}/UpdateCart`;\r\n    return this.http.post<boolean>(url, cart);\r\n  }\r\n\r\n  addtoCart(cart: CartItem) {\r\n    const url = `${environment.apiUrl}${this.url}/AddToCart`;\r\n    return this.http.post<boolean>(url, cart);\r\n  }\r\n\r\n  removeCartItem(cart: CartItem) {\r\n    const url = `${environment.apiUrl}${this.url}/DeleteItem`;\r\n    return this.http.post<boolean>(url, cart);\r\n  }\r\n\r\n  clearCart(userId: number) {\r\n    const url = `${environment.apiUrl}${this.url}/clearCart`;\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post<boolean>(url, userId, { headers });\r\n  }\r\n\r\n  // Bussiness Logic\r\n  getTotalPrice(data: Cart): number {\r\n    let grandTotal = 0;\r\n    data.cart.forEach(cartItem => {\r\n      const product = data.product.find(p => p.productId === cartItem.productID);\r\n      if (product) {\r\n        grandTotal += product.price * cartItem.quantity;\r\n      }\r\n    });\r\n    return grandTotal;\r\n  }\r\n\r\n  async checkIsExist(productID: number, quantity: number) {\r\n    let token = this.login.getinfo();\r\n    let cart: CartItem = new CartItem();\r\n    cart.userId = token.nameid;\r\n    cart.userName = token.actort;\r\n    cart.quantity = quantity;\r\n    cart.productID = productID;\r\n\r\n    (await this.getCartProducts(token.nameid)).subscribe({\r\n      next: (data) => {\r\n        this.cartApi = data;\r\n        const existingItem = this.cartApi.cart.find(item => item.productID == productID);\r\n\r\n        if (existingItem) {\r\n          this.cartApi.cart.find(item => {\r\n            if (item.productID == productID) {\r\n              if (quantity == 1) item.quantity++;\r\n              else {\r\n                item.quantity += quantity;\r\n              }\r\n              this.updateCart(item).subscribe(res => {\r\n                this.getcartData(token.nameid);\r\n                this.updateCartCount()\r\n\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.addtoCart(cart).subscribe(res => {\r\n            this.getcartData(token.nameid);\r\n            this.updateCartCount()\r\n\r\n          });\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  public getcartData(nameid: number) {\r\n    this.getCartProducts(nameid).subscribe(x => {\r\n      return this.cartData.next(x);\r\n    })\r\n  }\r\n\r\n  removeItem(item: CartItem) {\r\n    const token = this.login.getinfo();\r\n    this.removeCartItem(item).subscribe(async () => {\r\n      (await this.getCartProducts(token.nameid)).subscribe(data => {\r\n        this.cartData.next(data);\r\n        this.getTotalPrice(data);\r\n        this.updateCartCount();\r\n      });\r\n    });\r\n  }\r\n\r\n  public updateCartCount() {\r\n    const token = this.login.getinfo();\r\n    this.getCartProducts(token.nameid).subscribe({\r\n      next: data => {\r\n        this.cartCount.next(data.product.length);\r\n      }\r\n    });\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}