{"ast":null,"code":"import * as easingFunctions from './easing-functions';\nimport { limitValue, now } from '../util';\nimport { animationFrame, Class } from '../common';\nimport AnimationFactory from './animation-factory';\nclass Animation extends Class {\n  static create(type, element, options) {\n    return AnimationFactory.current.create(type, element, options);\n  }\n  get options() {\n    return this._options || {\n      duration: 500,\n      easing: \"swing\"\n    };\n  }\n  set options(value) {\n    this._options = value;\n  }\n  constructor(element, options) {\n    super();\n    this.options = Object.assign({}, this.options, options);\n    this.element = element;\n  }\n  setup() {}\n  step() {}\n  play() {\n    const options = this.options;\n    const {\n      duration,\n      delay = 0\n    } = options;\n    const easing = easingFunctions[options.easing];\n    const start = now() + delay;\n    const finish = start + duration;\n    if (duration === 0) {\n      this.step(1);\n      this.abort();\n    } else {\n      setTimeout(() => {\n        const loop = () => {\n          if (this._stopped) {\n            return;\n          }\n          const wallTime = now();\n          const time = limitValue(wallTime - start, 0, duration);\n          const position = time / duration;\n          const easingPosition = easing(position, time, 0, 1, duration);\n          this.step(easingPosition);\n          if (wallTime < finish) {\n            animationFrame(loop);\n          } else {\n            this.abort();\n          }\n        };\n        loop();\n      }, delay);\n    }\n  }\n  abort() {\n    this._stopped = true;\n  }\n  destroy() {\n    this.abort();\n  }\n}\nexport default Animation;","map":{"version":3,"names":["easingFunctions","limitValue","now","animationFrame","Class","AnimationFactory","Animation","create","type","element","options","current","_options","duration","easing","value","constructor","Object","assign","setup","step","play","delay","start","finish","abort","setTimeout","loop","_stopped","wallTime","time","position","easingPosition","destroy"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/animations/animation.js"],"sourcesContent":["import * as easingFunctions from './easing-functions';\nimport { limitValue, now } from '../util';\nimport { animationFrame, Class } from '../common';\nimport AnimationFactory from './animation-factory';\n\nclass Animation extends Class {\n    static create(type, element, options) {\n        return AnimationFactory.current.create(type, element, options);\n    }\n\n    get options() {\n        return this._options || {\n            duration: 500,\n            easing: \"swing\"\n        };\n    }\n\n    set options(value) {\n        this._options = value;\n    }\n\n    constructor(element, options) {\n        super();\n\n        this.options = Object.assign({}, this.options, options);\n        this.element = element;\n    }\n\n    setup() {}\n    step() {}\n\n    play() {\n        const options = this.options;\n        const { duration, delay = 0 } = options;\n        const easing = easingFunctions[options.easing];\n        const start = now() + delay;\n        const finish = start + duration;\n\n        if (duration === 0) {\n            this.step(1);\n            this.abort();\n        } else {\n            setTimeout(() => {\n                const loop = () => {\n                    if (this._stopped) {\n                        return;\n                    }\n\n                    const wallTime = now();\n\n                    const time = limitValue(wallTime - start, 0, duration);\n                    const position = time / duration;\n                    const easingPosition = easing(position, time, 0, 1, duration);\n\n                    this.step(easingPosition);\n\n                    if (wallTime < finish) {\n                        animationFrame(loop);\n                    } else {\n                        this.abort();\n                    }\n                };\n\n                loop();\n            }, delay);\n        }\n    }\n\n    abort() {\n        this._stopped = true;\n    }\n\n    destroy() {\n        this.abort();\n    }\n}\n\nexport default Animation;\n"],"mappings":"AAAA,OAAO,KAAKA,eAAe,MAAM,oBAAoB;AACrD,SAASC,UAAU,EAAEC,GAAG,QAAQ,SAAS;AACzC,SAASC,cAAc,EAAEC,KAAK,QAAQ,WAAW;AACjD,OAAOC,gBAAgB,MAAM,qBAAqB;AAElD,MAAMC,SAAS,SAASF,KAAK,CAAC;EAC1B,OAAOG,MAAMA,CAACC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAE;IAClC,OAAOL,gBAAgB,CAACM,OAAO,CAACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC;EAClE;EAEA,IAAIA,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACE,QAAQ,IAAI;MACpBC,QAAQ,EAAE,GAAG;MACbC,MAAM,EAAE;IACZ,CAAC;EACL;EAEA,IAAIJ,OAAOA,CAACK,KAAK,EAAE;IACf,IAAI,CAACH,QAAQ,GAAGG,KAAK;EACzB;EAEAC,WAAWA,CAACP,OAAO,EAAEC,OAAO,EAAE;IAC1B,KAAK,CAAC,CAAC;IAEP,IAAI,CAACA,OAAO,GAAGO,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACR,OAAO,EAAEA,OAAO,CAAC;IACvD,IAAI,CAACD,OAAO,GAAGA,OAAO;EAC1B;EAEAU,KAAKA,CAAA,EAAG,CAAC;EACTC,IAAIA,CAAA,EAAG,CAAC;EAERC,IAAIA,CAAA,EAAG;IACH,MAAMX,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM;MAAEG,QAAQ;MAAES,KAAK,GAAG;IAAE,CAAC,GAAGZ,OAAO;IACvC,MAAMI,MAAM,GAAGd,eAAe,CAACU,OAAO,CAACI,MAAM,CAAC;IAC9C,MAAMS,KAAK,GAAGrB,GAAG,CAAC,CAAC,GAAGoB,KAAK;IAC3B,MAAME,MAAM,GAAGD,KAAK,GAAGV,QAAQ;IAE/B,IAAIA,QAAQ,KAAK,CAAC,EAAE;MAChB,IAAI,CAACO,IAAI,CAAC,CAAC,CAAC;MACZ,IAAI,CAACK,KAAK,CAAC,CAAC;IAChB,CAAC,MAAM;MACHC,UAAU,CAAC,MAAM;QACb,MAAMC,IAAI,GAAGA,CAAA,KAAM;UACf,IAAI,IAAI,CAACC,QAAQ,EAAE;YACf;UACJ;UAEA,MAAMC,QAAQ,GAAG3B,GAAG,CAAC,CAAC;UAEtB,MAAM4B,IAAI,GAAG7B,UAAU,CAAC4B,QAAQ,GAAGN,KAAK,EAAE,CAAC,EAAEV,QAAQ,CAAC;UACtD,MAAMkB,QAAQ,GAAGD,IAAI,GAAGjB,QAAQ;UAChC,MAAMmB,cAAc,GAAGlB,MAAM,CAACiB,QAAQ,EAAED,IAAI,EAAE,CAAC,EAAE,CAAC,EAAEjB,QAAQ,CAAC;UAE7D,IAAI,CAACO,IAAI,CAACY,cAAc,CAAC;UAEzB,IAAIH,QAAQ,GAAGL,MAAM,EAAE;YACnBrB,cAAc,CAACwB,IAAI,CAAC;UACxB,CAAC,MAAM;YACH,IAAI,CAACF,KAAK,CAAC,CAAC;UAChB;QACJ,CAAC;QAEDE,IAAI,CAAC,CAAC;MACV,CAAC,EAAEL,KAAK,CAAC;IACb;EACJ;EAEAG,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACG,QAAQ,GAAG,IAAI;EACxB;EAEAK,OAAOA,CAAA,EAAG;IACN,IAAI,CAACR,KAAK,CAAC,CAAC;EAChB;AACJ;AAEA,eAAenB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}