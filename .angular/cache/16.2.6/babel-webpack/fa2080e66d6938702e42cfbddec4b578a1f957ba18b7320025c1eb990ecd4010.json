{"ast":null,"code":"import { timezones } from './timezones';\nimport { formatMessage, NO_TZ_INFO, INVALID_TZ_STRUCTURE } from '../errors';\n// tslint:disable:max-line-length\n/**\n * A function that loads the information about the provided timezone. The details for the loaded timezone will be available to all functions that are related to the manipulation of the timezone.\n *\n * @param timezoneInfo - The information about the timezone that will be loaded.\n *\n * @example\n * ```ts-no-run\n * loadTimezone({ zones: [...], rules: [...]});\n * ```\n */\n// tslint:enable:max-line-length\nexport const loadTimezone = tzInfo => {\n  if (!tzInfo) {\n    throw new Error(formatMessage(NO_TZ_INFO, ''));\n  }\n  const {\n    rules,\n    titles,\n    zones\n  } = tzInfo;\n  if (rules === undefined || zones === undefined) {\n    throw new Error(INVALID_TZ_STRUCTURE);\n  }\n  Object.assign(timezones.rules, rules);\n  Object.assign(timezones.titles, titles || {});\n  Object.assign(timezones.zones, zones);\n};","map":{"version":3,"names":["timezones","formatMessage","NO_TZ_INFO","INVALID_TZ_STRUCTURE","loadTimezone","tzInfo","Error","rules","titles","zones","undefined","Object","assign"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-date-math/dist/es2015/tz/load-timezone.js"],"sourcesContent":["import { timezones } from './timezones';\nimport { formatMessage, NO_TZ_INFO, INVALID_TZ_STRUCTURE } from '../errors';\n// tslint:disable:max-line-length\n/**\n * A function that loads the information about the provided timezone. The details for the loaded timezone will be available to all functions that are related to the manipulation of the timezone.\n *\n * @param timezoneInfo - The information about the timezone that will be loaded.\n *\n * @example\n * ```ts-no-run\n * loadTimezone({ zones: [...], rules: [...]});\n * ```\n */\n// tslint:enable:max-line-length\nexport const loadTimezone = (tzInfo) => {\n    if (!tzInfo) {\n        throw new Error(formatMessage(NO_TZ_INFO, ''));\n    }\n    const { rules, titles, zones } = tzInfo;\n    if (rules === undefined || zones === undefined) {\n        throw new Error(INVALID_TZ_STRUCTURE);\n    }\n    Object.assign(timezones.rules, rules);\n    Object.assign(timezones.titles, titles || {});\n    Object.assign(timezones.zones, zones);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,aAAa,EAAEC,UAAU,EAAEC,oBAAoB,QAAQ,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAK;EACpC,IAAI,CAACA,MAAM,EAAE;IACT,MAAM,IAAIC,KAAK,CAACL,aAAa,CAACC,UAAU,EAAE,EAAE,CAAC,CAAC;EAClD;EACA,MAAM;IAAEK,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGJ,MAAM;EACvC,IAAIE,KAAK,KAAKG,SAAS,IAAID,KAAK,KAAKC,SAAS,EAAE;IAC5C,MAAM,IAAIJ,KAAK,CAACH,oBAAoB,CAAC;EACzC;EACAQ,MAAM,CAACC,MAAM,CAACZ,SAAS,CAACO,KAAK,EAAEA,KAAK,CAAC;EACrCI,MAAM,CAACC,MAAM,CAACZ,SAAS,CAACQ,MAAM,EAAEA,MAAM,IAAI,CAAC,CAAC,CAAC;EAC7CG,MAAM,CAACC,MAAM,CAACZ,SAAS,CAACS,KAAK,EAAEA,KAAK,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}