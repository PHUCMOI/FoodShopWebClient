{"ast":null,"code":"import deepExtend from './deep-extend';\nconst TRIGGER = 'trigger';\nclass InstanceObserver {\n  constructor(observer, handlers) {\n    this.observer = observer;\n    this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n  }\n  trigger(name, args) {\n    const {\n      observer,\n      handlerMap\n    } = this;\n    let isDefaultPrevented;\n    if (handlerMap[name]) {\n      isDefaultPrevented = this.callObserver(handlerMap[name], args);\n    } else if (observer[TRIGGER]) {\n      isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n    }\n    return isDefaultPrevented;\n  }\n  callObserver(fnName, ...args) {\n    return this.observer[fnName].apply(this.observer, args);\n  }\n  requiresHandlers(names) {\n    if (this.observer.requiresHandlers) {\n      return this.observer.requiresHandlers(names);\n    }\n    for (let idx = 0; idx < names.length; idx++) {\n      if (this.handlerMap[names[idx]]) {\n        return true;\n      }\n    }\n  }\n}\nexport default InstanceObserver;","map":{"version":3,"names":["deepExtend","TRIGGER","InstanceObserver","constructor","observer","handlers","handlerMap","trigger","name","args","isDefaultPrevented","callObserver","fnName","apply","requiresHandlers","names","idx","length"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/common/instance-observer.js"],"sourcesContent":["import deepExtend from './deep-extend';\n\nconst TRIGGER = 'trigger';\n\nclass InstanceObserver {\n    constructor(observer, handlers) {\n        this.observer = observer;\n        this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n    }\n\n    trigger(name, args) {\n        const { observer, handlerMap } = this;\n        let isDefaultPrevented;\n        if (handlerMap[name]) {\n            isDefaultPrevented = this.callObserver(handlerMap[name], args);\n        } else if (observer[TRIGGER]) {\n            isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n        }\n\n        return isDefaultPrevented;\n    }\n\n    callObserver(fnName, ...args) {\n        return this.observer[fnName].apply(this.observer, args);\n    }\n\n    requiresHandlers(names) {\n        if (this.observer.requiresHandlers) {\n            return this.observer.requiresHandlers(names);\n        }\n\n        for (let idx = 0; idx < names.length; idx++) {\n            if (this.handlerMap[names[idx]]) {\n                return true;\n            }\n        }\n    }\n}\n\nexport default InstanceObserver;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,eAAe;AAEtC,MAAMC,OAAO,GAAG,SAAS;AAEzB,MAAMC,gBAAgB,CAAC;EACnBC,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC5B,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,UAAU,GAAGN,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAACM,UAAU,EAAED,QAAQ,CAAC;EAC/D;EAEAE,OAAOA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAChB,MAAM;MAAEL,QAAQ;MAAEE;IAAW,CAAC,GAAG,IAAI;IACrC,IAAII,kBAAkB;IACtB,IAAIJ,UAAU,CAACE,IAAI,CAAC,EAAE;MAClBE,kBAAkB,GAAG,IAAI,CAACC,YAAY,CAACL,UAAU,CAACE,IAAI,CAAC,EAAEC,IAAI,CAAC;IAClE,CAAC,MAAM,IAAIL,QAAQ,CAACH,OAAO,CAAC,EAAE;MAC1BS,kBAAkB,GAAG,IAAI,CAACC,YAAY,CAACV,OAAO,EAAEO,IAAI,EAAEC,IAAI,CAAC;IAC/D;IAEA,OAAOC,kBAAkB;EAC7B;EAEAC,YAAYA,CAACC,MAAM,EAAE,GAAGH,IAAI,EAAE;IAC1B,OAAO,IAAI,CAACL,QAAQ,CAACQ,MAAM,CAAC,CAACC,KAAK,CAAC,IAAI,CAACT,QAAQ,EAAEK,IAAI,CAAC;EAC3D;EAEAK,gBAAgBA,CAACC,KAAK,EAAE;IACpB,IAAI,IAAI,CAACX,QAAQ,CAACU,gBAAgB,EAAE;MAChC,OAAO,IAAI,CAACV,QAAQ,CAACU,gBAAgB,CAACC,KAAK,CAAC;IAChD;IAEA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGD,KAAK,CAACE,MAAM,EAAED,GAAG,EAAE,EAAE;MACzC,IAAI,IAAI,CAACV,UAAU,CAACS,KAAK,CAACC,GAAG,CAAC,CAAC,EAAE;QAC7B,OAAO,IAAI;MACf;IACJ;EACJ;AACJ;AAEA,eAAed,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}