{"ast":null,"code":"import { isPresent, isNotNullOrEmptyString } from './utils';\nimport { serializeFilter } from './odata-filtering.operators';\nimport { ifElse, constant } from './funcs';\nconst serializeSort = orderby => {\n  const str = orderby.filter(sort => isPresent(sort.dir)).map(sort => {\n    const order = sort.field.replace(/\\./g, \"/\");\n    return sort.dir === \"desc\" ? order + \" desc\" : order;\n  }).join(\",\");\n  return str ? `$orderby=${str}` : str;\n};\nconst emptyString = constant('');\nconst concat = a => b => a + b;\nconst serializeKey = (strings, val) => ifElse(isPresent, concat(strings[0]), emptyString)(val);\nconst rules = (settings, state) => key => ({\n  \"filter\": serializeFilter(state.filter || {}, settings),\n  \"skip\": serializeKey`$skip=${state.skip}`,\n  \"sort\": serializeSort(state.sort || []),\n  \"take\": serializeKey`$top=${state.take}`\n})[key];\n// tslint:enable:max-line-length\n/**\n * Converts a [State]({% slug api_kendo-data-query_state %}) into an OData v4 compatible string.\n *\n * @param {State} state - The state that will be serialized.\n * @param {ODataSettings} settings - The settings that are used during the serialization.\n * @returns {string} - The serialized state.\n */\nexport const toODataString = (state, settings = {}) => Object.keys(state).map(rules(settings, state)).filter(isNotNullOrEmptyString).join('&');","map":{"version":3,"names":["isPresent","isNotNullOrEmptyString","serializeFilter","ifElse","constant","serializeSort","orderby","str","filter","sort","dir","map","order","field","replace","join","emptyString","concat","a","b","serializeKey","strings","val","rules","settings","state","key","skip","take","toODataString","Object","keys"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-data-query/dist/es2015/odata.operators.js"],"sourcesContent":["import { isPresent, isNotNullOrEmptyString } from './utils';\nimport { serializeFilter } from './odata-filtering.operators';\nimport { ifElse, constant } from './funcs';\nconst serializeSort = (orderby) => {\n    const str = orderby\n        .filter(sort => isPresent(sort.dir))\n        .map(sort => {\n        const order = sort.field.replace(/\\./g, \"/\");\n        return sort.dir === \"desc\" ? order + \" desc\" : order;\n    }).join(\",\");\n    return str ? `$orderby=${str}` : str;\n};\nconst emptyString = constant('');\nconst concat = a => b => a + b;\nconst serializeKey = (strings, val) => ifElse(isPresent, concat(strings[0]), emptyString)(val);\nconst rules = (settings, state) => (key) => ({\n    \"filter\": serializeFilter(state.filter || {}, settings),\n    \"skip\": serializeKey `$skip=${state.skip}`,\n    \"sort\": serializeSort(state.sort || []),\n    \"take\": serializeKey `$top=${state.take}`\n}[key]);\n// tslint:enable:max-line-length\n/**\n * Converts a [State]({% slug api_kendo-data-query_state %}) into an OData v4 compatible string.\n *\n * @param {State} state - The state that will be serialized.\n * @param {ODataSettings} settings - The settings that are used during the serialization.\n * @returns {string} - The serialized state.\n */\nexport const toODataString = (state, settings = {}) => (Object.keys(state)\n    .map(rules(settings, state))\n    .filter(isNotNullOrEmptyString)\n    .join('&'));\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,sBAAsB,QAAQ,SAAS;AAC3D,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,MAAM,EAAEC,QAAQ,QAAQ,SAAS;AAC1C,MAAMC,aAAa,GAAIC,OAAO,IAAK;EAC/B,MAAMC,GAAG,GAAGD,OAAO,CACdE,MAAM,CAACC,IAAI,IAAIT,SAAS,CAACS,IAAI,CAACC,GAAG,CAAC,CAAC,CACnCC,GAAG,CAACF,IAAI,IAAI;IACb,MAAMG,KAAK,GAAGH,IAAI,CAACI,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IAC5C,OAAOL,IAAI,CAACC,GAAG,KAAK,MAAM,GAAGE,KAAK,GAAG,OAAO,GAAGA,KAAK;EACxD,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;EACZ,OAAOR,GAAG,GAAI,YAAWA,GAAI,EAAC,GAAGA,GAAG;AACxC,CAAC;AACD,MAAMS,WAAW,GAAGZ,QAAQ,CAAC,EAAE,CAAC;AAChC,MAAMa,MAAM,GAAGC,CAAC,IAAIC,CAAC,IAAID,CAAC,GAAGC,CAAC;AAC9B,MAAMC,YAAY,GAAGA,CAACC,OAAO,EAAEC,GAAG,KAAKnB,MAAM,CAACH,SAAS,EAAEiB,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAEL,WAAW,CAAC,CAACM,GAAG,CAAC;AAC9F,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAMC,GAAG,IAAM;EACzC,QAAQ,EAAExB,eAAe,CAACuB,KAAK,CAACjB,MAAM,IAAI,CAAC,CAAC,EAAEgB,QAAQ,CAAC;EACvD,MAAM,EAAEJ,YAAc,SAAQK,KAAK,CAACE,IAAK,EAAC;EAC1C,MAAM,EAAEtB,aAAa,CAACoB,KAAK,CAAChB,IAAI,IAAI,EAAE,CAAC;EACvC,MAAM,EAAEW,YAAc,QAAOK,KAAK,CAACG,IAAK;AAC5C,CAAC,EAACF,GAAG,CAAE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,aAAa,GAAGA,CAACJ,KAAK,EAAED,QAAQ,GAAG,CAAC,CAAC,KAAMM,MAAM,CAACC,IAAI,CAACN,KAAK,CAAC,CACrEd,GAAG,CAACY,KAAK,CAACC,QAAQ,EAAEC,KAAK,CAAC,CAAC,CAC3BjB,MAAM,CAACP,sBAAsB,CAAC,CAC9Bc,IAAI,CAAC,GAAG,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}