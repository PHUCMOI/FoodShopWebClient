{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport Target from './target';\nimport { Box, ChartElement } from '../../core';\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\nimport Bar from '../bar-chart/bar';\nimport { WHITE, TOP, RIGHT } from '../../common/constants';\nimport { alignPathToPixel, deepExtend, defined, getTemplate, setDefaultOptions, valueOrDefault } from '../../common';\nimport BarLabel from '../bar-chart/bar-label';\nclass Bullet extends ChartElement {\n  constructor(value, options) {\n    super(options);\n    this.aboveAxis = this.options.aboveAxis;\n    this.color = options.color || WHITE;\n    this.value = value;\n  }\n  render() {\n    const options = this.options;\n    if (!this._rendered) {\n      this._rendered = true;\n      if (defined(this.value.target)) {\n        this.target = new Target({\n          type: options.target.shape,\n          background: options.target.color || this.color,\n          opacity: options.opacity,\n          zIndex: options.zIndex,\n          border: options.target.border,\n          vAlign: TOP,\n          align: RIGHT\n        });\n        this.target.value = this.value;\n        this.target.dataItem = this.dataItem;\n        this.target.series = this.series;\n        this.append(this.target);\n      }\n      this.createLabel();\n      this.createNote();\n    }\n  }\n  createLabel() {\n    const options = this.options;\n    const labels = options.labels;\n    if (labels.visible) {\n      const pointData = this.pointData();\n      let labelTemplate = getTemplate(labels);\n      let labelText;\n      if (labelTemplate) {\n        labelText = labelTemplate(pointData);\n      } else {\n        labelText = this.formatValue(labels.format);\n      }\n      this.label = new BarLabel(labelText, labels, pointData);\n      this.append(this.label);\n    }\n  }\n  reflow(box) {\n    this.render();\n    const {\n      options,\n      target,\n      owner: chart\n    } = this;\n    const invertAxes = options.invertAxes;\n    const valueAxis = chart.seriesValueAxis(this.options);\n    const categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n    const targetValueSlot = valueAxis.getSlot(this.value.target);\n    const targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n    const targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n    if (target) {\n      const targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n      target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n      target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n      target.reflow(targetSlot);\n    }\n    const label = this.label;\n    if (label) {\n      label.options.aboveAxis = this.aboveAxis;\n      label.reflow(box);\n    }\n    if (this.note) {\n      this.note.reflow(box);\n    }\n    this.box = box;\n  }\n  createVisual() {\n    super.createVisual();\n    const options = this.options;\n    const body = draw.Path.fromRect(this.box.toRect(), {\n      fill: {\n        color: this.color,\n        opacity: options.opacity\n      },\n      stroke: null\n    });\n    if (options.border.width > 0) {\n      body.options.set(\"stroke\", {\n        color: options.border.color || this.color,\n        width: options.border.width,\n        dashType: options.border.dashType,\n        opacity: valueOrDefault(options.border.opacity, options.opacity)\n      });\n    }\n    this.bodyVisual = body;\n    alignPathToPixel(body);\n    this.visual.append(body);\n  }\n  createAnimation() {\n    if (this.bodyVisual) {\n      this.animation = draw.Animation.create(this.bodyVisual, this.options.animation);\n    }\n  }\n  createHighlight(style) {\n    return draw.Path.fromRect(this.box.toRect(), style);\n  }\n  highlightVisual() {\n    return this.bodyVisual;\n  }\n  highlightVisualArgs() {\n    return {\n      rect: this.box.toRect(),\n      visual: this.bodyVisual,\n      options: this.options\n    };\n  }\n  formatValue(format) {\n    return this.owner.formatPointValue(this, format);\n  }\n  pointData() {\n    return {\n      dataItem: this.dataItem,\n      category: this.category,\n      value: this.value,\n      series: this.series\n    };\n  }\n  overlapsBox(box) {\n    return this.box.overlaps(box);\n  }\n}\nBullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\nsetDefaultOptions(Bullet, {\n  border: {\n    width: 1\n  },\n  vertical: false,\n  opacity: 1,\n  target: {\n    shape: \"\",\n    border: {\n      width: 0,\n      color: \"green\"\n    },\n    line: {\n      width: 2\n    }\n  },\n  labels: {\n    visible: false\n  },\n  tooltip: {\n    format: \"Current: {0}<br />Target: {1}\"\n  },\n  notes: {\n    label: {}\n  }\n});\ndeepExtend(Bullet.prototype, PointEventsMixin);\ndeepExtend(Bullet.prototype, NoteMixin);\nexport default Bullet;","map":{"version":3,"names":["drawing","draw","Target","Box","ChartElement","PointEventsMixin","NoteMixin","Bar","WHITE","TOP","RIGHT","alignPathToPixel","deepExtend","defined","getTemplate","setDefaultOptions","valueOrDefault","BarLabel","Bullet","constructor","value","options","aboveAxis","color","render","_rendered","target","type","shape","background","opacity","zIndex","border","vAlign","align","dataItem","series","append","createLabel","createNote","labels","visible","pointData","labelTemplate","labelText","formatValue","format","label","reflow","box","owner","chart","invertAxes","valueAxis","seriesValueAxis","categorySlot","categoryAxis","categoryIx","targetValueSlot","getSlot","targetSlotX","targetSlotY","targetSlot","x1","y1","x2","y2","height","line","width","note","createVisual","body","Path","fromRect","toRect","fill","stroke","set","dashType","bodyVisual","visual","createAnimation","animation","Animation","create","createHighlight","style","highlightVisual","highlightVisualArgs","rect","formatPointValue","category","overlapsBox","overlaps","prototype","tooltipAnchor","vertical","tooltip","notes"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/chart/bullet-chart/bullet.js"],"sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport Target from './target';\n\nimport { Box, ChartElement } from '../../core';\n\nimport PointEventsMixin from '../mixins/point-events-mixin';\nimport NoteMixin from '../mixins/note-mixin';\nimport Bar from '../bar-chart/bar';\n\nimport { WHITE, TOP, RIGHT } from '../../common/constants';\nimport { alignPathToPixel, deepExtend, defined, getTemplate, setDefaultOptions, valueOrDefault } from '../../common';\n\nimport BarLabel from '../bar-chart/bar-label';\n\nclass Bullet extends ChartElement {\n    constructor(value, options) {\n        super(options);\n\n        this.aboveAxis = this.options.aboveAxis;\n        this.color = options.color || WHITE;\n        this.value = value;\n    }\n\n    render() {\n        const options = this.options;\n\n        if (!this._rendered) {\n            this._rendered = true;\n\n            if (defined(this.value.target)) {\n                this.target = new Target({\n                    type: options.target.shape,\n                    background: options.target.color || this.color,\n                    opacity: options.opacity,\n                    zIndex: options.zIndex,\n                    border: options.target.border,\n                    vAlign: TOP,\n                    align: RIGHT\n                });\n\n                this.target.value = this.value;\n                this.target.dataItem = this.dataItem;\n                this.target.series = this.series;\n\n                this.append(this.target);\n            }\n\n            this.createLabel();\n            this.createNote();\n        }\n    }\n\n    createLabel() {\n        const options = this.options;\n        const labels = options.labels;\n\n        if (labels.visible) {\n            const pointData = this.pointData();\n            let labelTemplate = getTemplate(labels);\n            let labelText;\n\n            if (labelTemplate) {\n                labelText = labelTemplate(pointData);\n            } else {\n                labelText = this.formatValue(labels.format);\n            }\n\n            this.label = new BarLabel(labelText, labels, pointData);\n            this.append(this.label);\n        }\n    }\n\n    reflow(box) {\n        this.render();\n\n        const { options, target, owner: chart } = this;\n        const invertAxes = options.invertAxes;\n        const valueAxis = chart.seriesValueAxis(this.options);\n        const categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n        const targetValueSlot = valueAxis.getSlot(this.value.target);\n        const targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n        const targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n\n        if (target) {\n            const targetSlot = new Box(\n                targetSlotX.x1, targetSlotY.y1,\n                targetSlotX.x2, targetSlotY.y2\n            );\n            target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n            target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n            target.reflow(targetSlot);\n        }\n\n        const label = this.label;\n        if (label) {\n            label.options.aboveAxis = this.aboveAxis;\n            label.reflow(box);\n        }\n\n        if (this.note) {\n            this.note.reflow(box);\n        }\n\n        this.box = box;\n    }\n\n    createVisual() {\n        super.createVisual();\n\n        const options = this.options;\n        const body = draw.Path.fromRect(this.box.toRect(), {\n            fill: {\n                color: this.color,\n                opacity: options.opacity\n            },\n            stroke: null\n        });\n\n        if (options.border.width > 0) {\n            body.options.set(\"stroke\", {\n                color: options.border.color || this.color,\n                width: options.border.width,\n                dashType: options.border.dashType,\n                opacity: valueOrDefault(options.border.opacity, options.opacity)\n            });\n        }\n\n        this.bodyVisual = body;\n\n        alignPathToPixel(body);\n        this.visual.append(body);\n    }\n\n    createAnimation() {\n        if (this.bodyVisual) {\n            this.animation = draw.Animation.create(\n                this.bodyVisual, this.options.animation\n            );\n        }\n    }\n\n    createHighlight(style) {\n        return draw.Path.fromRect(this.box.toRect(), style);\n    }\n\n    highlightVisual() {\n        return this.bodyVisual;\n    }\n\n    highlightVisualArgs() {\n        return {\n            rect: this.box.toRect(),\n            visual: this.bodyVisual,\n            options: this.options\n        };\n    }\n\n    formatValue(format) {\n        return this.owner.formatPointValue(this, format);\n    }\n\n    pointData() {\n        return {\n            dataItem: this.dataItem,\n            category: this.category,\n            value: this.value,\n            series: this.series\n        };\n    }\n\n    overlapsBox(box) {\n        return this.box.overlaps(box);\n    }\n}\n\nBullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n\nsetDefaultOptions(Bullet, {\n    border: {\n        width: 1\n    },\n    vertical: false,\n    opacity: 1,\n    target: {\n        shape: \"\",\n        border: {\n            width: 0,\n            color: \"green\"\n        },\n        line: {\n            width: 2\n        }\n    },\n    labels: {\n        visible: false\n    },\n    tooltip: {\n        format: \"Current: {0}<br />Target: {1}\"\n    },\n    notes: {\n        label: {}\n    }\n});\n\ndeepExtend(Bullet.prototype, PointEventsMixin);\ndeepExtend(Bullet.prototype, NoteMixin);\n\nexport default Bullet;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}