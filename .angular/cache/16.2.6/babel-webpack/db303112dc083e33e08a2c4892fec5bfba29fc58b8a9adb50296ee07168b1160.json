{"ast":null,"code":"import IntlService from './intl-service';\nimport { FORMAT_REGEX } from '../common/constants';\nimport { isString } from '../common';\nconst FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\nclass FormatService {\n  constructor(intlService) {\n    this._intlService = intlService;\n  }\n  get intl() {\n    return this._intlService || IntlService.implementation;\n  }\n  set intl(value) {\n    this._intlService = value;\n  }\n  auto(formatString, ...values) {\n    const intl = this.intl;\n    if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n      return intl.format(formatString, ...values);\n    }\n    return intl.toString(values[0], formatString);\n  }\n  localeAuto(formatString, values, locale) {\n    const intl = this.intl;\n    let result;\n    if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n      result = formatString.replace(FORMAT_REPLACE_REGEX, function (match, index, placeholderFormat) {\n        let value = values[parseInt(index, 10)];\n        return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : \"\", locale);\n      });\n    } else {\n      result = intl.toString(values[0], formatString, locale);\n    }\n    return result;\n  }\n}\nexport default FormatService;","map":{"version":3,"names":["IntlService","FORMAT_REGEX","isString","FORMAT_REPLACE_REGEX","FormatService","constructor","intlService","_intlService","intl","implementation","value","auto","formatString","values","match","format","toString","localeAuto","locale","result","replace","index","placeholderFormat","parseInt","substring"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/services/format-service.js"],"sourcesContent":["import IntlService from './intl-service';\nimport { FORMAT_REGEX } from '../common/constants';\nimport { isString } from '../common';\n\nconst FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n\nclass FormatService {\n    constructor(intlService) {\n        this._intlService = intlService;\n    }\n\n    get intl() {\n        return this._intlService || IntlService.implementation;\n    }\n\n    set intl(value) {\n        this._intlService = value;\n    }\n\n    auto(formatString, ...values) {\n        const intl = this.intl;\n\n        if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n            return intl.format(formatString, ...values);\n        }\n\n        return intl.toString(values[0], formatString);\n    }\n\n    localeAuto(formatString, values, locale) {\n        const intl = this.intl;\n        let result;\n\n        if (isString(formatString) && formatString.match(FORMAT_REGEX)) {\n            result = formatString.replace(FORMAT_REPLACE_REGEX, function(match, index, placeholderFormat) {\n                let value = values[parseInt(index, 10)];\n\n                return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : \"\", locale);\n            });\n        } else {\n            result = intl.toString(values[0], formatString, locale);\n        }\n\n        return result;\n    }\n}\n\nexport default FormatService;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,QAAQ,QAAQ,WAAW;AAEpC,MAAMC,oBAAoB,GAAG,sBAAsB;AAEnD,MAAMC,aAAa,CAAC;EAChBC,WAAWA,CAACC,WAAW,EAAE;IACrB,IAAI,CAACC,YAAY,GAAGD,WAAW;EACnC;EAEA,IAAIE,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACD,YAAY,IAAIP,WAAW,CAACS,cAAc;EAC1D;EAEA,IAAID,IAAIA,CAACE,KAAK,EAAE;IACZ,IAAI,CAACH,YAAY,GAAGG,KAAK;EAC7B;EAEAC,IAAIA,CAACC,YAAY,EAAE,GAAGC,MAAM,EAAE;IAC1B,MAAML,IAAI,GAAG,IAAI,CAACA,IAAI;IAEtB,IAAIN,QAAQ,CAACU,YAAY,CAAC,IAAIA,YAAY,CAACE,KAAK,CAACb,YAAY,CAAC,EAAE;MAC5D,OAAOO,IAAI,CAACO,MAAM,CAACH,YAAY,EAAE,GAAGC,MAAM,CAAC;IAC/C;IAEA,OAAOL,IAAI,CAACQ,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC,EAAED,YAAY,CAAC;EACjD;EAEAK,UAAUA,CAACL,YAAY,EAAEC,MAAM,EAAEK,MAAM,EAAE;IACrC,MAAMV,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,IAAIW,MAAM;IAEV,IAAIjB,QAAQ,CAACU,YAAY,CAAC,IAAIA,YAAY,CAACE,KAAK,CAACb,YAAY,CAAC,EAAE;MAC5DkB,MAAM,GAAGP,YAAY,CAACQ,OAAO,CAACjB,oBAAoB,EAAE,UAASW,KAAK,EAAEO,KAAK,EAAEC,iBAAiB,EAAE;QAC1F,IAAIZ,KAAK,GAAGG,MAAM,CAACU,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC,CAAC;QAEvC,OAAOb,IAAI,CAACQ,QAAQ,CAACN,KAAK,EAAEY,iBAAiB,GAAGA,iBAAiB,CAACE,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,EAAEN,MAAM,CAAC;MAChG,CAAC,CAAC;IACN,CAAC,MAAM;MACHC,MAAM,GAAGX,IAAI,CAACQ,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC,EAAED,YAAY,EAAEM,MAAM,CAAC;IAC3D;IAEA,OAAOC,MAAM;EACjB;AACJ;AAEA,eAAef,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}