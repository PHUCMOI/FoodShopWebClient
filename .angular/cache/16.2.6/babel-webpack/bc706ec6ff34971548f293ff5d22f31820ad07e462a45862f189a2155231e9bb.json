{"ast":null,"code":"import Matrix from '../geometry/matrix';\nimport toMatrix from '../geometry/to-matrix';\nconst IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\nconst measurable = TBase => class extends TBase {\n  bbox(transformation) {\n    const combinedMatrix = toMatrix(this.currentTransform(transformation));\n    const matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n    let bbox;\n    if (this._bboxCache && this._matrixHash === matrixHash) {\n      bbox = this._bboxCache.clone();\n    } else {\n      bbox = this._bbox(combinedMatrix);\n      this._bboxCache = bbox ? bbox.clone() : null;\n      this._matrixHash = matrixHash;\n    }\n    const strokeWidth = this.options.get(\"stroke.width\");\n    if (strokeWidth && bbox) {\n      bbox.expand(strokeWidth / 2);\n    }\n    return bbox;\n  }\n  geometryChange() {\n    delete this._bboxCache;\n    this.trigger(\"geometryChange\", {\n      element: this\n    });\n  }\n};\nexport default measurable;","map":{"version":3,"names":["Matrix","toMatrix","IDENTITY_MATRIX_HASH","IDENTITY","toString","measurable","TBase","bbox","transformation","combinedMatrix","currentTransform","matrixHash","_bboxCache","_matrixHash","clone","_bbox","strokeWidth","options","get","expand","geometryChange","trigger","element"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-drawing/dist/es2015/mixins/measurable.js"],"sourcesContent":["import Matrix from '../geometry/matrix';\nimport toMatrix from '../geometry/to-matrix';\n\nconst IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\n\nconst measurable = TBase => (\n    class extends TBase {\n        bbox(transformation) {\n            const combinedMatrix = toMatrix(this.currentTransform(transformation));\n            const matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n            let bbox;\n\n            if (this._bboxCache && this._matrixHash === matrixHash) {\n                bbox = this._bboxCache.clone();\n            } else {\n                bbox = this._bbox(combinedMatrix);\n                this._bboxCache = bbox ? bbox.clone() : null;\n                this._matrixHash = matrixHash;\n            }\n\n            const strokeWidth = this.options.get(\"stroke.width\");\n            if (strokeWidth && bbox) {\n                bbox.expand(strokeWidth / 2);\n            }\n\n            return bbox;\n        }\n\n        geometryChange() {\n            delete this._bboxCache;\n            this.trigger(\"geometryChange\", {\n                element: this\n            });\n        }\n    }\n);\n\nexport default measurable;"],"mappings":"AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,oBAAoB,GAAGF,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAAC,CAAC;AAEvD,MAAMC,UAAU,GAAGC,KAAK,IACpB,cAAcA,KAAK,CAAC;EAChBC,IAAIA,CAACC,cAAc,EAAE;IACjB,MAAMC,cAAc,GAAGR,QAAQ,CAAC,IAAI,CAACS,gBAAgB,CAACF,cAAc,CAAC,CAAC;IACtE,MAAMG,UAAU,GAAGF,cAAc,GAAGA,cAAc,CAACL,QAAQ,CAAC,CAAC,GAAGF,oBAAoB;IACpF,IAAIK,IAAI;IAER,IAAI,IAAI,CAACK,UAAU,IAAI,IAAI,CAACC,WAAW,KAAKF,UAAU,EAAE;MACpDJ,IAAI,GAAG,IAAI,CAACK,UAAU,CAACE,KAAK,CAAC,CAAC;IAClC,CAAC,MAAM;MACHP,IAAI,GAAG,IAAI,CAACQ,KAAK,CAACN,cAAc,CAAC;MACjC,IAAI,CAACG,UAAU,GAAGL,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,CAAC,GAAG,IAAI;MAC5C,IAAI,CAACD,WAAW,GAAGF,UAAU;IACjC;IAEA,MAAMK,WAAW,GAAG,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IACpD,IAAIF,WAAW,IAAIT,IAAI,EAAE;MACrBA,IAAI,CAACY,MAAM,CAACH,WAAW,GAAG,CAAC,CAAC;IAChC;IAEA,OAAOT,IAAI;EACf;EAEAa,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACR,UAAU;IACtB,IAAI,CAACS,OAAO,CAAC,gBAAgB,EAAE;MAC3BC,OAAO,EAAE;IACb,CAAC,CAAC;EACN;AACJ,CACH;AAED,eAAejB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}