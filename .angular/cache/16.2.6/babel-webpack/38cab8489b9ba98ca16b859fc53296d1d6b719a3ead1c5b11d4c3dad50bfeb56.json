{"ast":null,"code":"import { setDefaultOptions, deepExtend, defined, getSpacing } from '../../common';\nimport { Box } from '../../core';\nimport { BLACK } from '../../common/constants';\nimport { BAR_POINTER } from '../constants';\nimport Pointer from '../pointer';\nclass LinearPointer extends Pointer {\n  constructor(scale, options) {\n    super(scale, options);\n    this.options = deepExtend({\n      track: {\n        visible: defined(options.track)\n      }\n    }, this.options);\n  }\n  reflow() {\n    const {\n      options,\n      scale\n    } = this;\n    const {\n      mirror,\n      vertical\n    } = scale.options;\n    const scaleLine = scale.lineBox();\n    const trackSize = options.track.size || options.size;\n    const pointerHalfSize = options.size / 2;\n    const margin = getSpacing(options.margin);\n    let space = vertical ? margin[mirror ? \"left\" : \"right\"] : margin[mirror ? \"bottom\" : \"top\"];\n    let pointerBox, pointerRangeBox, trackBox;\n    space = mirror ? -space : space;\n    if (vertical) {\n      trackBox = new Box(scaleLine.x1 + space, scaleLine.y1, scaleLine.x1 + space, scaleLine.y2);\n      if (mirror) {\n        trackBox.x1 -= trackSize;\n      } else {\n        trackBox.x2 += trackSize;\n      }\n      if (options.shape !== BAR_POINTER) {\n        pointerRangeBox = new Box(scaleLine.x2 + space, scaleLine.y1 - pointerHalfSize, scaleLine.x2 + space, scaleLine.y2 + pointerHalfSize);\n        pointerBox = pointerRangeBox;\n      }\n    } else {\n      trackBox = new Box(scaleLine.x1, scaleLine.y1 - space, scaleLine.x2, scaleLine.y1 - space);\n      if (mirror) {\n        trackBox.y2 += trackSize;\n      } else {\n        trackBox.y1 -= trackSize;\n      }\n      if (options.shape !== BAR_POINTER) {\n        pointerRangeBox = new Box(scaleLine.x1 - pointerHalfSize, scaleLine.y1 - space, scaleLine.x2 + pointerHalfSize, scaleLine.y1 - space);\n        pointerBox = pointerRangeBox;\n      }\n    }\n    this.trackBox = trackBox;\n    this.pointerRangeBox = pointerRangeBox;\n    this.box = pointerBox || trackBox.clone().pad(options.border.width);\n  }\n  getElementOptions() {\n    const options = this.options;\n    return {\n      fill: {\n        color: options.color,\n        opacity: options.opacity\n      },\n      stroke: defined(options.border) ? {\n        color: options.border.width ? options.border.color || options.color : \"\",\n        width: options.border.width,\n        dashType: options.border.dashType,\n        opacity: options.opacity\n      } : null\n    };\n  }\n  _margin() {\n    const {\n      scale,\n      options\n    } = this;\n    const {\n      mirror,\n      vertical\n    } = scale.options;\n    const margin = getSpacing(options.margin);\n    const space = vertical ? margin[mirror ? \"left\" : \"right\"] : margin[mirror ? \"bottom\" : \"top\"];\n    return space;\n  }\n}\nsetDefaultOptions(LinearPointer, {\n  shape: BAR_POINTER,\n  track: {\n    border: {\n      width: 1\n    }\n  },\n  color: BLACK,\n  border: {\n    width: 1\n  },\n  opacity: 1,\n  margin: getSpacing(3),\n  animation: {\n    type: BAR_POINTER\n  },\n  visible: true\n});\nexport default LinearPointer;","map":{"version":3,"names":["setDefaultOptions","deepExtend","defined","getSpacing","Box","BLACK","BAR_POINTER","Pointer","LinearPointer","constructor","scale","options","track","visible","reflow","mirror","vertical","scaleLine","lineBox","trackSize","size","pointerHalfSize","margin","space","pointerBox","pointerRangeBox","trackBox","x1","y1","y2","x2","shape","box","clone","pad","border","width","getElementOptions","fill","color","opacity","stroke","dashType","_margin","animation","type"],"sources":["C:/Internship/FoodShopUI/node_modules/@progress/kendo-charts/dist/es2015/gauges/linear/linear-pointer.js"],"sourcesContent":["import { setDefaultOptions, deepExtend, defined, getSpacing } from '../../common';\nimport { Box } from '../../core';\nimport { BLACK } from '../../common/constants';\nimport { BAR_POINTER } from '../constants';\nimport Pointer from '../pointer';\n\nclass LinearPointer extends Pointer {\n    constructor(scale, options) {\n        super(scale, options);\n\n        this.options = deepExtend({\n            track: {\n                visible: defined(options.track)\n            }\n        }, this.options);\n    }\n\n    reflow() {\n        const { options, scale } = this;\n        const { mirror, vertical } = scale.options;\n        const scaleLine = scale.lineBox();\n        const trackSize = options.track.size || options.size;\n        const pointerHalfSize = options.size / 2;\n        const margin = getSpacing(options.margin);\n        let space = vertical ?\n                 margin[mirror ? \"left\" : \"right\"] :\n                 margin[mirror ? \"bottom\" : \"top\"];\n        let pointerBox, pointerRangeBox, trackBox;\n\n        space = mirror ? -space : space;\n\n        if (vertical) {\n            trackBox = new Box(\n                scaleLine.x1 + space, scaleLine.y1,\n                scaleLine.x1 + space, scaleLine.y2);\n\n            if (mirror) {\n                trackBox.x1 -= trackSize;\n            } else {\n                trackBox.x2 += trackSize;\n            }\n\n            if (options.shape !== BAR_POINTER) {\n                pointerRangeBox = new Box(\n                    scaleLine.x2 + space, scaleLine.y1 - pointerHalfSize,\n                    scaleLine.x2 + space, scaleLine.y2 + pointerHalfSize\n                );\n                pointerBox = pointerRangeBox;\n            }\n        } else {\n            trackBox = new Box(\n                scaleLine.x1, scaleLine.y1 - space,\n                scaleLine.x2, scaleLine.y1 - space);\n\n            if (mirror) {\n                trackBox.y2 += trackSize;\n            } else {\n                trackBox.y1 -= trackSize;\n            }\n\n            if (options.shape !== BAR_POINTER) {\n                pointerRangeBox = new Box(\n                    scaleLine.x1 - pointerHalfSize, scaleLine.y1 - space,\n                    scaleLine.x2 + pointerHalfSize, scaleLine.y1 - space\n                );\n                pointerBox = pointerRangeBox;\n            }\n        }\n\n        this.trackBox = trackBox;\n        this.pointerRangeBox = pointerRangeBox;\n        this.box = pointerBox || trackBox.clone().pad(options.border.width);\n    }\n\n    getElementOptions() {\n        const options = this.options;\n\n        return {\n            fill: {\n                color: options.color,\n                opacity: options.opacity\n            },\n            stroke: defined(options.border) ? {\n                color: options.border.width ? options.border.color || options.color : \"\",\n                width: options.border.width,\n                dashType: options.border.dashType,\n                opacity: options.opacity\n            } : null\n        };\n    }\n\n    _margin() {\n        const { scale, options } = this;\n        const { mirror, vertical } = scale.options;\n        const margin = getSpacing(options.margin);\n\n        const space = vertical ?\n            margin[mirror ? \"left\" : \"right\"] :\n            margin[mirror ? \"bottom\" : \"top\"];\n\n        return space;\n    }\n}\n\nsetDefaultOptions(LinearPointer, {\n    shape: BAR_POINTER,\n\n    track: {\n        border: {\n            width: 1\n        }\n    },\n\n    color: BLACK,\n    border: {\n        width: 1\n    },\n    opacity: 1,\n\n    margin: getSpacing(3),\n    animation: {\n        type: BAR_POINTER\n    },\n    visible: true\n});\n\nexport default LinearPointer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}